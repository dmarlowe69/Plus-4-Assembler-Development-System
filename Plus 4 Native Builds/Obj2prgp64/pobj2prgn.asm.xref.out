POBJ2PRGN.ASM......PAGE 0001

LINE# LOC   CODE        LINE































































OBJ2PRG"*......PAGE 0002

LINE# LOC   CODE        LINE


00003  0000              ;*********************************
00004  0000              *=$1001                ;START OF BASIC
00005  1001              ;*********************************
00006  1001              ; SET BSTUB TO ONE TO ALLOW FOR
00007  1001              ; INSERTION OF BASIC STUB CODE
00008  1001              ;*********************************
00009  1001              BSTUB  = 1
00010  1001              ;*********************************
00011  1001              ;
00012  1001              ;         OBJ2PRG64
00013  1001              ;      OBJ2PRG.C64 V072882
00014  1001              ;CONVERT OBJECT FILE FROM ASSEMBLER64
00015  1001              ;        TO PROGRAM FILE
00016  1001              ; (C) 1982 BY COMMODORE MACHINES
00017  1001              ;
00018  1001              ;  WRITTEN BY DENTON MARLOWE
00019  1001              ;*********************************
00020  1001              ;
00021  1001              ; BASIC FORMAT PROGRAM
00022  1001              ;
00023  1001              ; 10 SYS(2063)
00024  1001              ;
00025  1001              ;*********************************
00027  1001  0D 10              .WORD BASIC     ;LINE LINK POINTER
00028  1003  0A                 .BYTE $0A,$00   ;LINE NUMBER (10)
00028  1004  00 
00029  1005  9E                 .BYTE 158       ;SYS COMMAND TOKEN
00030  1006  28 34              .BYTE '(4111)'  ;CALL TO $080F
00031  100C  00                 .BYTE $00       ;END OF LINE
00032  100D              BASIC
00033  100D  00                 .BYTE $00,$00   ;END OF BASIC
00033  100E  00 
00035  100F              >
00036  100F              ;*********************************
00037  100F              ;*=$100F        ;OBJ2PRG ORGIN
00038  100F              ;*********************************
00039  100F              ; SET FLAG TO ALLOW BASIC
00040  100F              ; AND KERNAL (ERROR) MESSAGES
00041  100F              ; $80 FOR BASIC
00042  100F              ; $40 FOR KERNAL
00043  100F              ;*********************************
00044  100F              SETMSG=$FF90
00045  100F  A9 40              LDA #$40        ;ALLOW KERNAL MESSAGES
00046  1011  20 90 FF           JSR SETMSG
00047  1014              ;*********************************
00048  1014              ; MAIN BODY OF CODE
00049  1014              ;*********************************
00050  1014              .FIL   OBJ2PRGN.ASM
00051  1014              ;*********************************
00052  1014              ;
00053  1014              ;         OBJ2PRG64
00054  1014              ;      OBJ2PRG.C64 V072882
00055  1014              ;CONVERT OBJECT FILE FROM ASSEMBLER64
00056  1014              ;        TO PROGRAM FILE
00057  1014              ; (C) 1982 BY COMMODORE MACHINES






OBJ2PRG"*......PAGE 0003

LINE# LOC   CODE        LINE


00058  1014              ;
00059  1014              ;  WRITTEN BY DENTON MARLOWE
00060  1014              ;*********************************
00061  1014              ; MAIN BODY OF CODE
00062  1014              ;*********************************
00063  1014              ; ZEROPAGE USAGE EQUATES
00064  1014              ;*********************************
00065  1014              STATUS=$90             ;STATUS BYTE
00066  1014              LA     =$B8            ;CURRENT LOGICAL DEVICE NU
MBER
00067  1014              SA     =$B9            ;CURRENT SECONDARY ADDRESS

00068  1014              FA     =$BA            ;CURRENT DEVICE NUMBER
00069  1014              ;*********************************
00070  1014              ; ZEROPAGE USAGE EQUATES
00071  1014              ; $00D8-00E8  APPLICATION SOFTWARE
00072  1014              ;*********************************
00073  1014              ZEROPG=$DB             ;$FB    ;ZERO PAGE POINTER

00074  1014              ZEROUR=$DD             ;$FD    ;ZERO PAGE POINTER

00075  1014              ;*********************************
00076  1014              ; KERNAL JMUP TABLE EQUATES
00077  1014              ;*********************************
00078  1014              TALKSA=$FF96           ;SERIAL TALK SA
00079  1014              IECIN  =$FFA5          ;SERIAL IN
00080  1014              UNTALK=$FFAB           ;SERIAL UNTALK
00081  1014              STOP   =$FFE1          ;CHECK FOR STOP
00082  1014              TALK   =$FFB4          ;SERIAL TALK
00083  1014              SETLFS=$FFBA           ;SET LOGICAL FILE
00084  1014              SETNAM=$FFBD           ;SET FILENAME
00085  1014              OPEN   =$FFC0          ;OPEN FILE
00086  1014              CLOSE  =$FFC3          ;CLOSE LOGICAL FILE
00087  1014              CHKIN  =$FFC6          ;OPEN INPUT CHANNEL
00088  1014              CHKOUT=$FFC9           ;OPEN OUTPUT CHANNEL
00089  1014              CLRCHN=$FFCC           ;RESET I/O CHANNELS
00090  1014              CHRIN  =$FFCF          ;GET KEYBOARD INPUT
00091  1014              CHROUT=$FFD2           ;OUTPUT CHARACTER
00092  1014              READST=$FFB7           ;READ I/O STATUS
00093  1014              ;*********************************
00094  1014              ;
00095  1014              ; OBJ2PRG ENTRY POINT
00096  1014              ;
00097  1014              ;*********************************
00098  1014              OBJPRG =*
00099  1014  20 CC FF           JSR CLRCHN      ;RSET I/O
00100  1017  A9 00              LDA #$00        ;ZERO BYTE
00101  1019  8D 3D 13           STA RECORD      ;RECORD COUNT
00102  101C  8D 3E 13           STA RECORD+1    ;
00103  101F  8D 3F 13           STA STADD       ;START ADDRESS
00104  1022  85 90              STA STATUS      ;I/O STATUS
00105  1024  8D 42 13           STA SCROPT      ;SCREEN OUTPUT OPTION
00106  1027              ;*********************************
00107  1027              ; INIT DISK
00108  1027              ;*********************************
00109  1027              INITD  =*
00110  1027  A9 02              LDA #$02        ;LENGTH OF FILENAME
00111  1029  A0 14              LDY #>INIT      ;HIGH ADDRESS OF FILENAME
00112  102B  A2 5D              LDX #<INIT      ;LOW ADDRESS OF FILENAME






OBJ2PRG"*......PAGE 0004

LINE# LOC   CODE        LINE


00113  102D  20 BD FF           JSR SETNAM      ;SET FILE NAME
00114  1030  A9 0F              LDA #$0F        ;FILE #15
00115  1032  A2 08              LDX #$08        ;DEVICE #8
00116  1034  A0 0F              LDY #$0F        ;SECONDARY ADDRESS #15 (CM
D)
00117  1036  20 BA FF           JSR SETLFS      ;SET FILE PARAMETERS
00118  1039  20 C0 FF           JSR OPEN        ;OPEN FILE
00119  103C  A9 0F              LDA #$0F        ;FILE #15
00120  103E  20 C3 FF           JSR CLOSE       ;CLOSE IT
00121  1041  20 03 13           JSR DISERR      ;LOW LEVEL CHECK DISK ERRO
R
00122  1044  90 03              BCC INITOK      ;IF C=0 NO ERRORS
00123  1046  4C 8C 12           JMP QUITER      ;DISK ERROR, QUIT
00124  1049              ;*********************************
00125  1049              ; OPEN FILE TO SCREEN
00126  1049              ;*********************************
00127  1049              INITOK =*
00128  1049  A9 03              LDA #$03        ;FILE #3
00129  104B  A2 03              LDX #$03        ;DEVICE #3
00130  104D  A0 00              LDY #$00        ;SECOND ADDRESS
00131  104F  20 BA FF           JSR SETLFS      ;SET FILE
00132  1052              ;
00133  1052  A9 00              LDA #$00        ;GET LENGTH
00134  1054  A2 00              LDX #$00        ;LOW FILENAME
00135  1056  A0 00              LDY #$00        ;HIGH FILENAME
00136  1058  20 BD FF           JSR SETNAM      ;SET FILENAME
00137  105B  20 C0 FF           JSR OPEN        ;OPEN FILE 
00138  105E  A2 03              LDX #$03        ;FILE #3
00139  1060  20 C9 FF           JSR CHKOUT      ;SET TO OUTPUT
00140  1063              ;*********************************
00141  1063              ; PRINT TITLE
00142  1063              ;*********************************
00143  1063  A2 2F              LDX #MSG7-MSG1  ;OFFSET FOR TITLE
00144  1065  20 BA 14           JSR PRINT       ;PRINT TITLE
00145  1068              ;*********************************
00146  1068              ; PROMPT FOR OBJ FILENAME
00147  1068              ;*********************************
00148  1068  A2 6E              LDX #MSG8-MSG1  ;OFFSET FOR MSG
00149  106A  20 BA 14           JSR PRINT       ;PRG NAME:
00150  106D              ;*********************************
00151  106D              ; READ IN INTERFACE FILE NAME
00152  106D              ;*********************************
00153  106D  20 FD 14           JSR INSTNO      ;READ STRING INTO OBUF
00154  1070              ;*********************************
00155  1070              ; APPEND ,S,R
00156  1070              ;*********************************
00157  1070  A2 00       PFILE0 LDX #$00
00158  1072  BD 5F 14    PFILE1 LDA OBJM,X
00159  1075  99 39 14           STA OUF,Y
00160  1078  C8                 INY
00161  1079  E8                 INX
00162  107A  E0 04              CPX #$04
00163  107C  D0 F4              BNE PFILE1
00164  107E  8C 67 14           STY SAVO        ; LENGTH OF FILE NAME
00165  1081              ;*********************************
00166  1081              ; OUTPUT CARRAIGE RETURN
00167  1081              ;*********************************






OBJ2PRG"*......PAGE 0005

LINE# LOC   CODE        LINE


00168  1081  20 1B 15           JSR PRTCR       ;PRINT IT
00169  1084              ;*********************************
00170  1084              ; PROMPT FOR PRG FILENAME
00171  1084              ;*********************************
00172  1084  A2 82              LDX #MSG9-MSG1  ;OFFSET FOR MSG
00173  1086  20 BA 14           JSR PRINT       ;PRG NAME:
00174  1089              ;*********************************
00175  1089              ; READ IN PRG FILE NAME
00176  1089              ;*********************************
00177  1089  20 0C 15           JSR INSTNP      ;READ STRING INTO PBUF
00178  108C              ;*********************************
00179  108C              ; APPEND ,P,W
00180  108C              ;*********************************
00181  108C  A2 00       PFILE2 LDX #$00
00182  108E  BD 63 14    PFILE3 LDA PROGM,X
00183  1091  99 4B 14           STA PUF,Y
00184  1094  C8                 INY
00185  1095  E8                 INX
00186  1096  E0 04              CPX #$04
00187  1098  D0 F4              BNE PFILE3
00188  109A  8C 68 14           STY SAVP        ; LENGTH OF FILE NAME
00189  109D              ;*********************************
00190  109D              ; SCREEN OUTPUT OPTION (VERBOSE)
00191  109D              ;*********************************
00192  109D  A9 71              LDA #<MSS1      ;LOW BYTE MESSAGE
00193  109F  A0 14              LDY #>MSS1      ;HIGH BYTE MESSAGE
00194  10A1  20 D0 14           JSR STRPNT      ;OUTPUT MESSAGE
00195  10A4  20 EE 14           JSR CRNO        ;GET KEY PRESS
00196  10A7  B0 07              BCS SOP1        ;C=0 YES C=1 NO
00197  10A9  A9 00              LDA #$00        ;ZERO
00198  10AB  8D 42 13           STA SCROPT      ;PRINT TO SCREEN
00199  10AE  F0 05              BEQ OPENOF      ;SLIP NEXT
00200  10B0  A9 01       SOP1   LDA #$01        ;ONE
00201  10B2  8D 42 13           STA SCROPT      ;NO PRINT TO SCREEN 
00202  10B5              ;*********************************
00203  10B5              ; OPEN OBJECT FILE
00204  10B5              ;*********************************
00205  10B5              OPENOF =*
00206  10B5  A9 07              LDA #$07        ;FILE #7
00207  10B7  A2 08              LDX #$08        ;DEVICE #8
00208  10B9  A0 07              LDY #$07        ;SECOND ADDRESS
00209  10BB  20 BA FF           JSR SETLFS      ;SET FILE
00210  10BE              ;
00211  10BE  AD 67 14           LDA SAVO        ;GET LENGTH
00212  10C1  A2 39              LDX #<OUF       ;LOW FILENAME
00213  10C3  A0 14              LDY #>OUF       ;HIGH FILENAME
00214  10C5  20 BD FF           JSR SETNAM      ;SET FILENAME
00215  10C8              ;
00216  10C8  20 C0 FF           JSR OPEN        ;OPEN FILE
00217  10CB              ;
00218  10CB  20 03 13           JSR DISERR
00219  10CE  90 03              BCC OBJOK
00220  10D0  4C 8C 12           JMP QUITER
00221  10D3              ;*********************************
00222  10D3              ; OPEN PROGRAM FILE






OBJ2PRG"*......PAGE 0006

LINE# LOC   CODE        LINE


00223  10D3              ;*********************************
00224  10D3              OBJOK  =*
00225  10D3  A9 08              LDA #$08        ;FILE #7
00226  10D5  A2 08              LDX #$08        ;DEVICE #8
00227  10D7  A0 08              LDY #$08        ;SECOND ADDRESS
00228  10D9  20 BA FF           JSR SETLFS      ;SET FILE
00229  10DC              ;
00230  10DC  AD 68 14           LDA SAVP        ;GET LENGTH
00231  10DF  A2 4B              LDX #<PUF       ;LOW FILENAME
00232  10E1  A0 14              LDY #>PUF       ;HIGH FILENAME
00233  10E3  20 BD FF           JSR SETNAM      ;SET FILENAME
00234  10E6  20 C0 FF           JSR OPEN        ;OPEN FILE
00235  10E9              ;
00236  10E9  20 03 13           JSR DISERR
00237  10EC  90 03              BCC PRGOK
00238  10EE  4C 8C 12           JMP QUITER
00239  10F1              ;*********************************
00240  10F1              ; SET INPUT TO OBJECT FILE
00241  10F1              ;*********************************
00242  10F1              PRGOK  =*
00243  10F1  A2 07              LDX #$07        ;FILE #7
00244  10F3  20 C6 FF           JSR CHKIN       ;INPUT FILE
00245  10F6              ;*********************************
00246  10F6              ; NEW LINE - CR
00247  10F6              ;*********************************
00248  10F6  20 1B 15           JSR PRTCR       ;OUTPUT TO SCREEN
00249  10F9              ;*********************************
00250  10F9              ; LOOP
00251  10F9              ;*********************************
00252  10F9              CKSTOP =*
00253  10F9  20 E1 FF           JSR STOP        ;CHECK STOP
00254  10FC  D0 03              BNE OK2         ;IF NOT GO ON.
00255  10FE  4C 89 12           JMP BREAK       ;BREAK ERROR
00256  1101              ;*********************************
00257  1101              ; INPUT CODE IN CBM OBJECT FORMAT
00258  1101              ;*********************************
00259  1101              ; RECORD STARTS WITH ;
00260  1101              ;*********************************
00261  1101              OK2    =*
00262  1101  20 20 15           JSR INPUT       ;INPUT CHAR
00263  1104  C9 3B              CMP #';'        ;START OF RECORD
00264  1106  F0 03              BEQ ROK         ;IF EQUAL GOOD RECORD
00265  1108  4C 86 12           JMP RERROR      ;RECORD ERROR
00266  110B  20 D2 FF    ROK    JSR CHROUT      ;OUTPUT TO SCREEN
00267  110E              ;*********************************
00268  110E              ; NEXT READ TWO DIGIT BYTE COUNT
00269  110E              ;*********************************
00270  110E  20 20 15           JSR INPUT       ;INPUT CHAR
00271  1111  8D 35 14           STA DIGIT1      ;SAVE CHAR
00272  1114  20 CF FF           JSR CHRIN       ;INPUT CHAR
00273  1117  8D 36 14           STA DIGIT2      ;SAVE CHAR
00274  111A  20 D7 12           JSR GETBYT      ;GET BYTE
00275  111D  8D 3B 13           STA NUMBYT      ;NUMBER BYTES IN RECORD
00276  1120              ;*********************************
00277  1120              ; LAST RECORD AS COUNT OF ZERO






OBJ2PRG"*......PAGE 0007

LINE# LOC   CODE        LINE


00278  1120              ;*********************************
00279  1120  C9 00              CMP #$00        ;IF BYTE COUNT ZERO
00280  1122  D0 08              BNE GOON        ;NO THEN CONTINUE
00281  1124  A2 BE              LDX #MSG16-MSG1 ;OFFSET COUNT
00282  1126  20 BA 14           JSR PRINT       ;PRINT HEADING
00283  1129  4C 8C 12           JMP QUITER      ;DONE
00284  112C              ;*********************************
00285  112C              ; PRINT NUMBER BYTES
00286  112C              ;*********************************
00287  112C              GOON   =*
00288  112C  AD 42 13           LDA SCROPT
00289  112F  D0 14              BNE SKIP1
00290  1131              ;
00291  1131  A2 95              LDX #MSG12-MSG1 ;OFFSET COUNT
00292  1133  20 BA 14           JSR PRINT       ;PRINT HEADING
00293  1136  AD 35 14           LDA DIGIT1      ;GET CHAR
00294  1139  20 D2 FF           JSR CHROUT      ;PRINT IT
00295  113C  AD 36 14           LDA DIGIT2      ;GET CHAR
00296  113F  20 D2 FF           JSR CHROUT      ;PRINT IT
00297  1142  20 1B 15           JSR PRTCR       ;PRINT CR
00298  1145              ;*********************************
00299  1145              ; INPUT RECORD ADDRESS
00300  1145              ;*********************************
00301  1145              SKIP1  =*
00302  1145  20 20 15           JSR INPUT       ;INPUT CHAR
00303  1148  8D 35 14           STA DIGIT1      ;SAVE CHAR
00304  114B  20 CF FF           JSR CHRIN       ;INPUT CHAR
00305  114E  8D 36 14           STA DIGIT2      ;SAVE CHAR
00306  1151  20 CF FF           JSR CHRIN       ;INPUT CHAR
00307  1154  8D 37 14           STA DIGIT3      ;SAVE CHAR
00308  1157  20 CF FF           JSR CHRIN       ;INPUT CHAR
00309  115A  8D 38 14           STA DIGIT4      ;SAVE CHAR
00310  115D  20 A4 12           JSR GETADD      ;GET BYTE
00311  1160  AD 3F 13           LDA STADD       ;CHECK START ADDRESS FLAG
00312  1163  D0 27              BNE SKPADD      ;IF NOT ZERO WE HAVE ALREA
DY WRITTEN ADDRESS
00313  1165              ;*********************************
00314  1165              ; ONE TIME PRINT ADDRESS TO FILE
00315  1165              ;*********************************
00316  1165  A2 08              LDX #$08        ;FILE #8
00317  1167  20 C9 FF           JSR CHKOUT      ;SET TO OUTPUT
00318  116A  AD 6C 14           LDA ADDLO       ;LOW BYTE ADDRESS
00319  116D  20 D2 FF           JSR CHROUT      ;WRITE IT TO FILE
00320  1170  AD 6B 14           LDA ADDHI       ;HIGH BYTE ADDRESS
00321  1173  20 D2 FF           JSR CHROUT      ;WRITE IT TO FILE
00322  1176  A2 03              LDX #$03        ;FILE #3
00323  1178  20 C9 FF           JSR CHKOUT      ;SET TO OUTPUT
00324  117B              ;*********************************
00325  117B              ; SAVE INITIAL PROGRAM MEMORY ADDRESS
00326  117B              ;*********************************
00327  117B  AD 6C 14           LDA ADDLO
00328  117E  8D 69 14           STA RECLO       ;RECORD ADDRESS LOW BYTE
00329  1181  AD 6B 14           LDA ADDHI
00330  1184  8D 6A 14           STA RECHI       ;RECORD ADDRESS HIGH BYTE
00331  1187              ;*********************************
00332  1187              ; SET FLAG TO SKIP PRINTING ADDRESS






OBJ2PRG"*......PAGE 0008

LINE# LOC   CODE        LINE


00333  1187              ;*********************************
00334  1187  A9 01              LDA #$01        ;LOAD NONZERO VALUE
00335  1189  8D 3F 13           STA STADD       ;SET START ADDRESS FLAG
00336  118C              ;*********************************
00337  118C              ; PRINT ADDRESS
00338  118C              ;*********************************
00339  118C              SKPADD =*
00340  118C              ;*********************************
00341  118C              ; CHECK RECORD ADDRESS TO MAKE SURE
00342  118C              ; THE OBJECT FILE IS CONTIGOUS
00343  118C              ;*********************************
00344  118C  AD 69 14           LDA RECLO
00345  118F  CD 6C 14           CMP ADDLO
00346  1192  D0 08              BNE NONC
00347  1194  AD 6A 14           LDA RECHI
00348  1197  CD 6B 14           CMP ADDHI
00349  119A  F0 08              BEQ YESC
00350  119C              NONC   = *
00351  119C  A2 CB              LDX #MSG17-MSG1 ;OFFSET ADDRESS
00352  119E  20 BA 14           JSR PRINT       ;PRINT HEADING
00353  11A1                                     ;JMP QUITER
00354  11A1  20 29 15           JSR PADIT
00355  11A4              ;*********************************
00356  11A4              ; PRINT ADDRESS
00357  11A4              ;*********************************
00358  11A4              YESC   =*
00359  11A4  AD 42 13           LDA SCROPT
00360  11A7  D0 25              BNE SKIP2
00361  11A9              ;
00362  11A9  A2 8C              LDX #MSG11-MSG1 ;OFFSET ADDRESS
00363  11AB  20 BA 14           JSR PRINT       ;PRINT HEADING
00364  11AE  AD 35 14           LDA DIGIT1      ;GET CHAR
00365  11B1  20 D2 FF           JSR CHROUT      ;PRINT IT
00366  11B4  AD 36 14           LDA DIGIT2      ;GET CHAR
00367  11B7  20 D2 FF           JSR CHROUT      ;PRINT IT
00368  11BA  AD 37 14           LDA DIGIT3      ;GET CHAR
00369  11BD  20 D2 FF           JSR CHROUT      ;PRINT IT
00370  11C0  AD 38 14           LDA DIGIT4      ;GET CHAR
00371  11C3  20 D2 FF           JSR CHROUT      ;PRINT IT
00372  11C6  20 1B 15           JSR PRTCR       ;PRINT CR
00373  11C9              ;*********************************
00374  11C9              ; PRINT BYTE DATA HEADER
00375  11C9              ;*********************************
00376  11C9  A2 9C              LDX #MSG13-MSG1 ;OFFSET BYTE DATA
00377  11CB  20 BA 14           JSR PRINT       ;PRINT HEADING
00378  11CE              ;*********************************
00379  11CE              ; INPUT RECORD
00380  11CE              ;*********************************
00381  11CE              SKIP2  =*
00382  11CE  A2 00              LDX #$00
00383  11D0  8E 3C 13           STX CURBYT
00384  11D3              ;*********************************
00385  11D3              ; INPUT RECORD BYTE DATA
00386  11D3              ;*********************************
00387  11D3              NEXTBY =*






OBJ2PRG"*......PAGE 0009

LINE# LOC   CODE        LINE


00388  11D3  20 20 15           JSR INPUT       ;INPUT CHAR
00389  11D6  8D 35 14           STA DIGIT1      ;SAVE CHAR
00390  11D9  20 CF FF           JSR CHRIN       ;INPUT CHAR
00391  11DC  8D 36 14           STA DIGIT2      ;SAVE CHAR
00392  11DF  20 D7 12           JSR GETBYT      ;GET BYTE
00393  11E2  AE 3C 13           LDX CURBYT      ;GET CURRENT BYTE COUNTER
00394  11E5  8D 6D 14           STA CURDAT      ;SAVE CURRENT BYTE
00395  11E8  9D EC 15           STA DATA,X      ;SAVE BYTE IN RECORD BUFFE
R
00396  11EB              ;*********************************
00397  11EB              ; PRINT BYTE TO FILE 
00398  11EB              ;*********************************
00399  11EB  20 CC FF           JSR CLRCHN      ;RESET I/O 
00400  11EE  A2 08              LDX #$08        ;FILE #8
00401  11F0  20 C9 FF           JSR CHKOUT      ;SET TO OUTPUT
00402  11F3  AD 6D 14           LDA CURDAT      ;DATA BYTE
00403  11F6  20 D2 FF           JSR CHROUT      ;WRITE IT TO FILE
00404  11F9  20 CC FF           JSR CLRCHN      ;RESET I/O 
00405  11FC  A2 03              LDX #$03        ;FILE #3
00406  11FE  20 C9 FF           JSR CHKOUT      ;SET TO OUTPUT
00407  1201              ;*********************************
00408  1201              ; PRINT BYTE TO SCREEN 
00409  1201              ;*********************************
00410  1201  AD 42 13           LDA SCROPT
00411  1204  D0 11              BNE SKIP3
00412  1206              ;
00413  1206  AD 35 14           LDA DIGIT1
00414  1209  20 D2 FF           JSR CHROUT
00415  120C  AD 36 14           LDA DIGIT2
00416  120F  20 D2 FF           JSR CHROUT
00417  1212  A9 20              LDA #' '
00418  1214  20 D2 FF           JSR CHROUT 
00419  1217              ;
00420  1217              SKIP3  =*
00421  1217  AE 3C 13           LDX CURBYT
00422  121A  E8                 INX
00423  121B  8E 3C 13           STX CURBYT
00424  121E  EC 3B 13           CPX NUMBYT
00425  1221  D0 B0              BNE NEXTBY
00426  1223              ;*********************************
00427  1223              ; INPUT RECORD CHECKSUM
00428  1223              ;*********************************
00429  1223  20 20 15           JSR INPUT       ;INPUT CHAR
00430  1226  8D 35 14           STA DIGIT1      ;SAVE CHAR
00431  1229  20 CF FF           JSR CHRIN       ;INPUT CHAR
00432  122C  8D 36 14           STA DIGIT2      ;SAVE CHAR
00433  122F  20 CF FF           JSR CHRIN       ;INPUT CHAR
00434  1232  8D 37 14           STA DIGIT3      ;SAVE CHAR
00435  1235  20 CF FF           JSR CHRIN       ;INPUT CHAR
00436  1238  8D 38 14           STA DIGIT4      ;SAVE CHAR
00437  123B  20 A4 12           JSR GETADD      ;CONVERT TO WORD
00438  123E              ;*********************************
00439  123E              ; PRINT 4 BYTE CHECKSUM
00440  123E              ;*********************************
00441  123E  AD 42 13           LDA SCROPT
00442  1241  D0 1D              BNE SKIP4






OBJ2PRG"*......PAGE 0010

LINE# LOC   CODE        LINE


00443  1243              ;
00444  1243  A2 A7              LDX #MSG14-MSG1 ;OFFSET ADDRESS
00445  1245  20 BA 14           JSR PRINT       ;PRINT HEADING
00446  1248  AD 35 14           LDA DIGIT1
00447  124B  20 D2 FF           JSR CHROUT
00448  124E  AD 36 14           LDA DIGIT2
00449  1251  20 D2 FF           JSR CHROUT
00450  1254  AD 37 14           LDA DIGIT3
00451  1257  20 D2 FF           JSR CHROUT
00452  125A  AD 38 14           LDA DIGIT4
00453  125D  20 D2 FF           JSR CHROUT
00454  1260              ;*********************************
00455  1260              ; READ AND PRINT RECORD END CR
00456  1260              ;*********************************
00457  1260              SKIP4  =*
00458  1260  20 20 15           JSR INPUT       ;INPUT CHAR
00459  1263  AD 42 13           LDA SCROPT
00460  1266  D0 06              BNE SKIP5
00461  1268  20 D2 FF           JSR CHROUT      ;PRINT IT
00462  126B              ;*********************************
00463  126B              ; NEXT LINE ON DISPLAY
00464  126B              ;*********************************
00465  126B  20 1B 15           JSR PRTCR       ;PRINT CR
00466  126E              ;*********************************
00467  126E              ; NEXT RECORD
00468  126E              ;*********************************
00469  126E              SKIP5  =*
00470  126E              ;*********************************
00471  126E              ; ADVANCE RECORD ADDRESS BY NUMBER BYTES
00472  126E              ; READ IN TO CHECK NEXT RECORD
00473  126E              ; FOR CONTIGUOUS MEMORY
00474  126E              ;*********************************
00475  126E  18                 CLC
00476  126F  AD 3B 13           LDA NUMBYT
00477  1272  6D 69 14           ADC RECLO
00478  1275  8D 69 14           STA RECLO
00479  1278  A9 00              LDA #$00
00480  127A  6D 6A 14           ADC RECHI
00481  127D  8D 6A 14           STA RECHI
00482  1280              ;*********************************
00483  1280              ; NEXT RECORD
00484  1280              ;*********************************
00485  1280  4C F9 10           JMP CKSTOP      ;NEXT RECORD
00486  1283              ;*********************************
00487  1283              ; ERRORS
00488  1283              ;*********************************
00489  1283              ; PADDING NEGATIVE ERROR
00490  1283              ;*********************************
00491  1283              PADERR =*
00492  1283  A2 09              LDX #MSG4-MSG1  ;OFFSET ADDRESS
00493  1285  2C                 .BYTE $2C       ;BIT TRICK TO SKIP
00494  1286              ;*********************************
00495  1286              ;RECORD ERROR
00496  1286              ;*********************************
00497  1286              RERROR =*






OBJ2PRG"*......PAGE 0011

LINE# LOC   CODE        LINE


00498  1286  A2 09              LDX #MSG4-MSG1  ;OFFSET FOR MSG
00499  1288  2C                 .BYTE $2C       ;BIT TRICK TO SKIP
00500  1289              ;*********************************
00501  1289              ; BREAK MESSAGE - STOP KEY PRESSED
00502  1289              ;*********************************
00503  1289              BREAK  =* 
00504  1289  A2 02              LDX #MSG2-MSG1  ;BREAK ERROR
00505  128B  2C                 .BYTE $2C       ;BIT TRICK TO SKIP
00506  128C              ;*********************************
00507  128C              ; END OF RECORDS - CLOSE OUT
00508  128C              ;*********************************
00509  128C              QUITER =*
00510  128C  A2 B1              LDX #MSG15-MSG1 ;END OF FILE
00511  128E              ;*********************************
00512  128E              ; OUTPUT MESSAGE TO SCREEN
00513  128E              ;*********************************
00514  128E  20 BA 14           JSR PRINT       ;PRINT HEADING
00515  1291              ;*********************************
00516  1291              ; CLOSE OUT FILE AND RESET I/O
00517  1291              ;*********************************
00518  1291  A9 03              LDA #$03        ;FILE #7
00519  1293  20 C3 FF           JSR CLOSE       ;CLOSE
00520  1296  A9 07              LDA #$07        ;FILE #7
00521  1298  20 C3 FF           JSR CLOSE       ;CLOSE
00522  129B  A9 08              LDA #$08        ;FILE #7
00523  129D  20 C3 FF           JSR CLOSE       ;CLOSE
00524  12A0  20 CC FF           JSR CLRCHN      ;RESET I/O 
00525  12A3  60                 RTS             ;BACK TO BASIC
00526  12A4              ;*********************************
00527  12A4              ; INPUT CHARACTER INTO BYTE
00528  12A4              ; CREATE BYTE FORM 2 ASCII CHARS
00529  12A4              ;*********************************
00530  12A4              GETADD =*
00531  12A4  AD 35 14           LDA DIGIT1
00532  12A7  20 EE 12           JSR BYTASC      ;GET HIGH NIBBLE
00533  12AA  0A                 ASL A           ;LEFT JUSTIFY
00534  12AB  0A                 ASL A           ; ASCII CHAR
00535  12AC  0A                 ASL A           ;  IN HIGH
00536  12AD  0A                 ASL A           ;   NIBBLE
00537  12AE  8D 41 13           STA TEMP        ;STORE
00538  12B1  AD 36 14           LDA DIGIT2      ;INPUT CHAR
00539  12B4  20 EE 12           JSR BYTASC      ;CREATE LOW NIB
00540  12B7  0D 41 13           ORA TEMP         ;PUT IN PLACE
00541  12BA  8D 6B 14           STA ADDHI        ;HIGH NIBBLE
00542  12BD              ;
00543  12BD  AD 37 14           LDA DIGIT3
00544  12C0  20 EE 12           JSR BYTASC      ;GET HIGH NIBBLE
00545  12C3  0A                 ASL A           ;LEFT JUSTIFY
00546  12C4  0A                 ASL A           ; ASCII CHAR
00547  12C5  0A                 ASL A           ;  IN HIGH
00548  12C6  0A                 ASL A           ;   NIBBLE
00549  12C7  8D 41 13           STA TEMP        ;STORE
00550  12CA  AD 38 14           LDA DIGIT4      ;INPUT CHAR
00551  12CD  20 EE 12           JSR BYTASC      ;CREATE LOW NIB
00552  12D0  0D 41 13           ORA TEMP        ;PUT IN PLACE






OBJ2PRG"*......PAGE 0012

LINE# LOC   CODE        LINE


00553  12D3  8D 6C 14           STA ADDLO       ;LO NIBBLE
00554  12D6              ;
00555  12D6  60                 RTS             ;RETURN
00556  12D7              ;*********************************
00557  12D7              ; INPUT CHARACTER INTO BYTE
00558  12D7              ; CREATE BYTE FORM 2 ASCII CHARS
00559  12D7              ;*********************************
00560  12D7              GETBYT =*
00561  12D7  AD 35 14           LDA DIGIT1
00562  12DA  20 EE 12           JSR BYTASC      ;GET HIGH NIBBLE
00563  12DD  0A                 ASL A           ;LEFT JUSTIFY
00564  12DE  0A                 ASL A           ; ASCII CHAR
00565  12DF  0A                 ASL A           ;  IN HIGH
00566  12E0  0A                 ASL A           ;   NIBBLE
00567  12E1  8D 41 13           STA TEMP        ;STORE
00568  12E4  AD 36 14           LDA DIGIT2      ;INPUT CHAR
00569  12E7  20 EE 12           JSR BYTASC      ;CREATE LOW NIB
00570  12EA  0D 41 13           ORA TEMP        ;PUT IN PLACE
00571  12ED  60                 RTS             ;RETURN
00572  12EE              ;*********************************
00573  12EE              ; CONVERT ASCII TO BYTE DATA
00574  12EE              ;*********************************
00575  12EE  C9 3A       BYTASC CMP #$3A        ;IS CHAR >9
00576  12F0  08                 PHP             ;PUSH P
00577  12F1  29 0F              AND #$0F        ;MASK HIGH BYTE
00578  12F3  28                 PLP             ;PULL P
00579  12F4  90 02              BCC EXIT1       ;IF <=9 OK
00580  12F6  69 08              ADC #$08        ;ADD OFFSET
00581  12F8  60          EXIT1  RTS             ;RETURN
00582  12F9              ;*********************************
00583  12F9              ; CONVERT BYTE TO ASCII CHAR
00584  12F9              ;*********************************
00585  12F9  18          CHGASC CLC             ;CLEAR CARRY
00586  12FA  69 F6              ADC #$F6        ;ADD OFFSET
00587  12FC  90 02              BCC NOSIX       ;IF C=0 OK
00588  12FE  69 06              ADC #$06        ;ADD OFFSSET
00589  1300  69 3A       NOSIX  ADC #$3A        ;ADD OFFSET
00590  1302  60                 RTS             ;RETURN
00591  1303              ;*********************************
00592  1303              ;  DISK ERROR CHECK
00593  1303              ;*********************************
00594  1303  A9 08       DISERR LDA #$08        ;DEV #8
00595  1305  85 BA              STA FA          ;PUT IN DEV TABLE
00596  1307  20 B4 FF           JSR TALK        ;SEND TALK
00597  130A  A9 6F              LDA #$6F        ;SECONDARY ADDRESS
00598  130C  85 B9              STA SA          ;PUT IN TABLE
00599  130E  20 96 FF           JSR TALKSA      ;SEND SEC
00600  1311  20 A5 FF           JSR IECIN       ;GET FIRST BYTE
00601  1314  C9 30              CMP #'0'        ;IS IT A ZERO
00602  1316  D0 0C              BNE DLOOC       ;IF NOT ZERO ERROR
00603  1318  20 A5 FF    DLOOE  JSR IECIN       ;GET BYTE
00604  131B  C9 0D              CMP #$0D        ;IS IT CR?
00605  131D  D0 F9              BNE DLOOE       ;GET NEXT BYTE
00606  131F  20 AB FF           JSR UNTALK      ;UNTALK
00607  1322  18                 CLC             ;NO ERROR FLAG






OBJ2PRG"*......PAGE 0013

LINE# LOC   CODE        LINE


00608  1323  60                 RTS             ;RETURN
00609  1324              ;*********************************
00610  1324              ; PRINT DISK ERROR
00611  1324              ;*********************************
00612  1324  48          DLOOC  PHA             ;STACK BYTE
00613  1325  20 1B 15           JSR PRTCR       ;PRINT CR
00614  1328  68                 PLA             ;GET BYTE
00615  1329  20 D2 FF           JSR CHROUT      ;PRINT IT
00616  132C  20 A5 FF    DLOOA  JSR IECIN       ;GET NEXT BYTE
00617  132F  20 D2 FF           JSR CHROUT      ;PRINT IT
00618  1332  C9 0D              CMP #$0D        ;IS IT CR
00619  1334  D0 F6              BNE DLOOA       ;GET NEXT BYTE
00620  1336  20 AB FF           JSR UNTALK      ;UNTALK
00621  1339  38                 SEC             ;SET ERROR FLAG
00622  133A  60                 RTS             ;RETURN
00623  133B              ;*********************************
00624  133B              ; STORAGE
00625  133B              ;*********************************
00626  133B  AA          NUMBYT .BYTE $AA       ;NUMBER BYTES
00627  133C  AA          CURBYT .BYTE $AA       ;CURRENT BYTE IN RECORD
00628  133D  AA AA       RECORD .WORD $AAAA     ;RECORD NUMBER
00629  133F  AA          STADD  .BYTE $AA       ;START ADDRESS
00630  1340  AA          COUNT  .BYTE $AA       ;COUNTER
00631  1341  AA          TEMP   .BYTE $AA       ;TEMPOARY
00632  1342  AA          SCROPT .BYTE $AA       ;SCREEN OUPUT OPTION
00633  1343              ;*********************************
00634  1343  AA          COUNT1 .BYTE $AA       ;COUNTER
00635  1344              ;*********************************
00636  1344              ; ERROR MESSAGES
00637  1344              ;*********************************
00638  1344  0D          MSG1   .BYTE $0D,$8D
00638  1345  8D 
00639  1346  0D          MSG2   .BYTE $0D
00640  1347  42 52       .BYTE  'BREAK',$8D
00640  134C  8D 
00641  134D  0D          MSG4   .BYTE $0D
00642  134E  42 41       .BYTE  'BAD RECORD',$8D
00642  1358  8D 
00643  1359  0D          MSG5   .BYTE $0D
00644  135A  43 48       .BYTE  'CHECKSUM ERRO',$D2
00644  1367  D2 
00645  1368  0D          MSG6   .BYTE $0D
00646  1369  46 49       .BYTE  'FILE ERRO',$D2
00646  1372  D2 
00647  1373              ;*********************************
00648  1373              ; MESSAGES
00649  1373              ;*********************************
00650  1373  0D          MSG7   .BYTE $0D,$0D,$0D
00650  1374  0D 
00650  1375  0D 
00651  1376  4F 42       .BYTE  'OBJ2PRG.C64 V072882'
00652  1389  0D          .BYTE  $0D
00653  138A  28 43       .BYTE  '(C) 1982 BY COMMODORE BUSINESS '
00654  13A9  4D 41       .BYTE  'MACHINES'
00655  13B1  A0          .BYTE  $A0






OBJ2PRG"*......PAGE 0014

LINE# LOC   CODE        LINE


00656  13B2  0D          MSG8   .BYTE $0D
00657  13B3  4F 42       .BYTE  'OBJECT FILE NAME ?',$A0
00657  13C5  A0 
00658  13C6  0D          MSG9   .BYTE $0D
00659  13C7  50 52       .BYTE  'PRG NAME',$BA
00659  13CF  BA 
00660  13D0  0D          MSG11  .BYTE $0D
00661  13D1  41 44       .BYTE  'ADDRESS',$A0
00661  13D8  A0 
00662  13D9  0D          MSG12  .BYTE $0D
00663  13DA  43 4F       .BYTE  'COUNT',$A0
00663  13DF  A0 
00664  13E0  0D          MSG13  .BYTE $0D
00665  13E1  42 59       .BYTE  'BYTE DATA',$8D
00665  13EA  8D 
00666  13EB  0D          MSG14  .BYTE $0D
00667  13EC  43 48       .BYTE  'CHECKSUM',$A0
00667  13F4  A0 
00668  13F5  0D          MSG15  .BYTE $0D
00669  13F6  45 4E       .BYTE  'END OF FILE',$8D
00669  1401  8D 
00670  1402  0D          MSG16  .BYTE $0D
00671  1403  4C 41       .BYTE  'LAST RECORD',$8D
00671  140E  8D 
00672  140F  0D          MSG17  .BYTE $0D
00673  1410  46 49       .BYTE  'FILE IS NON CONTIGUOUS',$8D
00673  1426  8D 
00674  1427  0D          MSG18  .BYTE $0D
00675  1428  50 41       .BYTE  'PADDING FILE',$8D
00675  1434  8D 
00676  1435              ;*********************************
00677  1435              ; HEX DIGITS
00678  1435              ;*********************************
00679  1435  AA          DIGIT1 .BYTE $AA
00680  1436  AA          DIGIT2 .BYTE $AA
00681  1437  AA          DIGIT3 .BYTE $AA
00682  1438  AA          DIGIT4 .BYTE $AA
00683  1439              ;*********************************
00684  1439              ; FILENAME NAME BUFFER
00685  1439              ;*********************************
00686  1439  AA          OUF    .BYTE $AA,$AA,$AA,$AA,$AA,$AA
00686  143A  AA 
00686  143B  AA 
00686  143C  AA 
00686  143D  AA 
00686  143E  AA 
00687  143F  AA          .BYTE  $AA,$AA,$AA,$AA,$AA,$AA
00687  1440  AA 
00687  1441  AA 
00687  1442  AA 
00687  1443  AA 
00687  1444  AA 
00688  1445  AA          .BYTE  $AA,$AA,$AA,$AA,$AA,$AA
00688  1446  AA 
00688  1447  AA 






OBJ2PRG"*......PAGE 0015

LINE# LOC   CODE        LINE


00688  1448  AA 
00688  1449  AA 
00688  144A  AA 
00689  144B              ;*********************************
00690  144B              ; FILENAME NAME BUFFER
00691  144B              ;*********************************
00692  144B  AA          PUF    .BYTE $AA,$AA,$AA,$AA,$AA,$AA
00692  144C  AA 
00692  144D  AA 
00692  144E  AA 
00692  144F  AA 
00692  1450  AA 
00693  1451  AA          .BYTE  $AA,$AA,$AA,$AA,$AA,$AA
00693  1452  AA 
00693  1453  AA 
00693  1454  AA 
00693  1455  AA 
00693  1456  AA 
00694  1457  AA          .BYTE  $AA,$AA,$AA,$AA,$AA,$AA
00694  1458  AA 
00694  1459  AA 
00694  145A  AA 
00694  145B  AA 
00694  145C  AA 
00695  145D              ;*********************************
00696  145D              ; INIT DISK
00697  145D              ;*********************************
00698  145D  49 30       INIT   .BYTE 'I0'
00699  145F              ;*********************************
00700  145F  2C 53       OBJM   .BYTE ',S,R'
00701  1463              ;*********************************
00702  1463  2C 50       PROGM  .BYTE ',P,W'
00703  1467              ;*********************************
00704  1467  AA          SAVO   .BYTE $AA
00705  1468  AA          SAVP   .BYTE $AA
00706  1469              ;*********************************
00707  1469              ; CURRENT RECORD ADDRESS
00708  1469              ;*********************************
00709  1469  AA          RECLO  .BYTE $AA
00710  146A  AA          RECHI  .BYTE $AA
00711  146B              ;*********************************
00712  146B              ; CURRENT ADDRESS AND DATA
00713  146B              ;*********************************
00714  146B  AA          ADDHI  .BYTE $AA
00715  146C  AA          ADDLO  .BYTE $AA
00716  146D  AA          CURDAT .BYTE $AA
00717  146E              ;*********************************
00718  146E              ; PADDING BYTES FOR NON-CONTIGUOS FILE
00719  146E              ;*********************************
00720  146E  00 00       NUMPAD .WORD $0000
00721  1470  AA          PADBYT .BYTE $AA
00722  1471              ;*********************************
00723  1471              ; OUTPUT TO SCREEN OPTION
00724  1471              ;*********************************
00725  1471  0D          MSS1   .BYTE $0D






OBJ2PRG"*......PAGE 0016

LINE# LOC   CODE        LINE


00726  1472  4F 55              .BYTE 'OUTPUT TO SCREEN (Y OR N/CR)? '
00727  1490  00                 .BYTE 0
00728  1491              ;*********************************
00729  1491              ; PADDING ERROR
00730  1491              ;*********************************
00731  1491  0D          MSE1   .BYTE $0D
00732  1492  50 41       .BYTE  'PADDING NEGATIVE - PRG '
00733  14A9  46 49       .BYTE  'FILE INCOMPLETE',$0D
00733  14B8  0D 
00734  14B9  00          .BYTE  0
00735  14BA              ;*********************************
00736  14BA              ; OUTPUT STRING ROUTINE
00737  14BA              ;*********************************
00738  14BA  8E 40 13    PRINT  STX COUNT       ;PUT X IN COUNT
00739  14BD  AE 40 13    PLOOP  LDX COUNT       ;LOAD X FROM COUNT
00740  14C0  BD 44 13           LDA MSG1,X      ;LOAD CHAR
00741  14C3  08                 PHP             ;SAVE STATUS FLAG
00742  14C4  29 7F              AND #$7F        ;MASK BIT 8
00743  14C6  20 D2 FF           JSR CHROUT      ;PRINT CHAR
00744  14C9  EE 40 13           INC COUNT       ;INC OFFSET
00745  14CC  28                 PLP             ;GET STATUS FLAG
00746  14CD  10 EE              BPL PLOOP       ;IF BIT 8 ZERO
00747  14CF  60                 RTS             ;RETURN
00748  14D0              ;*********************************
00749  14D0              ; OUTPUT UTILITIES
00750  14D0              ;*********************************
00751  14D0              ; STRING OUTPUT ROUTINE
00752  14D0              ;*********************************
00753  14D0  85 DD       STRPNT STA ZEROUR      ;POINTER TO
00754  14D2  84 DE              STY ZEROUR+1    ;MESSAGE
00755  14D4  A0 00              LDY #$00        ;OFFSET
00756  14D6  B1 DD       SOUT   LDA (ZEROUR),Y  ;GET CHAR
00757  14D8  F0 06              BEQ SEXIT       ;IF ZERO EXIT
00758  14DA  20 D2 FF           JSR CHROUT      ;PRINT
00759  14DD  C8                 INY             ;INC OFFSET
00760  14DE  D0 F6              BNE SOUT        ;LOOP
00761  14E0  60          SEXIT  RTS             ;RETURN
00762  14E1              ;*********************************
00763  14E1              ; INPUT UTILITIES
00764  14E1              ;*********************************
00765  14E1              ; GET OPTION (CR/Y OR N): Y=C=0
00766  14E1              ;*********************************
00767  14E1  20 CF FF    CRYS   JSR CHRIN
00768  14E4  C9 59              CMP #'Y'
00769  14E6  F0 11              BEQ CRYS1
00770  14E8  C9 0D              CMP #$0D
00771  14EA  F0 0D              BEQ CRYS1
00772  14EC  D0 0D              BNE CRNO1
00773  14EE              ;*********************************
00774  14EE              ; GET OPTION (Y OR CR/N): Y=C=0
00775  14EE              ;*********************************
00776  14EE  20 CF FF    CRNO   JSR CHRIN
00777  14F1  C9 4E              CMP #'N'
00778  14F3  F0 06              BEQ CRNO1
00779  14F5  C9 0D              CMP #$0D






OBJ2PRG"*......PAGE 0017

LINE# LOC   CODE        LINE


00780  14F7  F0 02              BEQ CRNO1
00781  14F9  18          CRYS1  CLC
00782  14FA  60                 RTS
00783  14FB  38          CRNO1  SEC
00784  14FC  60                 RTS
00785  14FD              ;*********************************
00786  14FD              ; INPUT STRING ROUTINE
00787  14FD              ;*********************************
00788  14FD  A0 00       INSTNO LDY #$00
00789  14FF  20 CF FF    INSTN1 JSR CHRIN
00790  1502  99 39 14           STA OUF,Y
00791  1505  C8                 INY
00792  1506  C9 0D              CMP #$0D
00793  1508  D0 F5              BNE INSTN1
00794  150A  88                 DEY
00795  150B  60                 RTS
00796  150C              ;*********************************
00797  150C              ; INPUT STRING ROUTINE
00798  150C              ;*********************************
00799  150C  A0 00       INSTNP LDY #$00
00800  150E  20 CF FF    INSTN2 JSR CHRIN
00801  1511  99 4B 14           STA PUF,Y
00802  1514  C8                 INY
00803  1515  C9 0D              CMP #$0D
00804  1517  D0 F5              BNE INSTN2
00805  1519  88                 DEY
00806  151A  60                 RTS
00807  151B              ;*********************************
00808  151B              ; OUTPUT CARRAIGE RETURN
00809  151B              ;*********************************
00810  151B  A9 0D       PRTCR  LDA #$0D        ;ASCII CR
00811  151D  4C D2 FF           JMP CHROUT      ;PRINT IT
00812  1520              ;*********************************
00813  1520              ; 
00814  1520              ;*********************************
00815  1520              INPUT  = *
00816  1520  A2 07              LDX #$07        ;FILE #7
00817  1522  20 C6 FF           JSR CHKIN       ;INPUT FILE
00818  1525  20 CF FF           JSR CHRIN       ;INPUT CHAR
00819  1528  60                 RTS
00820  1529              ;*********************************
00821  1529              ; OBJECT FILE IN NON-CONTIGUOUS
00822  1529              ; PAD PROGRAM FILE AS REQUIRE 
00823  1529              ;*********************************
00824  1529              PADIT  =*
00825  1529  A2 E3              LDX #MSG18-MSG1 ;OFFSET ADDRESS
00826  152B  20 BA 14           JSR PRINT       ;PRINT HEADING
00827  152E              ;
00828  152E              ; CALUCLTE NUMBER OF BYTES TO PAD
00829  152E              ;
00830  152E  38                 SEC             ;SUBTRACK
00831  152F  AD 6C 14           LDA ADDLO       ;EXPECTED ADDRESS
00832  1532  ED 69 14           SBC RECLO       ;FROM RECORD
00833  1535  8D 6E 14           STA NUMPAD      ;ADDRESS TO
00834  1538  AD 6B 14           LDA ADDHI       ;DETERMINE






OBJ2PRG"*......PAGE 0018

LINE# LOC   CODE        LINE


00835  153B  ED 6A 14           SBC RECHI       ;NUMBER OF BYTES
00836  153E  8D 6F 14           STA NUMPAD+1    ;TO PAD
00837  1541              ;
00838  1541              ; CHECK FOR NUMBER BYTES TO PAD NEGATIVE
00839  1541              ; THIS CAN HAPPEN IS RECORD ADDRESS IN LESS
00840  1541              ; THAN THE PREVIOUS ADDRESS RATHER THAN MORE
00841  1541              ; THE COMMODORE ASSEMBLER ALLOWS THESE KID OF
00842  1541              ; RECORDS TO BE CREATED AND THE LOADER PROGRAM
00843  1541              ; WILL JUST LOAD MEMORY ASS REQUIRED REGRADLESS
00844  1541              ; OF ITS SEQUENCE, BUT SINCE WE ARE BUILING A
00845  1541              ; CONTINUIOS PROGRAM FILE THAT FILES MEMORY FROM
00846  1541              ; THE START ADDRESS IN A LINEAR FASHION TO THE
00847  1541              ; END OF THE FILE, THERE IS NO WAY TO HANDLE THIS

00848  1541              ; CONDITION SO WE ABORT (FOR NOW - POSSIBLE IN
00849  1541              ; FUTURE THAT WE JUST IGNORE THIS RECORD AND WAIT

00850  1541              ; UNTIL ONE AHEAD IN MEMORY IS FOUND, BUT THIS MI
GHT
00851  1541              ; LEAD TO OTHER ISSUES SUCH AS ITITLAIZED MEMORY 
THAT
00852  1541              ; IS NOT INCLUDED IN THE PRG FILE
00853  1541              ;
00854  1541              ; SIMPLE TEST. IF THE CARRY BIT IS STILL SET
00855  1541              ; THE SUBTRACTION LEAD TO A BARROW WHICH MEANS
00856  1541              ; THE NUMBER OF PADDING BYTE IS GREATER THAN
00857  1541              ; $FFFF AND HENCE IS NEGATIVE
00858  1541              ;
00859  1541                                     ;BCC DECPAD
00860  1541  B0 0C              BCS DECPAD
00861  1543  A9 91              LDA #<MSE1      ;LOW BYTE MESSAGE
00862  1545  A0 14              LDY #>MSE1      ;HIGH BYTE MESSAGE
00863  1547  20 D0 14           JSR STRPNT      ;OUTPUT MESSAGE
00864  154A              ;
00865  154A  68                 PLA             ;PULL RETURN ADDRESS OFF S
TACK
00866  154B  68                 PLA             ;SO RTS IN ERROR ROUTINE I
S TO
00867  154C                                     ;BASIC AND NOT CALLER OF T
HIS
00868  154C                                     ;ROUTINE
00869  154C  4C 83 12           JMP PADERR
00870  154F              ;
00871  154F              ; DECREMENT PADDING BY ONE BYTE
00872  154F              ;
00873  154F              DECPAD =*
00874  154F  AD 6E 14           LDA NUMPAD
00875  1552  D0 03              BNE DECPA1
00876  1554  CE 6F 14           DEC NUMPAD+1
00877  1557  CE 6E 14    DECPA1 DEC NUMPAD
00878  155A              ;
00879  155A              ; PRINT NUMBER OF BYTES TO PAD
00880  155A              ;
00881  155A  AC 6F 14           LDY NUMPAD+1    ;PRINT NUMBER
00882  155D  AD 6E 14           LDA NUMPAD      ;OF PADDING
00883  1560  20 C0 15           JSR PRBYTS      ;BYTES
00884  1563  20 1B 15           JSR PRTCR       ;NEW LINE
00885  1566              ;
00886  1566              ; CALCUALTE NEXT RECORD ADDRESS
00887  1566              ; AFTER PADDING
00888  1566              ;
00889  1566  18                 CLC             ;ADD NUMBER OF






OBJ2PRG"*......PAGE 0019

LINE# LOC   CODE        LINE


00890  1567  AD 69 14           LDA RECLO       ;PADDED BYTES
00891  156A  6D 6E 14           ADC NUMPAD      ;TO PREVIOUS RECORD
00892  156D  8D 69 14           STA RECLO       ;ADDRESS FOR NEXT
00893  1570  AD 6A 14           LDA RECLO+1     ;RECORD CHECK
00894  1573  6D 6F 14           ADC NUMPAD+1    ;
00895  1576  8D 6A 14           STA RECLO+1     ;
00896  1579              ;
00897  1579  18                 CLC             ;INCREMENT
00898  157A  AD 69 14           LDA RECLO       ;ADDRESS
00899  157D  69 01              ADC #$01        ;BY ONE
00900  157F  8D 69 14           STA RECLO       ;TO ADVANCE PAST
00901  1582  AD 6A 14           LDA RECLO+1     ;PADDING TO NEXT
00902  1585  69 00              ADC #$00        ;ACTIVE ADDRESS
00903  1587  8D 6A 14           STA RECLO+1     ;
00904  158A              ;
00905  158A              ; PRINT WAHT NEXT RECORD ADDRESS SHOULD BE
00906  158A              ;
00907  158A  AC 6A 14           LDY RECLO+1     ;PRINT WHAT
00908  158D  AD 69 14           LDA RECLO       ;NEXT RECORD
00909  1590  20 C0 15           JSR PRBYTS      ;ADDRESS SHOULD BE
00910  1593  20 1B 15           JSR PRTCR       ;NEW LINE
00911  1596              ;
00912  1596  20 CC FF           JSR CLRCHN      ;RESET I/O 
00913  1599  A2 08              LDX #$08        ;FILE #8
00914  159B  20 C9 FF           JSR CHKOUT      ;SET TO OUTPUT
00915  159E              ;
00916  159E              ; WTITE OUT PADDING BYTES TO PRG FILE
00917  159E              ;
00918  159E              PADIT1 =*
00919  159E  AD 70 14           LDA PADBYT      ;PADDING BYTE
00920  15A1  20 D2 FF           JSR CHROUT      ;WRITE IT TO FILE
00921  15A4              ;
00922  15A4  AD 6E 14           LDA NUMPAD
00923  15A7  D0 08              BNE PADIT2
00924  15A9  AD 6F 14           LDA NUMPAD+1
00925  15AC  F0 09              BEQ PADIT3      ;KICKS IT OUT WHEN BOTH AR
E 0
00926  15AE  CE 6F 14           DEC NUMPAD+1
00927  15B1  CE 6E 14    PADIT2 DEC NUMPAD
00928  15B4  18                 CLC
00929  15B5  90 E7              BCC PADIT1
00930  15B7              ;
00931  15B7              ; RESET I/O AND WE ARE DONE
00932  15B7              ; GO BACK AND HANDEL THE NON
00933  15B7              ; CONTIGUIS RECORD THAT GOT US HERE
00934  15B7              ;
00935  15B7              PADIT3 =*
00936  15B7              ;
00937  15B7  20 CC FF           JSR CLRCHN      ;RESET I/O 
00938  15BA  A2 03              LDX #$03        ;FILE #3
00939  15BC  20 C9 FF           JSR CHKOUT      ;SET TO OUTPUT
00940  15BF              ;
00941  15BF  60                 RTS
00942  15C0              ;*********************************
00943  15C0              ; PRINT UTILITES
00944  15C0              ;*********************************






OBJ2PRG"*......PAGE 0020

LINE# LOC   CODE        LINE


00945  15C0              ; PRINT WORD MSB IN Y LSB IN A
00946  15C0              ;*********************************
00947  15C0  48          PRBYTS PHA             ;PUT A ON STACK
00948  15C1  98                 TYA             ;PUT HIH BYTE IN A
00949  15C2  20 C6 15           JSR PRBYT       ;PRINT MSB
00950  15C5  68                 PLA             ;GET LSB
00951  15C6              ;*********************************
00952  15C6              ; PRINT BYTE IN A
00953  15C6              ;*********************************
00954  15C6  48          PRBYT  PHA             ;PUT BYTE ON STACK
00955  15C7  4A                 LSR A           ;4 RIGHT SHIFTS
00956  15C8  4A                 LSR A           ;TO MOVE HIGH
00957  15C9  4A                 LSR A           ;NIBBLE TO LOW
00958  15CA  4A                 LSR A           ;NIB WITH HIGH 0'S
00959  15CB  A8                 TAY             ;USE AS POINTER
00960  15CC  B9 DC 15           LDA HEXA,Y      ;GET ASCII
00961  15CF  20 D2 FF           JSR CHROUT      ;PRINT
00962  15D2  68                 PLA             ;PULL BYTE OUT
00963  15D3  29 0F              AND #$0F        ;MASK HIGH NIBBLE
00964  15D5  A8                 TAY             ;USE AS POINTER
00965  15D6  B9 DC 15           LDA HEXA,Y      ;GET ASCII
00966  15D9  4C D2 FF           JMP CHROUT      ;PRINT
00967  15DC              ;*********************************
00968  15DC              ; HEX-TO-ASCII TABLE
00969  15DC              ;*********************************
00970  15DC  30 31       HEXA   .BYTE '0123456789ABCDEF'
00971  15EC              ;*********************************
00972  15EC              ; CURRENT RECORD HOLDING BUFFER
00973  15EC              ;*********************************
00974  15EC  AA          DATA   .BYTE $AA,$AA,$AA,$AA,$AA,$AA
00974  15ED  AA 
00974  15EE  AA 
00974  15EF  AA 
00974  15F0  AA 
00974  15F1  AA 
00975  15F2  AA          .BYTE  $AA,$AA,$AA,$AA,$AA,$AA
00975  15F3  AA 
00975  15F4  AA 
00975  15F5  AA 
00975  15F6  AA 
00975  15F7  AA 
00976  15F8  AA          .BYTE  $AA,$AA,$AA,$AA,$AA,$AA
00976  15F9  AA 
00976  15FA  AA 
00976  15FB  AA 
00976  15FC  AA 
00976  15FD  AA 
00977  15FE  AA          .BYTE  $AA,$AA,$AA,$AA,$AA,$AA
00977  15FF  AA 
00977  1600  AA 
00977  1601  AA 
00977  1602  AA 
00977  1603  AA 
00978  1604  AA          .BYTE  $AA,$AA,$AA,$AA,$AA,$AA
00978  1605  AA 






OBJ2PRG"*......PAGE 0021

LINE# LOC   CODE        LINE


00978  1606  AA 
00978  1607  AA 
00978  1608  AA 
00978  1609  AA 
00979  160A  AA          .BYTE  $AA,$AA,$AA,$AA,$AA,$AA
00979  160B  AA 
00979  160C  AA 
00979  160D  AA 
00979  160E  AA 
00979  160F  AA 
00980  1610  AA          .BYTE  $AA,$AA,$AA,$AA,$AA,$AA
00980  1611  AA 
00980  1612  AA 
00980  1613  AA 
00980  1614  AA 
00980  1615  AA 
00981  1616  AA          .BYTE  $AA,$AA,$AA,$AA,$AA,$AA
00981  1617  AA 
00981  1618  AA 
00981  1619  AA 
00981  161A  AA 
00981  161B  AA 
00982  161C              ;*********************************;
00983  161C              .END


ERRORS = 00000


SYMBOL TABLE

SYMBOL VALUE
 ADDHI    146B    ADDLO    146C    BASIC    100D    BREAK    1289
 BSTUB    0001    BYTASC   12EE    CHGASC   12F9    CHKIN    FFC6
 CHKOUT   FFC9    CHRIN    FFCF    CHROUT   FFD2    CKSTOP   10F9
 CLOSE    FFC3    CLRCHN   FFCC    COUNT    1340    COUNT1   1343
 CRNO     14EE    CRNO1    14FB    CRYS     14E1    CRYS1    14F9
 CURBYT   133C    CURDAT   146D    DATA     15EC    DECPA1   1557
 DECPAD   154F    DIGIT1   1435    DIGIT2   1436    DIGIT3   1437
 DIGIT4   1438    DISERR   1303    DLOOA    132C    DLOOC    1324
 DLOOE    1318    EXIT1    12F8    FA       00BA    GETADD   12A4
 GETBYT   12D7    GOON     112C    HEXA     15DC    IECIN    FFA5
 INIT     145D    INITD    1027    INITOK   1049    INPUT    1520
 INSTN1   14FF    INSTN2   150E    INSTNO   14FD    INSTNP   150C
 LA       00B8    MSE1     1491    MSG1     1344    MSG11    13D0
 MSG12    13D9    MSG13    13E0    MSG14    13EB    MSG15    13F5
 MSG16    1402    MSG17    140F    MSG18    1427    MSG2     1346
 MSG4     134D    MSG5     1359    MSG6     1368    MSG7     1373
 MSG8     13B2    MSG9     13C6    MSS1     1471    NEXTBY   11D3
 NONC     119C    NOSIX    1300    NUMBYT   133B    NUMPAD   146E
 OBJM     145F    OBJOK    10D3    OBJPRG   1014    OK2      1101
 OPEN     FFC0    OPENOF   10B5    OUF      1439    PADBYT   1470
 PADERR   1283    PADIT    1529    PADIT1   159E    PADIT2   15B1
 PADIT3   15B7    PFILE0   1070    PFILE1   1072    PFILE2   108C








SYMBOL TABLE

SYMBOL VALUE
 PFILE3   108E    PLOOP    14BD    PRBYT    15C6    PRBYTS   15C0
 PRGOK    10F1    PRINT    14BA    PROGM    1463    PRTCR    151B
 PUF      144B    QUITER   128C    READST   FFB7    RECHI    146A
 RECLO    1469    RECORD   133D    RERROR   1286    ROK      110B
 SA       00B9    SAVO     1467    SAVP     1468    SCROPT   1342
 SETLFS   FFBA    SETMSG   FF90    SETNAM   FFBD    SEXIT    14E0
 SKIP1    1145    SKIP2    11CE    SKIP3    1217    SKIP4    1260
 SKIP5    126E    SKPADD   118C    SOP1     10B0    SOUT     14D6
 STADD    133F    STATUS   0090    STOP     FFE1    STRPNT   14D0
 TALK     FFB4    TALKSA   FF96    TEMP     1341    UNTALK   FFAB
 YESC     11A4    ZEROPG   00DB    ZEROUR   00DD   

END OF ASSEMBLY
POBJ2PRGNNL.ASM......PAGE 0001

LINE# LOC   CODE        LINE































































OBJ2PRG"*......PAGE 0002

LINE# LOC   CODE        LINE


00050  1014              .FIL   OBJ2PRGN.ASM
ERRORS = 00000


SYMBOL TABLE

SYMBOL VALUE
 ADDHI    146B    ADDLO    146C    BASIC    100D    BREAK    1289
 BSTUB    0001    BYTASC   12EE    CHGASC   12F9    CHKIN    FFC6
 CHKOUT   FFC9    CHRIN    FFCF    CHROUT   FFD2    CKSTOP   10F9
 CLOSE    FFC3    CLRCHN   FFCC    COUNT    1340    COUNT1   1343
 CRNO     14EE    CRNO1    14FB    CRYS     14E1    CRYS1    14F9
 CURBYT   133C    CURDAT   146D    DATA     15EC    DECPA1   1557
 DECPAD   154F    DIGIT1   1435    DIGIT2   1436    DIGIT3   1437
 DIGIT4   1438    DISERR   1303    DLOOA    132C    DLOOC    1324
 DLOOE    1318    EXIT1    12F8    FA       00BA    GETADD   12A4
 GETBYT   12D7    GOON     112C    HEXA     15DC    IECIN    FFA5
 INIT     145D    INITD    1027    INITOK   1049    INPUT    1520
 INSTN1   14FF    INSTN2   150E    INSTNO   14FD    INSTNP   150C
 LA       00B8    MSE1     1491    MSG1     1344    MSG11    13D0
 MSG12    13D9    MSG13    13E0    MSG14    13EB    MSG15    13F5
 MSG16    1402    MSG17    140F    MSG18    1427    MSG2     1346
 MSG4     134D    MSG5     1359    MSG6     1368    MSG7     1373
 MSG8     13B2    MSG9     13C6    MSS1     1471    NEXTBY   11D3
 NONC     119C    NOSIX    1300    NUMBYT   133B    NUMPAD   146E
 OBJM     145F    OBJOK    10D3    OBJPRG   1014    OK2      1101
 OPEN     FFC0    OPENOF   10B5    OUF      1439    PADBYT   1470
 PADERR   1283    PADIT    1529    PADIT1   159E    PADIT2   15B1
 PADIT3   15B7    PFILE0   1070    PFILE1   1072    PFILE2   108C
 PFILE3   108E    PLOOP    14BD    PRBYT    15C6    PRBYTS   15C0
 PRGOK    10F1    PRINT    14BA    PROGM    1463    PRTCR    151B
 PUF      144B    QUITER   128C    READST   FFB7    RECHI    146A
 RECLO    1469    RECORD   133D    RERROR   1286    ROK      110B
 SA       00B9    SAVO     1467    SAVP     1468    SCROPT   1342
 SETLFS   FFBA    SETMSG   FF90    SETNAM   FFBD    SEXIT    14E0
 SKIP1    1145    SKIP2    11CE    SKIP3    1217    SKIP4    1260
 SKIP5    126E    SKPADD   118C    SOP1     10B0    SOUT     14D6
 STADD    133F    STATUS   0090    STOP     FFE1    STRPNT   14D0
 TALK     FFB4    TALKSA   FF96    TEMP     1341    UNTALK   FFAB
 YESC     11A4    ZEROPG   00DB    ZEROUR   00DD   

END OF ASSEMBLY

CROSS REFERENCE......PAGE    1


  ADDHI  $146B   320   329   348   541   714   834
  ADDLO  $146C   318   327   345   553   715   831
  BASIC  $100D    27    32
  BREAK  $1289   255   503
  BSTUB  $0001     9    26
  BYTASC $12EE   532   539   544   551   562   569   575
* CHGASC $12F9   585
  CHKIN  $FFC6    87   244   817
  CHKOUT $FFC9    88   139   317   323   401   406   914   939
  CHRIN  $FFCF    90   272   304   306   308   390   431   433   435   767

                 776   789   800   818
  CHROUT $FFD2    91   266   294   296   319   321   365   367   369   371

                 403   414   416   418   447   449   451   453   461   615

                 617   743   758   811   920   961   966
  CKSTOP $10F9   252   485
  CLOSE  $FFC3    86   120   519   521   523
  CLRCHN $FFCC    89    99   399   404   524   912   937
  COUNT  $1340   630   738   739   744
* COUNT1 $1343   634
  CRNO   $14EE   195   776
  CRNO1  $14FB   772   778   780   783
* CRYS   $14E1   767
  CRYS1  $14F9   769   771   781
  CURBYT $133C   383   393   421   423   627
  CURDAT $146D   394   402   716
  DATA   $15EC   395   974
  DECPA1 $1557   875   877
  DECPAD $154F   860   873
  DIGIT1 $1435   271   293   303   364   389   413   430   446   531   561

                 679
  DIGIT2 $1436   273   295   305   366   391   415   432   448   538   568

                 680
  DIGIT3 $1437   307   368   434   450   543   681
  DIGIT4 $1438   309   370   436   452   550   682
  DISERR $1303   121   218   236   594
  DLOOA  $132C   616   619
  DLOOC  $1324   602   612
  DLOOE  $1318   603   605
  EXIT1  $12F8   579   581
  FA     $00BA    68   595
  GETADD $12A4   310   437   530
  GETBYT $12D7   274   392   560
  GOON   $112C   280   287
  HEXA   $15DC   960   965   970
  IECIN  $FFA5    79   600   603   616
  INIT   $145D   111   112   698
* INITD  $1027   109
  INITOK $1049   122   127
  INPUT  $1520   262   270   302   388   429   458   815
  INSTN1 $14FF   789   793
  INSTN2 $150E   800   804
  INSTNO $14FD   153   788
  INSTNP $150C   177   799
* LA     $00B8    66
  MSE1   $1491   731   861   862
  MSG1   $1344   143   148   172   281   291   351   362   376   444   492








CROSS REFERENCE......PAGE    2


                 498   504   510   638   740   825
  MSG11  $13D0   362   660
  MSG12  $13D9   291   662
  MSG13  $13E0   376   664
  MSG14  $13EB   444   666
  MSG15  $13F5   510   668
  MSG16  $1402   281   670
  MSG17  $140F   351   672
  MSG18  $1427   674   825
  MSG2   $1346   504   639
  MSG4   $134D   492   498   641
* MSG5   $1359   643
* MSG6   $1368   645
  MSG7   $1373   143   650
  MSG8   $13B2   148   656
  MSG9   $13C6   172   658
  MSS1   $1471   192   193   725
  NEXTBY $11D3   387   425
  NONC   $119C   346   350
  NOSIX  $1300   587   589
  NUMBYT $133B   275   424   476   626
  NUMPAD $146E   720   833   836   874   876   877   881   882   891   894

                 922   924   926   927
  OBJM   $145F   158   700
  OBJOK  $10D3   219   224
* OBJPRG $1014    98
  OK2    $1101   254   261
  OPEN   $FFC0    85   118   137   216   234
  OPENOF $10B5   199   205
  OUF    $1439   159   212   213   686   790
  PADBYT $1470   721   919
  PADERR $1283   491   869
  PADIT  $1529   354   824
  PADIT1 $159E   918   929
  PADIT2 $15B1   923   927
  PADIT3 $15B7   925   935
* PFILE0 $1070   157
  PFILE1 $1072   158   163
* PFILE2 $108C   181
  PFILE3 $108E   182   187
  PLOOP  $14BD   739   746
  PRBYT  $15C6   949   954
  PRBYTS $15C0   883   909   947
  PRGOK  $10F1   237   242
  PRINT  $14BA   144   149   173   282   292   352   363   377   445   514

                 738   826
  PROGM  $1463   182   702
  PRTCR  $151B   168   248   297   372   465   613   810   884   910
  PUF    $144B   183   231   232   692   801
  QUITER $128C   123   220   238   283   509
* READST $FFB7    92
  RECHI  $146A   330   347   480   481   710   835
  RECLO  $1469   328   344   477   478   709   832   890   892   893   895

                 898   900   901   903   907   908
  RECORD $133D   101   102   628
  RERROR $1286   265   497







CROSS REFERENCE......PAGE    3


  ROK    $110B   264   266
  SA     $00B9    67   598
  SAVO   $1467   164   211   704
  SAVP   $1468   188   230   705
  SCROPT $1342   105   198   201   288   359   410   441   459   632
  SETLFS $FFBA    83   117   131   209   228
  SETMSG $FF90    44    46
  SETNAM $FFBD    84   113   136   214   233
  SEXIT  $14E0   757   761
  SKIP1  $1145   289   301
  SKIP2  $11CE   360   381
  SKIP3  $1217   411   420
  SKIP4  $1260   442   457
  SKIP5  $126E   460   469
  SKPADD $118C   312   339
  SOP1   $10B0   196   200
  SOUT   $14D6   756   760
  STADD  $133F   103   311   335   629
  STATUS $0090    65   104
  STOP   $FFE1    81   253
  STRPNT $14D0   194   753   863
  TALK   $FFB4    82   596
  TALKSA $FF96    78   599
  TEMP   $1341   537   540   549   552   567   570   631
  UNTALK $FFAB    80   606   620
  YESC   $11A4   349   358
* ZEROPG $00DB    73
  ZEROUR $00DD    74   753   754   756




































































































