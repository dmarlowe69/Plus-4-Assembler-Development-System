
; 64tass Turbo Assembler Macro V1.53.1515 listing file
; 64tass -L pdisass64.lst -o pdisass64.prg pdisass64.asm
; Tue Feb 13 12:32:24 2018

;Offset	;Hex		;Monitor	;Source

;******  Processing input file: pdisass64.asm

=1					BSTUB = 1
>1001	0d 10				 .WORD BASIC ;NEXT LINE POINTER
>1003	0a 00				 .BYTE $0A,$00 ;LINE NUMBER
>1005	9e				 .BYTE $9E ;SYS COMMAND
>1006	28 34 31 31 31 29		 .TEXT '(4111)' ;ASCII (4111)
>100c	00				 .BYTE 0 ;END OF LINE
>100d	00 00				BASIC .BYTE 0,0 ;END OF BASIC

;******  Processing file: dis.asm

=$d011					VICREG=$D011 ;SCREEN REGISTER
=$ffd2					CHROUT=$FFD2 ;OUTPUT CHARACTER
=$ffc6					CHKIN =$FFC6 ;OPEN INPUT FILE
=$ffcf					CHRIN =$FFCF ;GET KEYBOARD INPUT
=$ffe4					GETIN =$FFE4 ;GET KEYBOARD CHAR
=$ffcc					CLRCHN=$FFCC ;RESET I/O CHANNELS
=$ffe1					STOP =$FFE1 ;CHECK FOR STOP
=$ffb7					READST=$FFB7 ;READ ST
=$ffbd					SETNAM=$FFBD ;SET FILENAME
=$ffba					SETLFS=$FFBA ;SET LOGICAL FILE
=$ffc0					OPEN =$FFC0 ;OPEN FILE
=$ffc9					CHKOUT=$FFC9 ;OPEN OUTPUT CHANNEL
=$ffc3					CLOSE =$FFC3 ;CLOSE LOGICAL FILE
=$867e					WREADY = $867E ;BASICW
=$37					MEMSIZ=$37 ;TOP OF FREE RAM+1
=$dd					ZEROUR=$DD ;$FD    ;ZERO PAGE POINTER
.100f	4c 21 12	jmp $1221	STARTD JMP DISASS
>1012	31				PASS  .BYTE '1'  ;PASS INDICATOR
>1013	31				IPASS .BYTE '1'  ;INTERNAL PASS
>1014	32				EPASS .BYTE '2'  ;EXTERNAL PASS
>1015	33				CPASS .BYTE '3'  ;PRINTING PASS
>1016	34				SPASS .BYTE '4'  ;SYMBOL PASS
>1017	aa				XOPT .BYTE $AA ;LABEL GENERATION
>1018	aa				ROPT .BYTE $AA ;REL ADDRESS OPT
>1019	aa				DEVICE .BYTE $AA ;OUTPUT DEVICE
>101a	aa				OUTPUT .BYTE $AA ;OUTPUT FLAG
>101b	aa				WINDOW .BYTE $AA ;WINDOW FLAG
>101c	aa				FOROPT .BYTE $AA ;FORMAT FLAG
>101d	aa				COMOPT .BYTE $AA ;COMMENT FLAG
>101e	aa aa				SA .WORD $AAAA ;START ADDRESS
>1020	aa aa				EA .WORD $AAAA ;END ADDRESS
>1022	aa aa				SELECT .WORD $AAAA ;BYTE POINTER
>1024	aa aa				OFFSET .WORD $AAAA ;ADDRESS OFFSET
>1026	aa aa				SAGOL  .WORD $AAAA ;GOLBAL START
>1028	aa aa				EAGOL  .WORD $AAAA ;GOLBAL END
>102a	aa aa				SAOUT .WORD $AAAA ;START ADDRESS
>102c	aa aa				EAOUT .WORD $AAAA ;END ADDRESS
>102e	aa aa				TABINP .WORD $AAAA ;TABLE POINTER
>1030	aa aa				TABINS .WORD $AAAA ;TABLE START
>1032	aa aa				TABINE .WORD $AAAA ;TABLE END
>1034	aa aa				SMALLS .WORD $AAAA ;TABLE START
>1036	aa aa				SMALLP .WORD $AAAA ;TABLE POINTER
>1038	aa				SYMBOL .BYTE $AA   ;SYMBOL OPTION
>1039	aa aa				SYMBOP .WORD $AAAA ;TABLE POINTER
>103b	aa aa				SYMBOS .WORD $AAAA ;TABLE START
>103d	aa aa				SYMBOE .WORD $AAAA ;TABLE END
>103f	aa aa				UYMBOP .WORD $AAAA ;TABLE POINTER
>1041	aa aa				UYMBOS .WORD $AAAA ;TABLE START
>1043	aa aa				UYMBOE .WORD $AAAA ;TABLE END
>1045	aa aa				WORKED .WORD $AAAA ;TWO BYTE OP
>1047	aa aa				WORKER .WORD $AAAA ;TWO BYTE OP
>1049	aa aa				SAVEP .WORD $AAAA ;TWO BYTE OP
>104b	aa aa				SAVES .WORD $AAAA ;TWO BYTE OP
>104d	aa aa				SAVEE .WORD $AAAA ;TWO BYTE OP
>104f	aa aa				ADRS .WORD $AAAA
>1051	aa				TEMP .BYTE $AA
>1052	aa				SAVA .BYTE $AA
>1053	aa				SAVX .BYTE $AA
>1054	aa				SAVY .BYTE $AA
>1055	aa aa				PAGECT .WORD $AAAA ;PAGE COUNT
>1057	aa				LISTCT .BYTE $AA ;LINE COUNT
>1058	aa aa				LINECT .WORD $AAAA ;LINE COUNT
>105a	aa aa				ERRCT  .WORD $AAAA ;ERROR COUNT
=$105c					BUF = *
>105c	00 00 00 00 00 00 00 00		 .BYTE 0,0,0,0,0,0,0,0,0,0
>1064	00 00
>1066	00 00 00 00 00 00 00 00		 .BYTE 0,0,0,0,0,0,0,0,0,0
>106e	00 00
>1070	00 00 00 00 00 00 00 00		 .BYTE 0,0,0,0,0,0,0,0,0,0
>1078	00 00
>107a	00 00 00 00 00 00 00 00		 .BYTE 0,0,0,0,0,0,0,0,0,0
>1082	00 00
>1084	00 00 00 00 00 00 00 00		 .BYTE 0,0,0,0,0,0,0,0,0,0
>108c	00 00
>108e	00 00 00 00 00 00 00 00		 .BYTE 0,0,0,0,0,0,0,0,0,0
>1096	00 00
>1098	00 00 00 00 00 00 00 00		 .BYTE 0,0,0,0,0,0,0,0,0,0
>10a0	00 00
>10a2	00 00 00 00 00 00 00 00		 .BYTE 0,0,0,0,0,0,0,0,0,0
>10aa	00 00
>10ac	00 00 00 00 00 00 00 00		 .BYTE 0,0,0,0,0,0,0,0,0,0
>10b4	00 00
>10b6	00 00 00 00 00 00 00 00		 .BYTE 0,0,0,0,0,0,0,0,0,0
>10be	00 00
>10c0	aa aa				LINEFL .WORD $AAAA
>10c2	aa				VERSON .BYTE $AA
>10c3	aa				NCHARS .BYTE $AA
=$10c4					NBUF = *
>10c4	30 3a				 .TEXT '0:'
>10c6	aa aa aa aa aa aa aa aa		 .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
>10ce	aa aa aa aa aa aa aa aa		 .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
>10d6	aa aa aa aa			 .BYTE $AA,$AA,$AA,$AA
=$10da					SYMBUF = *
>10da	aa aa aa aa aa aa aa aa		 .BYTE $AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA,$AA
>10e2	aa aa
>10e4	aa aa				EAS .WORD $AAAA
>10e6	aa				TEXTER .BYTE $AA
>10e7	aa aa				CDATA .WORD $AAAA
>10e9	aa aa				NDATA .WORD $AAAA
>10eb	aa aa				DATABP .WORD $AAAA ;DATA POINT
>10ed	aa aa				DATABS .WORD $AAAA ;DATA START
>10ef	aa aa				DATABE .WORD $AAAA ;DATA END
>10f1	aa				TDATA .BYTE $AA
>11f2	0d 50 41 53 53 00		MPASS  .TEXT $0D,'PASS',0
>11f8	0d 12 20 50 41 55 53 45		PMSG   .TEXT $0D,$12,' PAUSE ',$92,$0D,0
>1200	20 92 0d 00
>1204	45 52 52 4f 52 53 20 3d		MSGERR .TEXT 'ERRORS = ',0
>120c	20 00
>120e	45 4e 44 20 4f 46 20 44		MSGDIS .TEXT 'END OF DISASSEMBLY',0
>1216	49 53 41 53 53 45 4d 42 4c 59 00
.1221	a2 ff		ldx #$ff	DISASS LDX #$FF
.1223	9a		txs		 TXS
.1224	d8		cld		 CLD
.1225	20 6d 13	jsr $136d	 JSR DOP ;GET OPTIONS
.1228	20 62 22	jsr $2262	 JSR INITIN ;INIT POINTERS
.122b	a9 31		lda #$31	 LDA #'1'      ;PASS ONE
.122d	8d 12 10	sta $1012	 STA PASS ;SET PASS INDICATOR
.1230	20 4e 21	jsr $214e	DISA JSR INTSA ;SET SA
.1233	a9 00		lda #$00	 LDA #00 ;ZERO BYTE
.1235	8d e7 10	sta $10e7	 STA CDATA ;SET TABLE NUMBER
.1238	a9 f2		lda #$f2	 LDA #<MPASS ;PASS MSG
.123a	a0 11		ldy #$11	 LDY #>MPASS ;
.123c	20 bb 1b	jsr $1bbb	 JSR STRPNT ;PRINT IT
.123f	ad 12 10	lda $1012	 LDA PASS ;GET PASS
.1242	20 11 1c	jsr $1c11	 JSR PCHAR ;PRINT NUMBER
.1245	20 f3 20	jsr $20f3	 JSR CRLF ;CR
.1248	ad 12 10	lda $1012	 LDA PASS ;GET PASS
.124b	cd 15 10	cmp $1015	 CMP CPASS ;IS IT LAST
.124e	f0 0e		beq $125e	 BEQ DISB ;IF SO PRINT
.1250	cd 14 10	cmp $1014	 CMP EPASS      ;IS IT EXTERNAL
.1253	d0 3a		bne $128f	 BNE DLOOP ;IF NOT GO ON
.1255	20 81 22	jsr $2281	 JSR SAVINT ;SAVE INTERNAL
.1258	20 35 2b	jsr $2b35	 JSR EQUINT ;SET EQUATES
.125b	4c 8f 12	jmp $128f	 JMP DLOOP ;GO ON
.125e	a9 01		lda #$01	DISB LDA #$01 ;ONE BYTE
.1260	8d 58 10	sta $1058	 STA LINECT ;SET LINE # TO 1
.1263	8d 55 10	sta $1055	 STA PAGECT ;SET PAGE TO 1
.1266	a9 00		lda #$00	 LDA #$00 ;ZERO BYTE
.1268	8d 59 10	sta $1059	 STA LINECT+1 ;SET LINE # TO 1
.126b	8d 56 10	sta $1056	 STA PAGECT+1 ;SET PAGE TO 1
.126e	8d 57 10	sta $1057	 STA LISTCT ;SET LIST TO 0
.1271	8d 5a 10	sta $105a	 STA ERRCT ;SET ERROR TO 0
.1274	8d 5b 10	sta $105b	 STA ERRCT+1 ;SET ERROR TO 0
.1277	8d c0 10	sta $10c0	 STA LINEFL ;SET LINE TO 0
.127a	8d c1 10	sta $10c1	 STA LINEFL+1 ;SET LINE TO 0
.127d	ad 1a 10	lda $101a	 LDA OUTPUT ;GET OUTPUT
.1280	8d 19 10	sta $1019	 STA DEVICE ;SET OUTPUT
.1283	20 7a 1c	jsr $1c7a	 JSR HEADER ;PRINT HEADER
.1286	20 96 15	jsr $1596	 JSR OFILED ;OPEN DISK FILE
.1289	20 3b 20	jsr $203b	 JSR ORGIN ;PRINT ORGIN LABEL
.128c	20 40 2c	jsr $2c40	 JSR EQUPRT ;PRINT EQUATE
.128f	20 7d 1d	jsr $1d7d	DLOOP JSR DSLINE ;DIS ONE LINE
.1292	b0 2c		bcs $12c0	 BCS NEXTP ;IF EA STOP
.1294	20 85 1a	jsr $1a85	 JSR LINECK ;LINE COUNT
.1297	20 e1 ff	jsr $ffe1	 JSR STOP ;CHECK STOP
.129a	f0 57		beq $12f3	 BEQ QUITS ;IF SO QUIT
.129c	20 e4 ff	jsr $ffe4	 JSR GETIN ;GET KEY
.129f	f0 ee		beq $128f	 BEQ DLOOP ;IF NONE NEXT
.12a1	c9 20		cmp #$20	 CMP #' '          ;IS IT A SPACE
.12a3	d0 ea		bne $128f	 BNE DLOOP ;IF NOT NEXT
.12a5	ad 19 10	lda $1019	 LDA DEVICE
.12a8	48		pha		 PHA
.12a9	a9 03		lda #$03	 LDA #$03
.12ab	8d 19 10	sta $1019	 STA DEVICE
.12ae	a9 f8		lda #$f8	 LDA #<PMSG
.12b0	a0 11		ldy #$11	 LDY #>PMSG
.12b2	20 bb 1b	jsr $1bbb	 JSR STRPNT
.12b5	68		pla		 PLA
.12b6	8d 19 10	sta $1019	 STA DEVICE
.12b9	20 e4 ff	jsr $ffe4	PAUSE JSR GETIN ;PAUSE FOR KEY
.12bc	f0 fb		beq $12b9	 BEQ PAUSE ;
.12be	d0 cf		bne $128f	 BNE DLOOP ;NEXT LINE
.12c0	ee 12 10	inc $1012	NEXTP INC PASS ;INC PASS
.12c3	ad 12 10	lda $1012	 LDA PASS ;GET PASS
.12c6	cd 15 10	cmp $1015	 CMP CPASS ;LAST PASS?
.12c9	90 1f		bcc $12ea	 BCC DISFUL ;IF LESS AGAIN
.12cb	d0 20		bne $12ed	 BNE DISC ;FINISH
.12cd	ad 1b 10	lda $101b	 LDA WINDOW ;WINDOW FLAG
.12d0	f0 18		beq $12ea	 BEQ DISFUL ;FULL OUTPUT
.12d2	ad 2a 10	lda $102a	 LDA SAOUT ;
.12d5	8d 1e 10	sta $101e	 STA SA ;
.12d8	ad 2b 10	lda $102b	 LDA SAOUT+1 ;
.12db	8d 1f 10	sta $101f	 STA SA+1 ;
.12de	ad 2c 10	lda $102c	 LDA EAOUT ;
.12e1	8d 20 10	sta $1020	 STA EA ;
.12e4	ad 2d 10	lda $102d	 LDA EAOUT+1 ;
.12e7	8d 21 10	sta $1021	 STA EA+1 ;
.12ea	4c 30 12	jmp $1230	DISFUL JMP DISA ;LAST PASS
.12ed	20 23 21	jsr $2123	DISC JSR INCSL
.12f0	20 51 20	jsr $2051	 JSR EFILE ;END FILE MSG
.12f3	ad 19 10	lda $1019	QUITS LDA DEVICE ;CHECK DEV
.12f6	29 08		and #$08	 AND #$08 ;DISK FILE?
.12f8	f0 10		beq $130a	 BEQ QUTERR ;IF NOT BRANCH
.12fa	a9 08		lda #$08	 LDA #$08 ;DISK
.12fc	20 c3 ff	jsr $ffc3	 JSR CLOSE ;CLOSE IT
.12ff	ad 1a 10	lda $101a	 LDA OUTPUT ;GET OUTPUT
.1302	29 07		and #$07	 AND #07 ;MASK DISK
.1304	8d 1a 10	sta $101a	 STA OUTPUT ;RESET OUTPUT
.1307	8d 19 10	sta $1019	 STA DEVICE ;RESET OUTPUT
.130a	ad 1a 10	lda $101a	QUTERR LDA OUTPUT
.130d	09 03		ora #$03	 ORA #$03
.130f	8d 1a 10	sta $101a	 STA OUTPUT
.1312	8d 19 10	sta $1019	 STA DEVICE
.1315	20 fe 1a	jsr $1afe	 JSR NEWLIN
.1318	20 fe 1a	jsr $1afe	 JSR NEWLIN
.131b	a9 04		lda #$04	 LDA #<MSGERR
.131d	a0 12		ldy #$12	 LDY #>MSGERR
.131f	20 bb 1b	jsr $1bbb	 JSR STRPNT
.1322	ae 5a 10	ldx $105a	 LDX ERRCT
.1325	ad 5b 10	lda $105b	 LDA ERRCT+1
.1328	20 d7 1b	jsr $1bd7	 JSR PRTNUM
.132b	ad 19 10	lda $1019	 LDA DEVICE ;CHECK DEV
.132e	29 04		and #$04	 AND #$04 ;PRINTER?
.1330	f0 13		beq $1345	 BEQ DONED ;IF NOT DONE
.1332	a9 04		lda #$04	 LDA #$04 ;DEVICE 4
.1334	8d 1a 10	sta $101a	 STA OUTPUT ;SET DEVICE
.1337	8d 19 10	sta $1019	 STA DEVICE ;SET DEVICE
.133a	20 33 24	jsr $2433	 JSR INTPRT ;PRINT INTABLE
.133d	a9 07		lda #$07	 LDA #$07 ;DEVICE 3 AND 4
.133f	8d 19 10	sta $1019	 STA DEVICE ;SET DEVICE
.1342	8d 1a 10	sta $101a	 STA OUTPUT ;SET DEVICE
.1345	20 fe 1a	jsr $1afe	DONED JSR NEWLIN ;NEWLINE
.1348	20 fe 1a	jsr $1afe	 JSR NEWLIN ;NEWLINE
.134b	a9 0e		lda #$0e	 LDA #<MSGDIS ;END MSG
.134d	a0 12		ldy #$12	 LDY #>MSGDIS
.134f	20 bb 1b	jsr $1bbb	 JSR STRPNT ;PRINT IT
.1352	20 fe 1a	jsr $1afe	 JSR NEWLIN ;NEW LINE
.1355	ad 19 10	lda $1019	 LDA DEVICE ;CHECK DEVICE
.1358	29 04		and #$04	 AND #$04 ;PRINTER
.135a	f0 08		beq $1364	 BEQ DONE ;
.135c	20 48 1c	jsr $1c48	 JSR FINISH ;FINISH PAGE
.135f	a9 04		lda #$04	 LDA #$04 ;PRINTER
.1361	20 c3 ff	jsr $ffc3	 JSR CLOSE ;CLOSE FILE
.1364	20 cc ff	jsr $ffcc	DONE JSR CLRCHN ;RESET I/O
.1367	20 08 1d	jsr $1d08	 JSR SCRON      ;TURN SCREEN ON
.136a	4c 7e 86	jmp $867e	 JMP WREADY     ;RETURN

;******  Return to file: pdisass64.asm


;******  Processing file: option.asm

.136d	a9 03		lda #$03	DOP LDA #$03 ;DEVICE #3 SCREEN
.136f	8d 19 10	sta $1019	 STA DEVICE ;CURRENT OUTPUT
.1372	a9 00		lda #$00	 LDA #$00 ;NO DEVICES
.1374	8d 1a 10	sta $101a	 STA OUTPUT ;FINAL OUTPUT
.1377	a9 b4		lda #$b4	 LDA #<MSG ;START UP MSG
.1379	a0 17		ldy #$17	 LDY #>MSG
.137b	20 bb 1b	jsr $1bbb	 JSR STRPNT ;PRINT IT
.137e	a9 01		lda #$01	 LDA #<MSF1
.1380	a0 18		ldy #$18	 LDY #>MSF1
.1382	20 bb 1b	jsr $1bbb	 JSR STRPNT
.1385	20 1c 1b	jsr $1b1c	 JSR INSTNG
.1388	d0 03		bne $138d	 BNE PFILE0
.138a	4c c5 14	jmp $14c5	 JMP STARTS
.138d	a2 00		ldx #$00	PFILE0 LDX #$00
.138f	bd 52 18	lda $1852,x	PFILE1 LDA PROGM,X
.1392	99 5c 10	sta $105c,y	 STA BUF,Y
.1395	c8		iny		 INY
.1396	e8		inx		 INX
.1397	e0 04		cpx #$04	 CPX #$04
.1399	d0 f4		bne $138f	 BNE PFILE1
.139b	8c 52 10	sty $1052	 STY SAVA
.139e	20 ab 14	jsr $14ab	 JSR INITD
.13a1	20 85 14	jsr $1485	 JSR PRFILE
.13a4	a2 08		ldx #$08	 LDX #$08 ;FILE #8
.13a6	20 c6 ff	jsr $ffc6	 JSR CHKIN ;INPUT FILE
.13a9	20 cf ff	jsr $ffcf	 JSR CHRIN ;GET LOW BYTE SA
.13ac	8d 1e 10	sta $101e	 STA SA ;SET START
.13af	20 cf ff	jsr $ffcf	 JSR CHRIN ;GET HIGH BYTE SA
.13b2	8d 1f 10	sta $101f	 STA SA+1 ;SET START
.13b5	20 4e 21	jsr $214e	 JSR INTSA ;SET END
.13b8	a9 00		lda #$00	 LDA #$00 ;ZERO BYTE
.13ba	8d 4f 10	sta $104f	 STA ADRS ;BYTE COUNTER
.13bd	8d 50 10	sta $1050	 STA ADRS+1 ;BYTE COUNTER
.13c0	20 cf ff	jsr $ffcf	PROGRD JSR CHRIN ;INPUT BYTE
.13c3	20 b7 ff	jsr $ffb7	 JSR READST ;READ STATUS
.13c6	d0 0d		bne $13d5	 BNE PROGED ;IF NOT ZERO END
.13c8	20 23 21	jsr $2123	 JSR INCSL ;INC END ADDRESS
.13cb	ee 4f 10	inc $104f	 INC ADRS ;INC BYTE COUNT
.13ce	d0 03		bne $13d3	 BNE *+5 ;
.13d0	ee 50 10	inc $1050	 INC ADRS+1 ;
.13d3	d0 eb		bne $13c0	 BNE PROGRD ;NEXT BYTE
.13d5	ad 22 10	lda $1022	PROGED LDA SELECT ;
.13d8	8d 20 10	sta $1020	 STA EA ;
.13db	ad 23 10	lda $1023	 LDA SELECT+1 ;
.13de	8d 21 10	sta $1021	 STA EA+1 ;
.13e1	a9 08		lda #$08	 LDA #$08 ;FILE #8
.13e3	20 c3 ff	jsr $ffc3	 JSR CLOSE ;CLOSE IT
.13e6	20 cc ff	jsr $ffcc	 JSR CLRCHN ;RESET I/O
.13e9	a9 1d		lda #$1d	 LDA #<MSF2
.13eb	a0 18		ldy #$18	 LDY #>MSF2
.13ed	20 bb 1b	jsr $1bbb	 JSR STRPNT
.13f0	ad 1e 10	lda $101e	 LDA SA
.13f3	8d 45 10	sta $1045	 STA WORKED
.13f6	ad 1f 10	lda $101f	 LDA SA+1
.13f9	8d 46 10	sta $1046	 STA WORKED+1
.13fc	20 c2 20	jsr $20c2	 JSR PWORKD
.13ff	a9 2d		lda #$2d	 LDA #'-'
.1401	20 11 1c	jsr $1c11	 JSR PCHAR
.1404	20 d0 20	jsr $20d0	 JSR DOLLAR
.1407	20 b6 20	jsr $20b6	 JSR PSELEC
.140a	20 f3 20	jsr $20f3	 JSR CRLF
.140d	a9 00		lda #$00	 LDA #$00 ;MEMSIZ
.140f	8d 22 10	sta $1022	 STA SELECT
.1412	a9 80		lda #$80	 LDA #$80 ;MEMSIZ+1
.1414	8d 23 10	sta $1023	 STA SELECT+1
.1417	20 42 21	jsr $2142	 JSR DECSL
.141a	38		sec		 SEC
.141b	ad 22 10	lda $1022	 LDA SELECT
.141e	ed 4f 10	sbc $104f	 SBC ADRS
.1421	8d 22 10	sta $1022	 STA SELECT
.1424	ad 23 10	lda $1023	 LDA SELECT+1
.1427	ed 50 10	sbc $1050	 SBC ADRS+1
.142a	8d 23 10	sta $1023	 STA SELECT+1
.142d	38		sec		 SEC
.142e	ad 22 10	lda $1022	 LDA SELECT
.1431	ed 1e 10	sbc $101e	 SBC SA
.1434	8d 24 10	sta $1024	 STA OFFSET
.1437	8d 45 10	sta $1045	 STA WORKED
.143a	ad 23 10	lda $1023	 LDA SELECT+1
.143d	ed 1f 10	sbc $101f	 SBC SA+1
.1440	8d 25 10	sta $1025	 STA OFFSET+1
.1443	8d 46 10	sta $1046	 STA WORKED+1
.1446	a9 ad		lda #$ad	 LDA #<MSD4A
.1448	a0 18		ldy #$18	 LDY #>MSD4A
.144a	20 bb 1b	jsr $1bbb	 JSR STRPNT
.144d	20 c2 20	jsr $20c2	 JSR PWORKD
.1450	20 f3 20	jsr $20f3	 JSR CRLF
.1453	20 85 14	jsr $1485	 JSR PRFILE ;OPEN FILE
.1456	a2 08		ldx #$08	 LDX #$08 ;FILE #8
.1458	20 c6 ff	jsr $ffc6	 JSR CHKIN ;INPUT FILE
.145b	20 cf ff	jsr $ffcf	 JSR CHRIN ;GET LOW BYTE SA
.145e	20 cf ff	jsr $ffcf	 JSR CHRIN ;GET HIGH BYTE SA
.1461	20 cf ff	jsr $ffcf	PRO2RD JSR CHRIN ;INPUT BYTE
.1464	ae 22 10	ldx $1022	 LDX SELECT ;LOW BYTE POINTER
.1467	86 dd		stx $dd		 STX ZEROUR ;ZERO PAGE
.1469	ae 23 10	ldx $1023	 LDX SELECT+1 ;HIH BYTE POINTER
.146c	86 de		stx $de		 STX ZEROUR+1 ;ZERO PAGE
.146e	a0 00		ldy #$00	 LDY #$00 ;OFFSET
.1470	91 dd		sta ($dd),y	 STA (ZEROUR),Y ;STORE BYTE
.1472	20 23 21	jsr $2123	 JSR INCSL ;INC POINTER
.1475	20 b7 ff	jsr $ffb7	 JSR READST ;READ STATUS
.1478	f0 e7		beq $1461	 BEQ PRO2RD ;NEXT BYTE
.147a	a9 08		lda #$08	 LDA #$08 ;FILE #8
.147c	20 c3 ff	jsr $ffc3	 JSR CLOSE ;CLOSE IT
.147f	20 cc ff	jsr $ffcc	 JSR CLRCHN ;RESET I/O
.1482	4c 07 15	jmp $1507	 JMP WINDOP ;WINDOW OPTION
.1485	ad 52 10	lda $1052	PRFILE LDA SAVA
.1488	a2 5c		ldx #$5c	 LDX #<BUF
.148a	a0 10		ldy #$10	 LDY #>BUF
.148c	20 bd ff	jsr $ffbd	 JSR SETNAM
.148f	a9 08		lda #$08	 LDA #$08
.1491	a8		tay		 TAY
.1492	aa		tax		 TAX
.1493	20 ba ff	jsr $ffba	 JSR SETLFS
.1496	20 c0 ff	jsr $ffc0	 JSR OPEN
.1499	20 c4 1a	jsr $1ac4	 JSR DISERR
.149c	90 0c		bcc $14aa	 BCC PROGOK
.149e	a9 08		lda #$08	 LDA #$08
.14a0	20 c3 ff	jsr $ffc3	 JSR CLOSE
.14a3	68		pla		 PLA
.14a4	68		pla		 PLA
.14a5	68		pla		 PLA
.14a6	68		pla		 PLA
.14a7	4c 7e 86	jmp $867e	 JMP WREADY
.14aa	60		rts		PROGOK RTS
.14ab	a9 02		lda #$02	INITD LDA #$02
.14ad	a0 18		ldy #$18	 LDY #>INIT
.14af	a2 56		ldx #$56	 LDX #<INIT
.14b1	20 bd ff	jsr $ffbd	 JSR SETNAM
.14b4	a9 0f		lda #$0f	 LDA #$0F
.14b6	a2 08		ldx #$08	 LDX #$08
.14b8	a0 0f		ldy #$0f	 LDY #$0F
.14ba	20 ba ff	jsr $ffba	 JSR SETLFS
.14bd	20 c0 ff	jsr $ffc0	 JSR OPEN
.14c0	a9 0f		lda #$0f	 LDA #$0F
.14c2	4c c3 ff	jmp $ffc3	 JMP CLOSE
.14c5	a9 71		lda #$71	STARTS LDA #<MSD1
.14c7	a0 18		ldy #$18	 LDY #>MSD1
.14c9	20 bb 1b	jsr $1bbb	 JSR STRPNT
.14cc	20 2b 1b	jsr $1b2b	 JSR GETWRD
.14cf	ad 4f 10	lda $104f	 LDA ADRS
.14d2	8d 1e 10	sta $101e	 STA SA
.14d5	ad 50 10	lda $1050	 LDA ADRS+1
.14d8	8d 1f 10	sta $101f	 STA SA+1
.14db	a9 83		lda #$83	 LDA #<MSD2
.14dd	a0 18		ldy #$18	 LDY #>MSD2
.14df	20 bb 1b	jsr $1bbb	 JSR STRPNT
.14e2	20 2b 1b	jsr $1b2b	 JSR GETWRD
.14e5	ad 4f 10	lda $104f	 LDA ADRS
.14e8	8d 20 10	sta $1020	 STA EA
.14eb	ad 50 10	lda $1050	 LDA ADRS+1
.14ee	8d 21 10	sta $1021	 STA EA+1
.14f1	a9 93		lda #$93	 LDA #<MSD4
.14f3	a0 18		ldy #$18	 LDY #>MSD4
.14f5	20 bb 1b	jsr $1bbb	 JSR STRPNT
.14f8	20 2b 1b	jsr $1b2b	 JSR GETWRD
.14fb	ad 4f 10	lda $104f	 LDA ADRS
.14fe	8d 24 10	sta $1024	 STA OFFSET
.1501	ad 50 10	lda $1050	 LDA ADRS+1
.1504	8d 25 10	sta $1025	 STA OFFSET+1
.1507	a9 c0		lda #$c0	WINDOP LDA #<MSD5
.1509	a0 18		ldy #$18	 LDY #>MSD5
.150b	20 bb 1b	jsr $1bbb	 JSR STRPNT
.150e	20 90 1b	jsr $1b90	 JSR CRNO
.1511	b0 30		bcs $1543	 BCS WIND1
.1513	a9 71		lda #$71	 LDA #<MSD1
.1515	a0 18		ldy #$18	 LDY #>MSD1
.1517	20 bb 1b	jsr $1bbb	 JSR STRPNT
.151a	20 2b 1b	jsr $1b2b	 JSR GETWRD
.151d	ad 4f 10	lda $104f	 LDA ADRS
.1520	8d 2a 10	sta $102a	 STA SAOUT
.1523	ad 50 10	lda $1050	 LDA ADRS+1
.1526	8d 2b 10	sta $102b	 STA SAOUT+1
.1529	a9 83		lda #$83	 LDA #<MSD2
.152b	a0 18		ldy #$18	 LDY #>MSD2
.152d	20 bb 1b	jsr $1bbb	 JSR STRPNT
.1530	20 2b 1b	jsr $1b2b	 JSR GETWRD
.1533	ad 4f 10	lda $104f	 LDA ADRS
.1536	8d 2c 10	sta $102c	 STA EAOUT
.1539	ad 50 10	lda $1050	 LDA ADRS+1
.153c	8d 2d 10	sta $102d	 STA EAOUT+1
.153f	a9 ff		lda #$ff	 LDA #$FF
.1541	30 02		bmi $1545	 BMI WIND2
.1543	a9 00		lda #$00	WIND1 LDA #$00
.1545	8d 1b 10	sta $101b	WIND2 STA WINDOW
.1548	ad 1e 10	lda $101e	 LDA SA
.154b	8d 26 10	sta $1026	 STA SAGOL
.154e	ad 1f 10	lda $101f	 LDA SA+1
.1551	8d 27 10	sta $1027	 STA SAGOL+1
.1554	ad 20 10	lda $1020	 LDA EA
.1557	8d 28 10	sta $1028	 STA EAGOL
.155a	ad 21 10	lda $1021	 LDA EA+1
.155d	8d 29 10	sta $1029	 STA EAGOL+1
.1560	a9 31		lda #$31	OUFILE LDA #<MSG1
.1562	a0 18		ldy #$18	 LDY #>MSG1
.1564	20 bb 1b	jsr $1bbb	 JSR STRPNT
.1567	a9 00		lda #$00	 LDA #$00
.1569	8d c3 10	sta $10c3	 STA NCHARS
.156c	20 1c 1b	jsr $1b1c	 JSR INSTNG
.156f	f0 1a		beq $158b	 BEQ NOFILE
.1571	a9 30		lda #$30	 LDA #'0'
.1573	8d c2 10	sta $10c2	 STA VERSON
.1576	8c c3 10	sty $10c3	 STY NCHARS
.1579	a2 00		ldx #$00	 LDX #$00
.157b	bd 5c 10	lda $105c,x	GFILE0 LDA BUF,X
.157e	9d c4 10	sta $10c4,x	 STA NBUF,X
.1581	e8		inx		 INX
.1582	ec c3 10	cpx $10c3	 CPX NCHARS
.1585	d0 f4		bne $157b	 BNE GFILE0
.1587	a9 08		lda #$08	FILEOK LDA #$08
.1589	d0 02		bne $158d	 BNE FILE
.158b	a9 00		lda #$00	NOFILE LDA #$00
.158d	0d 1a 10	ora $101a	FILE ORA OUTPUT
.1590	8d 1a 10	sta $101a	 STA OUTPUT
.1593	4c ec 15	jmp $15ec	 JMP PRTGET
.1596	ac c3 10	ldy $10c3	OFILED LDY NCHARS
.1599	f0 03		beq $159e	 BEQ NOID
.159b	20 ab 14	jsr $14ab	 JSR INITD
.159e	20 f8 1c	jsr $1cf8	NOID JSR SCROFF
.15a1	ac c3 10	ldy $10c3	OFILE LDY NCHARS
.15a4	f0 45		beq $15eb	 BEQ OFILE4
.15a6	ad c2 10	lda $10c2	 LDA VERSON
.15a9	c9 30		cmp #$30	 CMP #'0'
.15ab	f0 07		beq $15b4	 BEQ OFILE1
.15ad	ad c2 10	lda $10c2	 LDA VERSON
.15b0	99 c4 10	sta $10c4,y	 STA NBUF,Y
.15b3	c8		iny		 INY
.15b4	ee c2 10	inc $10c2	OFILE1 INC VERSON
.15b7	a2 00		ldx #$00	 LDX #$00
.15b9	bd 4e 18	lda $184e,x	OFILE2 LDA WRITE,X
.15bc	99 c4 10	sta $10c4,y	 STA NBUF,Y
.15bf	c8		iny		 INY
.15c0	e8		inx		 INX
.15c1	e0 04		cpx #$04	 CPX #$04
.15c3	d0 f4		bne $15b9	 BNE OFILE2
.15c5	98		tya		 TYA
.15c6	a0 10		ldy #$10	 LDY #>NBUF
.15c8	a2 c4		ldx #$c4	 LDX #<NBUF
.15ca	20 bd ff	jsr $ffbd	 JSR SETNAM
.15cd	a9 08		lda #$08	 LDA #$08
.15cf	aa		tax		 TAX
.15d0	a8		tay		 TAY
.15d1	20 ba ff	jsr $ffba	 JSR SETLFS
.15d4	20 c0 ff	jsr $ffc0	 JSR OPEN
.15d7	20 c4 1a	jsr $1ac4	 JSR DISERR
.15da	90 0f		bcc $15eb	 BCC OFILE4
.15dc	a9 08		lda #$08	OFILE3 LDA #$08
.15de	20 c3 ff	jsr $ffc3	 JSR CLOSE
.15e1	20 cc ff	jsr $ffcc	 JSR CLRCHN
.15e4	68		pla		 PLA
.15e5	68		pla		 PLA
.15e6	68		pla		 PLA
.15e7	68		pla		 PLA
.15e8	4c 7e 86	jmp $867e	 JMP WREADY
.15eb	60		rts		OFILE4 RTS
.15ec	a9 58		lda #$58	PRTGET LDA #<MSG2
.15ee	a0 18		ldy #$18	 LDY #>MSG2
.15f0	20 bb 1b	jsr $1bbb	 JSR STRPNT
.15f3	20 83 1b	jsr $1b83	 JSR CRYS
.15f6	b0 26		bcs $161e	 BCS NOPRT
.15f8	a9 00		lda #$00	 LDA #$00
.15fa	20 bd ff	jsr $ffbd	 JSR SETNAM
.15fd	a9 04		lda #$04	 LDA #$04
.15ff	a2 04		ldx #$04	 LDX #$04
.1601	a0 00		ldy #$00	 LDY #$00
.1603	20 ba ff	jsr $ffba	 JSR SETLFS
.1606	20 c0 ff	jsr $ffc0	 JSR OPEN
.1609	a2 04		ldx #$04	 LDX #$04
.160b	20 c9 ff	jsr $ffc9	 JSR CHKOUT
.160e	20 b7 ff	jsr $ffb7	 JSR READST
.1611	29 80		and #$80	 AND #$80
.1613	08		php		 PHP
.1614	20 cc ff	jsr $ffcc	 JSR CLRCHN
.1617	28		plp		 PLP
.1618	30 04		bmi $161e	 BMI NOPRT
.161a	a9 04		lda #$04	 LDA #$04
.161c	d0 02		bne $1620	 BNE PRINT
.161e	a9 03		lda #$03	NOPRT LDA #$03
.1620	0d 1a 10	ora $101a	PRINT ORA OUTPUT
.1623	8d 1a 10	sta $101a	 STA OUTPUT
.1626	20 c0 2a	jsr $2ac0	       JSR SOP
.1629	a9 dc		lda #$dc	       LDA #<MSR1
.162b	a0 18		ldy #$18	       LDY #>MSR1
.162d	20 bb 1b	jsr $1bbb	       JSR STRPNT
.1630	20 83 1b	jsr $1b83	       JSR CRYS
.1633	90 04		bcc $1639	       BCC DOP2
.1635	a9 01		lda #$01	       LDA #$01
.1637	d0 02		bne $163b	       BNE DOP3
.1639	a9 00		lda #$00	DOP2   LDA #$00
.163b	8d 18 10	sta $1018	DOP3   STA ROPT
.163e	20 42 37	jsr $3742	       JSR BITOPT
.1641	ad 3d 10	lda $103d	AOP LDA SYMBOE
.1644	8d eb 10	sta $10eb	 STA DATABP
.1647	8d ed 10	sta $10ed	 STA DATABS
.164a	8d ef 10	sta $10ef	 STA DATABE
.164d	85 dd		sta $dd		 STA ZEROUR
.164f	ad 3e 10	lda $103e	 LDA SYMBOE+1
.1652	8d ec 10	sta $10ec	 STA DATABP+1
.1655	8d ee 10	sta $10ee	 STA DATABS+1
.1658	8d f0 10	sta $10f0	 STA DATABE+1
.165b	85 de		sta $de		 STA ZEROUR+1
.165d	a9 6a		lda #$6a	 LDA #<MSAOP
.165f	a0 19		ldy #$19	 LDY #>MSAOP
.1661	20 bb 1b	jsr $1bbb	 JSR STRPNT
.1664	20 1c 1b	jsr $1b1c	 JSR INSTNG
.1667	d0 03		bne $166c	 BNE BOP
.1669	4c ec 16	jmp $16ec	 JMP NOTABS
.166c	98		tya		BOP TYA
.166d	48		pha		 PHA
.166e	20 ab 14	jsr $14ab	 JSR INITD
.1671	68		pla		 PLA
.1672	a8		tay		 TAY
.1673	a2 00		ldx #$00	 LDX #$00
.1675	bd 29 2e	lda $2e29,x	AFILE LDA NAMS,X
.1678	99 5c 10	sta $105c,y	 STA BUF,Y
.167b	c8		iny		 INY
.167c	e8		inx		 INX
.167d	e0 04		cpx #$04	 CPX #$04
.167f	d0 f4		bne $1675	 BNE AFILE
.1681	98		tya		 TYA
.1682	a0 10		ldy #$10	 LDY #>BUF
.1684	a2 5c		ldx #$5c	 LDX #<BUF
.1686	20 bd ff	jsr $ffbd	 JSR SETNAM
.1689	a9 03		lda #$03	 LDA #$03
.168b	a2 08		ldx #$08	 LDX #$08
.168d	a0 03		ldy #$03	 LDY #$03
.168f	20 ba ff	jsr $ffba	 JSR SETLFS
.1692	20 c0 ff	jsr $ffc0	 JSR OPEN
.1695	20 c4 1a	jsr $1ac4	 JSR DISERR
.1698	b0 1b		bcs $16b5	 BCS AGET1
.169a	a2 03		ldx #$03	 LDX #$03
.169c	20 c6 ff	jsr $ffc6	 JSR CHKIN
.169f	a0 00		ldy #$00	 LDY #$00
.16a1	20 cf ff	jsr $ffcf	 JSR CHRIN
.16a4	8d e9 10	sta $10e9	 STA NDATA
.16a7	f0 0c		beq $16b5	 BEQ AGET1
.16a9	20 cf ff	jsr $ffcf	AGET JSR CHRIN
.16ac	99 f1 10	sta $10f1,y	 STA TDATA,Y
.16af	c8		iny		 INY
.16b0	20 b7 ff	jsr $ffb7	 JSR READST
.16b3	f0 f4		beq $16a9	 BEQ AGET
.16b5	a9 03		lda #$03	AGET1 LDA #$03
.16b7	20 c3 ff	jsr $ffc3	 JSR CLOSE
.16ba	20 cc ff	jsr $ffcc	 JSR CLRCHN
.16bd	ad e9 10	lda $10e9	PRTDAS LDA NDATA
.16c0	8d e7 10	sta $10e7	 STA CDATA
.16c3	a0 00		ldy #$00	 LDY #$00
.16c5	8c 54 10	sty $1054	 STY SAVY
.16c8	20 f3 20	jsr $20f3	PRTNEX JSR CRLF
.16cb	a2 05		ldx #$05	 LDX #$05
.16cd	8e 53 10	stx $1053	 STX SAVX
.16d0	ac 54 10	ldy $1054	PRTDAL LDY SAVY
.16d3	b9 f1 10	lda $10f1,y	 LDA TDATA,Y
.16d6	20 a5 1b	jsr $1ba5	 JSR PRBYT
.16d9	20 05 21	jsr $2105	 JSR SPACE
.16dc	ee 54 10	inc $1054	 INC SAVY
.16df	ce 53 10	dec $1053	 DEC SAVX
.16e2	d0 ec		bne $16d0	 BNE PRTDAL
.16e4	ce e7 10	dec $10e7	 DEC CDATA
.16e7	d0 df		bne $16c8	 BNE PRTNEX
.16e9	4c 89 17	jmp $1789	 JMP XOP0
.16ec	a9 89		lda #$89	NOTABS LDA #<MSA1 ;NUMBER OF DATA
.16ee	a0 19		ldy #$19	 LDY #>MSA1
.16f0	20 bb 1b	jsr $1bbb	 JSR STRPNT
.16f3	20 2b 1b	jsr $1b2b	 JSR GETWRD ;INPUT HEX BYTE
.16f6	ad 4f 10	lda $104f	 LDA ADRS ;GET BYTE
.16f9	8d e9 10	sta $10e9	 STA NDATA ;SET NUM TABLES
.16fc	d0 03		bne $1701	 BNE AOPX ;0 DATA THEN END
.16fe	4c 89 17	jmp $1789	 JMP XOP0 ;RETURN
.1701	a9 00		lda #$00	AOPX LDA #$00 ;ZERO OFFSET
.1703	8d e7 10	sta $10e7	 STA CDATA ;FIRST TABLE
.1706	ad e7 10	lda $10e7	AOP1 LDA CDATA ;GET TABLE NUMBER
.1709	0a		asl a		 ASL A ;*2
.170a	0a		asl a		 ASL A ;*4
.170b	18		clc		 CLC ;C=0
.170c	6d e7 10	adc $10e7	 ADC CDATA ;*5
.170f	8d 54 10	sta $1054	 STA SAVY ;STORE AS OFFSET
.1712	a9 ab		lda #$ab	 LDA #<MSA2
.1714	a0 19		ldy #$19	 LDY #>MSA2
.1716	20 bb 1b	jsr $1bbb	 JSR STRPNT ;PRINT MSG
.1719	20 2b 1b	jsr $1b2b	 JSR GETWRD ;GET ADDRESS
.171c	ac 54 10	ldy $1054	 LDY SAVY ;GET OFFSET
.171f	ad 4f 10	lda $104f	 LDA ADRS
.1722	99 f1 10	sta $10f1,y	 STA TDATA,Y
.1725	c8		iny		 INY
.1726	ad 50 10	lda $1050	 LDA ADRS+1
.1729	99 f1 10	sta $10f1,y	 STA TDATA,Y
.172c	c8		iny		 INY
.172d	8c 54 10	sty $1054	 STY SAVY
.1730	a9 c3		lda #$c3	AOP2 LDA #<MSA3
.1732	a0 19		ldy #$19	 LDY #>MSA3
.1734	20 bb 1b	jsr $1bbb	 JSR STRPNT
.1737	20 2b 1b	jsr $1b2b	 JSR GETWRD ;GET ADDRESS
.173a	ac 54 10	ldy $1054	 LDY SAVY
.173d	ad 4f 10	lda $104f	 LDA ADRS
.1740	99 f1 10	sta $10f1,y	 STA TDATA,Y
.1743	c8		iny		 INY
.1744	ad 50 10	lda $1050	 LDA ADRS+1
.1747	99 f1 10	sta $10f1,y	 STA TDATA,Y
.174a	c8		iny		 INY
.174b	8c 54 10	sty $1054	 STY SAVY
.174e	a9 d9		lda #$d9	 LDA #<MSG5 ;TABLE TYPE
.1750	a0 19		ldy #$19	 LDY #>MSG5
.1752	20 bb 1b	jsr $1bbb	 JSR STRPNT
.1755	20 e4 ff	jsr $ffe4	AOP3 JSR GETIN
.1758	f0 fb		beq $1755	 BEQ AOP3
.175a	c9 30		cmp #$30	 CMP #'0'
.175c	f0 14		beq $1772	 BEQ ASC
.175e	c9 31		cmp #$31	 CMP #'1'
.1760	f0 10		beq $1772	 BEQ ASC
.1762	c9 32		cmp #$32	 CMP #'2'
.1764	f0 0c		beq $1772	 BEQ ASC
.1766	c9 33		cmp #$33	 CMP #'3'
.1768	f0 08		beq $1772	 BEQ ASC
.176a	c9 34		cmp #$34	 CMP #'4'
.176c	f0 04		beq $1772	 BEQ ASC
.176e	c9 53		cmp #$53	 CMP #'S'
.1770	d0 e3		bne $1755	 BNE AOP3
.1772	20 d2 ff	jsr $ffd2	ASC JSR CHROUT
.1775	ac 54 10	ldy $1054	 LDY SAVY
.1778	99 f1 10	sta $10f1,y	 STA TDATA,Y
.177b	ee e7 10	inc $10e7	 INC CDATA ;INC TABLE COUNT
.177e	ad e7 10	lda $10e7	 LDA CDATA ;GET TABLE COUNT
.1781	cd e9 10	cmp $10e9	 CMP NDATA ;ALL TABLES?
.1784	f0 03		beq $1789	 BEQ XOP0 ;IF NOT GET MORE
.1786	4c 06 17	jmp $1706	 JMP AOP1 ;IF NOT GET MORE
.1789	a9 45		lda #$45	XOP0 LDA #<MSB4
.178b	a0 1a		ldy #$1a	 LDY #>MSB4
.178d	20 bb 1b	jsr $1bbb	 JSR STRPNT
.1790	20 83 1b	jsr $1b83	 JSR CRYS
.1793	b0 04		bcs $1799	 BCS XOP1
.1795	a9 01		lda #$01	 LDA #$01
.1797	d0 02		bne $179b	 BNE XOP2
.1799	a9 00		lda #$00	XOP1 LDA #$00
.179b	8d 17 10	sta $1017	XOP2 STA XOPT
.179e	a9 65		lda #$65	 LDA #<MSB5
.17a0	a0 1a		ldy #$1a	 LDY #>MSB5
.17a2	20 bb 1b	jsr $1bbb	 JSR STRPNT
.17a5	20 83 1b	jsr $1b83	 JSR CRYS
.17a8	b0 04		bcs $17ae	 BCS FOP1
.17aa	a9 00		lda #$00	 LDA #$00
.17ac	f0 02		beq $17b0	 BEQ FOP2
.17ae	a9 ff		lda #$ff	FOP1 LDA #$FF
.17b0	8d 1c 10	sta $101c	FOP2 STA FOROPT
.17b3	60		rts		 RTS
>17b4	0d 0d				MSG .TEXT $0D,$0D
>17b6	43 42 4d 20 52 45 53 49		.TEXT 'CBM RESIDENT DISASSEMBLER'
>17be	44 45 4e 54 20 44 49 53 41 53 53 45 4d 42 4c 45
>17ce	52
>17cf	20 56 30 38 30 32 38 32		.TEXT ' V080282'
>17d7	0d				.BYTE $0D
>17d8	28 43 29 20 31 39 38 32		.TEXT '(C) 1982 BY COMMODORE '
>17e0	20 42 59 20 43 4f 4d 4d 4f 44 4f 52 45 20
>17ee	42 55 53 49 4e 45 53 53		.TEXT 'BUSINESS MACHINES'
>17f6	20 4d 41 43 48 49 4e 45 53
>17ff	0d				.BYTE $0D
>1800	00				.BYTE 0
>1801	0d				MSF1 .BYTE $0D
>1802	50 52 4f 47 52 41 4d 20		.TEXT 'PROGRAM FILE (CR OR NAME):'
>180a	46 49 4c 45 20 28 43 52 20 4f 52 20 4e 41 4d 45
>181a	29 3a
>181c	00				.BYTE 0
>181d	0d				MSF2 .BYTE $0D
>181e	50 52 4f 47 52 41 4d 20		.TEXT 'PROGRAM ADDRESS: $'
>1826	41 44 44 52 45 53 53 3a 20 24
>1830	00				.BYTE 0
>1831	0d				MSG1 .BYTE $0D
>1832	45 44 49 54 4f 52 36 34		.TEXT 'EDITOR64 FILE (CR OR NAME):'
>183a	20 46 49 4c 45 20 28 43 52 20 4f 52 20 4e 41 4d
>184a	45 29 3a
>184d	00				.BYTE 0
>184e	2c 53 2c 57			WRITE .TEXT ',S,W'
>1852	2c 50 2c 52			PROGM .TEXT ',P,R'
>1856	49 30				INIT  .TEXT 'I0'
>1858	0d				MSG2 .BYTE $0D
>1859	48 41 52 44 20 43 4f 50		.TEXT 'HARD COPY (Y/CR OR N)? '
>1861	59 20 28 59 2f 43 52 20 4f 52 20 4e 29 3f 20
>1870	00				.BYTE 0
>1871	0d				MSD1 .BYTE $0D
>1872	53 54 41 52 54 20 41 44		.TEXT 'START ADDRESS :$'
>187a	44 52 45 53 53 20 3a 24
>1882	00				.BYTE 0
>1883	0d				MSD2 .BYTE $0D
>1884	45 4e 44 20 41 44 44 52		.TEXT 'END ADDRESS :$'
>188c	45 53 53 20 3a 24
>1892	00				.BYTE 0
>1893	0d				MSD4 .BYTE $0D
>1894	41 44 44 52 45 53 53 20		.TEXT 'ADDRESS OFFSET (OR CR):$'
>189c	4f 46 46 53 45 54 20 28 4f 52 20 43 52 29 3a 24
>18ac	00				.BYTE 0
>18ad	0d				MSD4A .BYTE $0D
>18ae	41 44 44 52 45 53 53 20		.TEXT 'ADDRESS OFFSET :$'
>18b6	4f 46 46 53 45 54 20 3a 24
>18bf	00				.BYTE 0
>18c0	0d				MSD5 .BYTE $0D
>18c1	57 49 4e 44 4f 57 20 4f		.TEXT 'WINDOW OUTPUT(Y OR N/CR)? '
>18c9	55 54 50 55 54 28 59 20 4f 52 20 4e 2f 43 52 29
>18d9	3f 20
>18db	00				.BYTE 0
>18dc	0d				MSR1 .BYTE $0D
>18dd	52 45 4c 41 54 49 56 45		.TEXT 'RELATIVE BRANCH TO LABEL '
>18e5	20 42 52 41 4e 43 48 20 54 4f 20 4c 41 42 45 4c
>18f5	20
>18f6	28 59 2f 43 52 20 4f 52		.TEXT '(Y/CR OR N)? '
>18fe	20 4e 29 3f 20
>1903	00				.BYTE 0
>1904	0d				MSB1 .BYTE $0D
>1905	42 49 54 20 49 4e 53 54		 .TEXT 'BIT INSTRUCTION CODING'
>190d	52 55 43 54 49 4f 4e 20 43 4f 44 49 4e 47
>191b	0d 0d				 .BYTE $0D,$0D
>191d	30 2f 43 52 20 53 54 41		 .TEXT '0/CR STANDARD',$0D
>1925	4e 44 41 52 44 0d
>192b	31 20 20 20 20 20 24 32		 .TEXT '1     $2C ABS',$0D
>1933	43 20 41 42 53 0d
>1939	32 20 20 20 20 20 24 32		 .TEXT '2     $24 ZP',$0D
>1941	34 20 5a 50 0d
>1946	33 20 20 20 20 20 24 32		 .TEXT '3     $2C AND $24',$0D
>194e	43 20 41 4e 44 20 24 32 34 0d
>1958	0d				 .BYTE $0D
>1959	45 4e 54 45 52 20 42 49		 .TEXT 'ENTER BIT CODE: '
>1961	54 20 43 4f 44 45 3a 20
>1969	00				 .BYTE 0
>196a	0d				MSAOP .BYTE $0D
>196b	44 41 54 41 20 54 41 42		.TEXT 'DATA TABLE FILE (CR OR NAME):'
>1973	4c 45 20 46 49 4c 45 20 28 43 52 20 4f 52 20 4e
>1983	41 4d 45 29 3a
>1988	00				.BYTE 0
>1989	0d				MSA1 .BYTE $0D
>198a	4e 55 4d 42 45 52 20 4f		.TEXT 'NUMBER OF DATA TABLES (OR CR) :$'
>1992	46 20 44 41 54 41 20 54 41 42 4c 45 53 20 28 4f
>19a2	52 20 43 52 29 20 3a 24
>19aa	00				.BYTE 0
>19ab	0d				MSA2 .BYTE $0D
>19ac	54 41 42 4c 45 20 53 54		.TEXT 'TABLE START ADDRESS :$'
>19b4	41 52 54 20 41 44 44 52 45 53 53 20 3a 24
>19c2	00				.BYTE 0
>19c3	0d				MSA3 .BYTE $0D
>19c4	54 41 42 4c 45 20 45 4e		.TEXT 'TABLE END ADDRESS :$'
>19cc	44 20 41 44 44 52 45 53 53 20 3a 24
>19d8	00				.BYTE 0
>19d9	0d 0d				MSG5 .BYTE $0D,$0D
>19db	44 49 53 41 53 53 45 4d		 .TEXT 'DISASSEMBLY OPTIONS'
>19e3	42 4c 59 20 4f 50 54 49 4f 4e 53
>19ee	0d 0d				 .BYTE $0D,$0D
>19f0	30 20 41 53 43 49 49 0d		 .TEXT '0 ASCII',$0D
>19f8	31 20 42 59 54 45 0d		 .TEXT '1 BYTE',$0D
>19ff	32 20 57 4f 52 44 0d		 .TEXT '2 WORD',$0D
>1a06	33 20 44 42 59 54 45 0d		 .TEXT '3 DBYTE',$0D
>1a0e	34 20 57 4f 52 44 2d 31		 .TEXT '4 WORD-1',$0D
>1a16	0d
>1a17	53 20 53 4b 49 50 20 41		 .TEXT 'S SKIP ADDRESS RANGE',$0D
>1a1f	44 44 52 45 53 53 20 52 41 4e 47 45 0d
>1a2c	45 4e 54 45 52 20 44 49		 .TEXT 'ENTER DISASSEMBLY CODE: '
>1a34	53 41 53 53 45 4d 42 4c 59 20 43 4f 44 45 3a 20
>1a44	00				 .BYTE 0
>1a45	0d				MSB4 .BYTE $0D
>1a46	4c 41 42 4c 45 20 47 45		.TEXT 'LABLE GENERATION (Y/CR OR N)? '
>1a4e	4e 45 52 41 54 49 4f 4e 20 28 59 2f 43 52 20 4f
>1a5e	52 20 4e 29 3f 20
>1a64	00				.BYTE 0
>1a65	0d				MSB5 .BYTE $0D
>1a66	46 4f 52 4d 41 54 45 44		.TEXT 'FORMATED LISTING (Y/CR OR N)? '
>1a6e	20 4c 49 53 54 49 4e 47 20 28 59 2f 43 52 20 4f
>1a7e	52 20 4e 29 3f 20
>1a84	00				.BYTE 0

;******  Return to file: pdisass64.asm


;******  Processing file: util.asm

.1a85	ad 12 10	lda $1012	LINECK LDA PASS
.1a88	cd 15 10	cmp $1015	 CMP CPASS
.1a8b	d0 36		bne $1ac3	 BNE LINECO
.1a8d	ad 19 10	lda $1019	 LDA DEVICE
.1a90	29 08		and #$08	 AND #$08
.1a92	f0 2f		beq $1ac3	 BEQ LINECO
.1a94	38		sec		 SEC
.1a95	ad c0 10	lda $10c0	 LDA LINEFL
.1a98	e9 20		sbc #$20	 SBC #$20
.1a9a	8d 51 10	sta $1051	 STA TEMP
.1a9d	ad c1 10	lda $10c1	 LDA LINEFL+1
.1aa0	e9 03		sbc #$03	 SBC #$03
.1aa2	0d 51 10	ora $1051	 ORA TEMP
.1aa5	90 1c		bcc $1ac3	 BCC LINECO
.1aa7	ea		nop		 NOP
.1aa8	ea		nop		 NOP
.1aa9	ea		nop		 NOP
.1aaa	20 51 20	jsr $2051	 JSR EFILE
.1aad	a9 08		lda #$08	 LDA #$08
.1aaf	20 c3 ff	jsr $ffc3	 JSR CLOSE
.1ab2	20 a1 15	jsr $15a1	 JSR OFILE
.1ab5	a9 00		lda #$00	 LDA #$00
.1ab7	8d c0 10	sta $10c0	 STA LINEFL
.1aba	8d c1 10	sta $10c1	 STA LINEFL+1
.1abd	20 3b 20	jsr $203b	 JSR ORGIN
.1ac0	20 61 20	jsr $2061	 JSR COMENT
.1ac3	60		rts		LINECO RTS
.1ac4	a9 08		lda #$08	DISERR LDA #$08 ;DEV #8
.1ac6	85 ba		sta $ba		 STA $BA ;PUT IN DEV TABLE
.1ac8	20 b4 ff	jsr $ffb4	 JSR $FFB4 ;SEND TALK
.1acb	a9 6f		lda #$6f	 LDA #$6F ;SECONDARY ADDRESS
.1acd	85 b9		sta $b9		 STA $B9 ;PUT IN TABLE
.1acf	20 96 ff	jsr $ff96	 JSR $FF96 ;SEND SEC
.1ad2	20 a5 ff	jsr $ffa5	 JSR $FFA5 ;GET FIRST BYTE
.1ad5	c9 30		cmp #$30	 CMP #$30 ;IS IT A ZERO
.1ad7	d0 0c		bne $1ae5	 BNE DLOOC ;IF NOT ZERO ERROR
.1ad9	20 a5 ff	jsr $ffa5	DLOOE JSR $FFA5 ;GET BYTE
.1adc	c9 0d		cmp #$0d	 CMP #$0D ;IS IT CR?
.1ade	d0 f9		bne $1ad9	 BNE DLOOE ;GET NEXT BYTE
.1ae0	20 ab ff	jsr $ffab	 JSR $FFAB ;UNTALK
.1ae3	18		clc		 CLC ;NO ERROR FLAG
.1ae4	60		rts		 RTS ;RETURN
.1ae5	48		pha		DLOOC PHA ;STACK BYTE
.1ae6	a9 0d		lda #$0d	 LDA #$0D ;ASCII CR
.1ae8	20 d2 ff	jsr $ffd2	 JSR CHROUT ;PRINT IT
.1aeb	68		pla		 PLA ;GET BYTE
.1aec	20 d2 ff	jsr $ffd2	 JSR CHROUT ;PRINT IT
.1aef	20 a5 ff	jsr $ffa5	DLOOA JSR $FFA5 ;GET NEXT BYTE
.1af2	20 d2 ff	jsr $ffd2	 JSR CHROUT ;PRINT IT
.1af5	c9 0d		cmp #$0d	 CMP #$0D ;IS IT CR
.1af7	d0 f6		bne $1aef	 BNE DLOOA ;GET NEXT BYTE
.1af9	20 ab ff	jsr $ffab	 JSR $FFAB ;UNTALK
.1afc	38		sec		 SEC ;SET ERROR FLAG
.1afd	60		rts		 RTS ;RETURN
.1afe	ee 58 10	inc $1058	NEWLIN INC LINECT
.1b01	d0 03		bne $1b06	 BNE *+5
.1b03	ee 59 10	inc $1059	 INC LINECT+1
.1b06	ee c0 10	inc $10c0	 INC LINEFL
.1b09	d0 03		bne $1b0e	 BNE *+5
.1b0b	ee c1 10	inc $10c1	 INC LINEFL+1
.1b0e	20 f3 20	jsr $20f3	 JSR CRLF
.1b11	ad 19 10	lda $1019	 LDA DEVICE
.1b14	29 04		and #$04	 AND #$04
.1b16	f0 03		beq $1b1b	 BEQ NEWEXT
.1b18	20 6d 1c	jsr $1c6d	 JSR NEXLIN
.1b1b	60		rts		NEWEXT RTS
.1b1c	a0 00		ldy #$00	INSTNG LDY #$00
.1b1e	20 cf ff	jsr $ffcf	INSTN1 JSR CHRIN
.1b21	99 5c 10	sta $105c,y	 STA BUF,Y
.1b24	c8		iny		 INY
.1b25	c9 0d		cmp #$0d	 CMP #$0D
.1b27	d0 f5		bne $1b1e	 BNE INSTN1
.1b29	88		dey		 DEY
.1b2a	60		rts		 RTS
.1b2b	a9 00		lda #$00	GETWRD LDA #$00
.1b2d	8d 4f 10	sta $104f	 STA ADRS
.1b30	8d 50 10	sta $1050	 STA ADRS+1
.1b33	20 1c 1b	jsr $1b1c	 JSR INSTNG
.1b36	88		dey		 DEY
.1b37	30 15		bmi $1b4e	 BMI INEND
.1b39	20 4f 1b	jsr $1b4f	 JSR GETBYT
.1b3c	ad 51 10	lda $1051	 LDA TEMP
.1b3f	8d 4f 10	sta $104f	 STA ADRS
.1b42	88		dey		 DEY
.1b43	30 09		bmi $1b4e	 BMI INEND
.1b45	20 4f 1b	jsr $1b4f	 JSR GETBYT
.1b48	ad 51 10	lda $1051	 LDA TEMP
.1b4b	8d 50 10	sta $1050	 STA ADRS+1
.1b4e	60		rts		INEND RTS
.1b4f	b9 5c 10	lda $105c,y	GETBYT LDA BUF,Y
.1b52	20 6c 1b	jsr $1b6c	 JSR BINARY
.1b55	8d 51 10	sta $1051	 STA TEMP
.1b58	88		dey		 DEY
.1b59	30 10		bmi $1b6b	 BMI INENX
.1b5b	b9 5c 10	lda $105c,y	 LDA BUF,Y
.1b5e	20 6c 1b	jsr $1b6c	 JSR BINARY
.1b61	0a		asl a		 ASL A
.1b62	0a		asl a		 ASL A
.1b63	0a		asl a		 ASL A
.1b64	0a		asl a		 ASL A
.1b65	0d 51 10	ora $1051	 ORA TEMP
.1b68	8d 51 10	sta $1051	 STA TEMP
.1b6b	60		rts		INENX RTS
.1b6c	38		sec		BINARY SEC
.1b6d	e9 30		sbc #$30	 SBC #'0'
.1b6f	90 0e		bcc $1b7f	 BCC NOHEX
.1b71	c9 0a		cmp #$0a	 CMP #$0A
.1b73	90 0c		bcc $1b81	 BCC YSHEX
.1b75	e9 07		sbc #$07	 SBC #$07
.1b77	c9 10		cmp #$10	 CMP #$10
.1b79	b0 04		bcs $1b7f	 BCS NOHEX
.1b7b	c9 0a		cmp #$0a	 CMP #$0A
.1b7d	b0 02		bcs $1b81	 BCS YSHEX
.1b7f	38		sec		NOHEX SEC
.1b80	60		rts		 RTS
.1b81	18		clc		YSHEX CLC
.1b82	60		rts		 RTS
.1b83	20 cf ff	jsr $ffcf	CRYS   JSR CHRIN
.1b86	c9 59		cmp #$59	       CMP #'Y'
.1b88	f0 11		beq $1b9b	       BEQ CRYS1
.1b8a	c9 0d		cmp #$0d	       CMP #$0D
.1b8c	f0 0d		beq $1b9b	       BEQ CRYS1
.1b8e	d0 0d		bne $1b9d	       BNE CRNO1
.1b90	20 cf ff	jsr $ffcf	CRNO   JSR CHRIN
.1b93	c9 4e		cmp #$4e	       CMP #'N'
.1b95	f0 06		beq $1b9d	       BEQ CRNO1
.1b97	c9 0d		cmp #$0d	       CMP #$0D
.1b99	f0 02		beq $1b9d	       BEQ CRNO1
.1b9b	18		clc		CRYS1  CLC
.1b9c	60		rts		       RTS
.1b9d	38		sec		CRNO1  SEC
.1b9e	60		rts		       RTS
.1b9f	48		pha		PRBYTS PHA ;PUT A ON STACK
.1ba0	98		tya		 TYA ;PUT HIH BYTE IN A
.1ba1	20 a5 1b	jsr $1ba5	 JSR PRBYT ;PRINT MSB
.1ba4	68		pla		 PLA ;GET LSB
.1ba5	48		pha		PRBYT PHA ;PUT BYTE ON STACK
.1ba6	4a		lsr a		 LSR A ;4 RIGHT SHIFTS
.1ba7	4a		lsr a		 LSR A ;TO MOVE HIGH
.1ba8	4a		lsr a		 LSR A ;NIBBLE TO LOW
.1ba9	4a		lsr a		 LSR A ;NIB WITH HIGH 0'S
.1baa	a8		tay		 TAY ;USE AS POINTER
.1bab	b9 11 1d	lda $1d11,y	 LDA HEXA,Y ;GET ASCII
.1bae	20 11 1c	jsr $1c11	 JSR PCHAR ;PRINT
.1bb1	68		pla		 PLA ;PULL BYTE OUT
.1bb2	29 0f		and #$0f	 AND #$0F ;MASK HIGH NIBBLE
.1bb4	a8		tay		 TAY ;USE AS POINTER
.1bb5	b9 11 1d	lda $1d11,y	 LDA HEXA,Y ;GET ASCII
.1bb8	4c 11 1c	jmp $1c11	 JMP PCHAR ;PRINT
.1bbb	85 dd		sta $dd		STRPNT STA ZEROUR ;POINTER TO
.1bbd	84 de		sty $de		 STY ZEROUR+1 ;MESSAGE
.1bbf	a0 00		ldy #$00	 LDY #$00 ;OFFSET
.1bc1	b1 dd		lda ($dd),y	SOUT LDA (ZEROUR),Y ;GET CHAR
.1bc3	f0 06		beq $1bcb	 BEQ SEXIT ;IF ZERO EXIT
.1bc5	20 11 1c	jsr $1c11	 JSR PCHAR ;PRINT
.1bc8	c8		iny		 INY ;INC OFFSET
.1bc9	d0 f6		bne $1bc1	 BNE SOUT ;LOOP
.1bcb	60		rts		SEXIT RTS ;RETURN
.1bcc	86 dd		stx $dd		PRTPAG STX ZEROUR ;LOW  BYTE NUM
.1bce	85 de		sta $de		 STA ZEROUR+1 ;HIGH BYTE NUM
.1bd0	a2 03		ldx #$03	 LDX #$03 ;4 CHARS
.1bd2	8e 53 10	stx $1053	 STX SAVX ;SAVE COUNT
.1bd5	d0 09		bne $1be0	 BNE PRTNU1 ;BRANCH
.1bd7	86 dd		stx $dd		PRTNUM STX ZEROUR ;LOW  BYTE NUM
.1bd9	85 de		sta $de		 STA ZEROUR+1 ;HIGH BYTE NUM
.1bdb	a2 04		ldx #$04	 LDX #$04 ;5 CHARS
.1bdd	8e 53 10	stx $1053	 STX SAVX ;SAVE COUNT
.1be0	ae 53 10	ldx $1053	PRTNU1 LDX SAVX
.1be3	a0 30		ldy #$30	 LDY #$30
.1be5	d0 01		bne $1be8	 BNE PRTNU3
.1be7	c8		iny		PRTNU2 INY
.1be8	38		sec		PRTNU3 SEC
.1be9	a5 dd		lda $dd		 LDA ZEROUR
.1beb	fd 21 1d	sbc $1d21,x	 SBC CONST0,X
.1bee	85 dd		sta $dd		 STA ZEROUR
.1bf0	a5 de		lda $de		 LDA ZEROUR+1
.1bf2	fd 26 1d	sbc $1d26,x	 SBC CONST1,X
.1bf5	85 de		sta $de		 STA ZEROUR+1
.1bf7	b0 ee		bcs $1be7	 BCS PRTNU2
.1bf9	a5 dd		lda $dd		 LDA ZEROUR
.1bfb	7d 21 1d	adc $1d21,x	 ADC CONST0,X
.1bfe	85 dd		sta $dd		 STA ZEROUR
.1c00	a5 de		lda $de		 LDA ZEROUR+1
.1c02	7d 26 1d	adc $1d26,x	 ADC CONST1,X
.1c05	85 de		sta $de		 STA ZEROUR+1
.1c07	98		tya		 TYA
.1c08	20 11 1c	jsr $1c11	 JSR PCHAR
.1c0b	ce 53 10	dec $1053	 DEC SAVX
.1c0e	10 d0		bpl $1be0	 BPL PRTNU1
.1c10	60		rts		 RTS
.1c11	48		pha		PCHAR PHA ;SAVE CHAR
.1c12	ad 19 10	lda $1019	 LDA DEVICE ;GET FILE FLAG
.1c15	29 08		and #$08	 AND #$08 ;CHECK FOR DISK
.1c17	f0 0d		beq $1c26	 BEQ PRIN ;IF NONE BRANCH
.1c19	a2 08		ldx #$08	 LDX #$08 ;DISK FILE #1
.1c1b	20 c9 ff	jsr $ffc9	 JSR CHKOUT ;FILE IS OUTPUT
.1c1e	68		pla		 PLA ;GET CHAR
.1c1f	48		pha		 PHA ;RESAVE CHAR
.1c20	20 d2 ff	jsr $ffd2	 JSR CHROUT ;OUTPUT TO DISK
.1c23	20 cc ff	jsr $ffcc	 JSR CLRCHN ;RESET OUTPUT
.1c26	ad 19 10	lda $1019	PRIN LDA DEVICE ;GET DEVICE FLAG
.1c29	29 04		and #$04	 AND #$04 ;CHECK FOR PRINTER
.1c2b	f0 0d		beq $1c3a	 BEQ SCREN ;IF NOT BRANCH
.1c2d	a2 04		ldx #$04	 LDX #$04 ;PRINT FILE #4
.1c2f	20 c9 ff	jsr $ffc9	 JSR CHKOUT ;FILE IS OUTPUT
.1c32	68		pla		 PLA ;GET CHAR
.1c33	48		pha		 PHA ;RESAVE CHAR
.1c34	20 d2 ff	jsr $ffd2	 JSR CHROUT ;OUTPUT TO PRINTER
.1c37	20 cc ff	jsr $ffcc	 JSR CLRCHN ;RESET OUTPUT
.1c3a	ad 19 10	lda $1019	SCREN LDA DEVICE ;GET DEVICE FLAG
.1c3d	29 03		and #$03	 AND #$03 ;CHECK FOR SCREEN
.1c3f	f0 05		beq $1c46	 BEQ PEXIT ;IF NOT BRANCH
.1c41	68		pla		 PLA ;GET CHAR
.1c42	48		pha		 PHA ;RESAVE CHAR
.1c43	20 d2 ff	jsr $ffd2	 JSR CHROUT ;OUTPUT TO SCREEN
.1c46	68		pla		PEXIT PLA ;GET CHAR
.1c47	60		rts		 RTS ;RETURN
.1c48	20 5b 1c	jsr $1c5b	FINISH JSR CRLFPR ;PRINT CR
.1c4b	ee 57 10	inc $1057	 INC LISTCT ;INC LINE COUNT
.1c4e	ad 57 10	lda $1057	 LDA LISTCT ;GET COUNT
.1c51	c9 42		cmp #$42	 CMP #$42 ;66 LINES
.1c53	d0 f3		bne $1c48	 BNE FINISH ;IF NOT MORE
.1c55	a9 00		lda #$00	 LDA #$00 ;ZERO BYTE
.1c57	8d 57 10	sta $1057	 STA LISTCT ;RESET COUNT
.1c5a	60		rts		 RTS ;RETURN
.1c5b	a9 04		lda #$04	CRLFPR LDA #$04 ;DEVICE #4
.1c5d	8d 19 10	sta $1019	 STA DEVICE ;SET PRINTER
.1c60	20 f3 20	jsr $20f3	 JSR CRLF ;CR
.1c63	ad 1a 10	lda $101a	 LDA OUTPUT ;GET DEVICE
.1c66	8d 19 10	sta $1019	 STA DEVICE ;RESET DEVICE
.1c69	60		rts		 RTS ;RETURN
.1c6a	20 5b 1c	jsr $1c5b	NEXPTR JSR CRLFPR ;PRINT CR
.1c6d	ee 57 10	inc $1057	NEXLIN INC LISTCT ;INC LINE COUNT
.1c70	ad 57 10	lda $1057	 LDA LISTCT ;GET COUNT
.1c73	c9 3c		cmp #$3c	 CMP #$3C ;48 LINES
.1c75	d0 45		bne $1cbc	 BNE LINEOK ;IF NOT BRANCH
.1c77	20 48 1c	jsr $1c48	 JSR FINISH ;FINISH PAGE
.1c7a	ad 19 10	lda $1019	HEADER LDA DEVICE ;CHECK DEVICE
.1c7d	29 04		and #$04	 AND #$04 ;PRINTER?
.1c7f	f0 3b		beq $1cbc	 BEQ LINEOK ;IF NOT EXIT
.1c81	20 6a 1c	jsr $1c6a	 JSR NEXPTR ;NEXT LINE
.1c84	a9 04		lda #$04	 LDA #$04 ;DEVICE #4
.1c86	8d 19 10	sta $1019	 STA DEVICE ;SET DEVICE
.1c89	a9 2b		lda #$2b	 LDA #<XTITLE ;HEADER
.1c8b	a0 1d		ldy #$1d	 LDY #>XTITLE ;
.1c8d	20 bb 1b	jsr $1bbb	 JSR STRPNT ;PRINT IT
.1c90	ae 55 10	ldx $1055	 LDX PAGECT
.1c93	ad 56 10	lda $1056	 LDA PAGECT+1
.1c96	20 cc 1b	jsr $1bcc	 JSR PRTPAG
.1c99	20 6a 1c	jsr $1c6a	 JSR NEXPTR
.1c9c	20 6a 1c	jsr $1c6a	 JSR NEXPTR
.1c9f	a9 04		lda #$04	 LDA #$04
.1ca1	8d 19 10	sta $1019	 STA DEVICE
.1ca4	a9 46		lda #$46	 LDA #<LTITLE
.1ca6	a0 1d		ldy #$1d	 LDY #>LTITLE
.1ca8	20 bb 1b	jsr $1bbb	 JSR STRPNT
.1cab	20 6a 1c	jsr $1c6a	 JSR NEXPTR
.1cae	ee 55 10	inc $1055	 INC PAGECT
.1cb1	d0 03		bne $1cb6	 BNE PAGER1
.1cb3	ee 56 10	inc $1056	 INC PAGECT+1
.1cb6	20 6a 1c	jsr $1c6a	PAGER1 JSR NEXPTR
.1cb9	20 6a 1c	jsr $1c6a	 JSR NEXPTR
.1cbc	60		rts		LINEOK RTS
.1cbd	20 5b 1c	jsr $1c5b	NEXPTS JSR CRLFPR ;PRINT CR
.1cc0	ee 57 10	inc $1057	 INC LISTCT ;INC LINE COUNT
.1cc3	ad 57 10	lda $1057	 LDA LISTCT ;GET COUNT
.1cc6	c9 3c		cmp #$3c	 CMP #$3C ;48 LINES
.1cc8	d0 1d		bne $1ce7	 BNE HEADOK ;IF NOT BRANCH
.1cca	20 48 1c	jsr $1c48	 JSR FINISH ;FINISH PAGE
.1ccd	20 bd 1c	jsr $1cbd	HEADES JSR NEXPTS ;NEXT LINE
.1cd0	a9 63		lda #$63	 LDA #<XTITLS ;HEADER
.1cd2	a0 1d		ldy #$1d	 LDY #>XTITLS ;
.1cd4	20 bb 1b	jsr $1bbb	 JSR STRPNT ;PRINT IT
.1cd7	20 bd 1c	jsr $1cbd	 JSR NEXPTS
.1cda	20 bd 1c	jsr $1cbd	 JSR NEXPTS
.1cdd	a9 70		lda #$70	 LDA #<LTITLS
.1cdf	a0 1d		ldy #$1d	 LDY #>LTITLS
.1ce1	20 bb 1b	jsr $1bbb	 JSR STRPNT
.1ce4	20 bd 1c	jsr $1cbd	 JSR NEXPTS
.1ce7	60		rts		HEADOK RTS
.1ce8	ad 57 10	lda $1057	HEADSY LDA LISTCT
.1ceb	c9 35		cmp #$35	 CMP #$35
.1ced	b0 06		bcs $1cf5	 BCS HEADFX
.1cef	20 bd 1c	jsr $1cbd	 JSR NEXPTS
.1cf2	4c bd 1c	jmp $1cbd	 JMP NEXPTS
.1cf5	4c 48 1c	jmp $1c48	HEADFX JMP FINISH
.1cf8	ad 19 10	lda $1019	SCROFF LDA DEVICE
.1cfb	29 04		and #$04	 AND #$04
.1cfd	f0 08		beq $1d07	 BEQ SCRNO1
.1cff	ad 11 d0	lda $d011	 LDA VICREG
.1d02	29 ef		and #$ef	 AND #$EF
.1d04	8d 11 d0	sta $d011	 STA VICREG
.1d07	60		rts		SCRNO1 RTS
.1d08	ad 11 d0	lda $d011	SCRON LDA VICREG
.1d0b	09 10		ora #$10	 ORA #$10
.1d0d	8d 11 d0	sta $d011	 STA VICREG
.1d10	60		rts		 RTS
>1d11	30 31 32 33 34 35 36 37		HEXA .TEXT '0123456789ABCDEF'
>1d19	38 39 41 42 43 44 45 46
>1d21	01 0a 64 e8 10			CONST0 .BYTE $01,$0A,$64,$E8,$10
>1d26	00 00 00 03 27			CONST1 .BYTE $00,$00,$00,$03,$27
>1d2b	44 49 53 41 53 53 45 4d		XTITLE .TEXT 'DISASSEMBLER64.......PAGE '
>1d33	42 4c 45 52 36 34 2e 2e 2e 2e 2e 2e 2e 50 41 47
>1d43	45 20
>1d45	00				 .BYTE $00
>1d46	4c 49 4e 45 23 20 4c 4f		LTITLE .TEXT 'LINE# LOC   CODE        LINE'
>1d4e	43 20 20 20 43 4f 44 45 20 20 20 20 20 20 20 20
>1d5e	4c 49 4e 45
>1d62	00				 .BYTE $00
>1d63	53 59 4d 42 4f 4c 20 54		XTITLS .TEXT 'SYMBOL TABLE',0
>1d6b	41 42 4c 45 00
>1d70	53 59 4d 42 4f 4c 20 56		LTITLS .TEXT 'SYMBOL VALUE',0
>1d78	41 4c 55 45 00

;******  Return to file: pdisass64.asm


;******  Processing file: mode.asm

.1d7d	20 a9 24	jsr $24a9	DSLINE JSR DATAOP ;CHECK FOR DATA
.1d80	30 3d		bmi $1dbf	       BMI BYTT   ;N=1 THEN FOUND
.1d82	ad 6f 37	lda $376f	       LDA BITFLG ;CHECK BIT FLAG
.1d85	f0 0d		beq $1d94	       BEQ DISL   ;IF ZERO NO BIT
.1d87	20 2c 21	jsr $212c	       JSR GETSL  ;GET BYTE
.1d8a	c9 24		cmp #$24	       CMP #$24   ;ZEROPAGE BIT
.1d8c	f0 34		beq $1dc2	       BEQ BYZBIT ;
.1d8e	c9 2c		cmp #$2c	       CMP #$2C   ;ZEROPAGE BIT
.1d90	f0 55		beq $1de7	       BEQ BYABIT ;
.1d92	d0 00		bne $1d94	       BNE DISL   ;
=7572					DISL = *
.1d94	20 2c 21	jsr $212c	       JSR GETSL  ;GET BYTE
.1d97	ae 12 10	ldx $1012	       LDX PASS   ;GET PASS COUNT
.1d9a	ec 15 10	cpx $1015	       CPX CPASS  ;LAST
.1d9d	f0 06		beq $1da5	       BEQ DISL1  ;IF LAST BRANCH
.1d9f	20 71 27	jsr $2771	       JSR OPERN1 ;IF LAST BRANCH
.1da2	4c bf 1d	jmp $1dbf	       JMP BYTT   ;NEXT INSTRUCTION
.1da5	20 64 27	jsr $2764	DISL1  JSR PRTASS ;PRINT LINE DATA
.1da8	20 8a 20	jsr $208a	       JSR PRAD   ;PRINT ADDRESS
.1dab	20 05 21	jsr $2105	       JSR SPACE  ;SPACE OVER
.1dae	20 2c 21	jsr $212c	       JSR GETSL  ;GET BYTE
.1db1	48		pha		       PHA        ;STORE
.1db2	20 45 27	jsr $2745	       JSR MNEMON ;PRINT MNEMONIC
.1db5	20 05 21	jsr $2105	       JSR SPACE  ;SPACE OVER
.1db8	68		pla		       PLA        ;GET BYTE
.1db9	20 79 27	jsr $2779	       JSR OPERND ;PRINT OPERAND
.1dbc	20 fe 1a	jsr $1afe	FINAL  JSR NEWLIN ;START NEW LINE
.1dbf	4c 0a 21	jmp $210a	BYTT   JMP NEXTSL ;NEXT INSTRUCTION
=7618					BYZBIT = *
.1dc2	ad 6f 37	lda $376f	       LDA BITFLG
.1dc5	29 02		and #$02	       AND #$02
.1dc7	f0 cb		beq $1d94	       BEQ DISL
.1dc9	20 23 21	jsr $2123	      JSR INCSL  ;INC TO OPERAND
.1dcc	20 2c 21	jsr $212c	      JSR GETSL  ;GET OPERAND
.1dcf	48		pha		      PHA
.1dd0	20 42 21	jsr $2142	      JSR DECSL
.1dd3	68		pla		      PLA
.1dd4	c9 10		cmp #$10	      CMP #$10   ;BPL SKIP
.1dd6	f0 40		beq $1e18	      BEQ B0000
.1dd8	c9 18		cmp #$18	      CMP #$18   ;CLC SKIP
.1dda	f0 3c		beq $1e18	      BEQ B0000
.1ddc	c9 30		cmp #$30	      CMP #$30   ;BMI
.1dde	f0 38		beq $1e18	      BEQ B0000
.1de0	c9 38		cmp #$38	      CMP #$38   ;SEC
.1de2	f0 34		beq $1e18	      BEQ B0000
.1de4	4c 94 1d	jmp $1d94	      JMP DISL
=7655					BYABIT = *
.1de7	ad 6f 37	lda $376f	       LDA BITFLG
.1dea	29 01		and #$01	       AND #$01
.1dec	f0 a6		beq $1d94	       BEQ DISL
.1dee	20 23 21	jsr $2123	      JSR INCSL  ;INC TO OPERAND
.1df1	20 2c 21	jsr $212c	      JSR GETSL  ;GET OPERAND
.1df4	48		pha		      PHA
.1df5	20 42 21	jsr $2142	      JSR DECSL
.1df8	68		pla		      PLA
.1df9	c9 a1		cmp #$a1	      CMP #$A1   ;LDY A IMMEDIATE SKIP
.1dfb	f0 1b		beq $1e18	      BEQ B0000
.1dfd	c9 a2		cmp #$a2	      CMP #$A2   ;LDA A IMMEDIATE SKIP
.1dff	f0 17		beq $1e18	      BEQ B0000
.1e01	c9 a9		cmp #$a9	      CMP #$A9   ;LDX A IMMEDIATE SKIP
.1e03	f0 13		beq $1e18	      BEQ B0000
.1e05	c9 65		cmp #$65	      CMP #$65   ;ADC ZP
.1e07	f0 0f		beq $1e18	      BEQ B0000
.1e09	c9 85		cmp #$85	      CMP #$85   ;STA ZP
.1e0b	f0 0b		beq $1e18	      BEQ B0000
.1e0d	c9 b1		cmp #$b1	      CMP #$B1   ;LDA (ZP),Y
.1e0f	f0 07		beq $1e18	      BEQ B0000
.1e11	c9 e6		cmp #$e6	      CMP #$E6   ;INC
.1e13	f0 03		beq $1e18	      BEQ B0000
.1e15	4c 94 1d	jmp $1d94	      JMP DISL
=7704					B0000 = *
.1e18	ad 12 10	lda $1012	       LDA PASS  ;GET PASS COUNT
.1e1b	cd 15 10	cmp $1015	       CMP CPASS ;LAST
.1e1e	d0 9f		bne $1dbf	       BNE BYTT  ;IF NOT NEXT BYTE
.1e20	20 61 20	jsr $2061	       JSR COMENT    ;COMENT LINE
.1e23	20 05 22	jsr $2205	       JSR PRTDAT    ;PRINT LINE DATA
.1e26	20 92 21	jsr $2192	       JSR PRTONE    ;ONE BYTE
.1e29	20 8a 20	jsr $208a	       JSR PRAD      ;PRINT ADDRESS
.1e2c	20 05 21	jsr $2105	       JSR SPACE     ;SPACE OVER
.1e2f	a9 5b		lda #$5b	       LDA #<MSGBIT  ;.BYTE $
.1e31	a0 21		ldy #$21	       LDY #>MSGBIT  ;
.1e33	20 bb 1b	jsr $1bbb	       JSR STRPNT    ;PRINT IT
.1e36	20 2c 21	jsr $212c	       JSR GETSL     ;GET BYTE
.1e39	20 a5 1b	jsr $1ba5	       JSR PRBYT     ;PRINT BYTE
.1e3c	a9 63		lda #$63	       LDA #<MSGBZP  ;BIT COMMENT
.1e3e	a0 21		ldy #$21	       LDY #>MSGBZP  ;
.1e40	20 bb 1b	jsr $1bbb	       JSR STRPNT    ;PRINT IT
.1e43	20 fe 1a	jsr $1afe	       JSR NEWLIN   ;PRINT BYTE
.1e46	20 67 20	jsr $2067	       JSR COMET    ;COMENT LINE
.1e49	4c bc 1d	jmp $1dbc	       JMP FINAL    ;CR AND NEXT BYTE
.1e4c	ea		nop		ONEBIT NOP
.1e4d	20 23 21	jsr $2123	ONEBYT JSR INCSL ;INC TO BYTE
.1e50	20 2c 21	jsr $212c	 JSR GETSL ;GET BYTE
.1e53	8d 45 10	sta $1045	 STA WORKED ;STORE OPERAND
.1e56	a9 00		lda #$00	 LDA #$00 ;ZERO BYTE
.1e58	8d 46 10	sta $1046	 STA WORKED+1 ;ZERO HIGH BYTE
.1e5b	ad 12 10	lda $1012	 LDA PASS ;GET PASS COUNT
.1e5e	cd 13 10	cmp $1013	 CMP IPASS       ;INTERNAL
.1e61	f0 54		beq $1eb7	 BEQ OPCPUT ;TABLE OPERAND
.1e63	cd 14 10	cmp $1014	 CMP EPASS       ;EXTERNAL
.1e66	f0 52		beq $1eba	 BEQ OPCSYM ;EXTERNAL EQUATE
.1e68	20 5c 2b	jsr $2b5c	 JSR SYMOP ;CHECK FOR SYMBOL
.1e6b	b0 50		bcs $1ebd	 BCS TWOB ;SYMBOL FOUND
.1e6d	20 3c 22	jsr $223c	 JSR RANGE ;IS IT INTERNAL
.1e70	90 06		bcc $1e78	 BCC ONEBY ;GENERATE LABEL
.1e72	20 d0 20	jsr $20d0	 JSR DOLLAR ;EXTERNAL
.1e75	4c 7b 1e	jmp $1e7b	 JMP ONEBX ;PRINT ADDRESS
.1e78	20 80 20	jsr $2080	ONEBY JSR PRLA ;PRINT XX
.1e7b	ad 45 10	lda $1045	ONEBX LDA WORKED ;GET OPERAND
.1e7e	4c a5 1b	jmp $1ba5	 JMP PRBYT ;PRINT BYTE
.1e81	ea		nop		TWOBIT NOP
.1e82	20 23 21	jsr $2123	TWOBYT JSR INCSL ;INC TO BYTE
.1e85	20 2c 21	jsr $212c	 JSR GETSL ;GET BYTE
.1e88	8d 45 10	sta $1045	 STA WORKED ;STORE LOW BYTE
.1e8b	20 23 21	jsr $2123	 JSR INCSL ;INC TO BYTE
.1e8e	20 2c 21	jsr $212c	 JSR GETSL ;GET BYTE
.1e91	8d 46 10	sta $1046	 STA WORKED+1 ;STORE HIGH BYTE
.1e94	ad 12 10	lda $1012	 LDA PASS ;GET PASS COUNT
.1e97	cd 13 10	cmp $1013	 CMP IPASS       ;INTERNAL
.1e9a	f0 1b		beq $1eb7	 BEQ OPCPUT ;TABLE OPERNAD
.1e9c	cd 14 10	cmp $1014	 CMP EPASS       ;EXTERNAL
.1e9f	f0 19		beq $1eba	 BEQ OPCSYM ;EXTERNAL EQUATE
.1ea1	20 5c 2b	jsr $2b5c	 JSR SYMOP  ;CHECK SYMBOL
.1ea4	b0 17		bcs $1ebd	 BCS TWOB   ;C=1 FOUND ONE
.1ea6	20 3c 22	jsr $223c	 JSR RANGE  ;IS IT INTERNAL
.1ea9	90 06		bcc $1eb1	 BCC TWOBY  ;GERNERATE LABEL
.1eab	20 d0 20	jsr $20d0	 JSR DOLLAR ;EXTERNAL
.1eae	4c b4 1e	jmp $1eb4	 JMP TWOBX  ;
=7857					TWOBY =*
.1eb1	20 80 20	jsr $2080	 JSR PRLA   ;PRINT XX
=7860					TWOBX = *
.1eb4	4c c2 20	jmp $20c2	 JMP PWORKD ;PRINT ADDRESS
=7863					OPCPUT = *
.1eb7	4c b3 22	jmp $22b3	 JMP PUTI   ;PUT IN TABLE
=7866					OPCSYM = *
.1eba	4c 5c 2b	jmp $2b5c	 JMP SYMOP  ;CHECK EXT EQUATE
=7869					TWOB = *
.1ebd	60		rts		 RTS        ;RETURN
.1ebe	ee 5a 10	inc $105a	ILLEGL INC ERRCT   ;INC ERROR COUNT
.1ec1	d0 03		bne $1ec6	       BNE *+5     ;SKIP NEXT LINE
.1ec3	ee 5b 10	inc $105b	       INC ERRCT+1 ;INC ERROR COUNT
.1ec6	a0 27		ldy #$27	       LDY #>MBYTE ;.BYTE
.1ec8	a9 2c		lda #$2c	       LDA #<MBYTE ;
.1eca	20 bb 1b	jsr $1bbb	       JSR STRPNT  ;PRINT STRING
.1ecd	20 d0 20	jsr $20d0	       JSR DOLLAR  ;PRINT $
.1ed0	20 2c 21	jsr $212c	       JSR GETSL   ;GET ILLEGAL BYTE
.1ed3	48		pha		       PHA         ;PUT BYTE ON STACK
.1ed4	20 a5 1b	jsr $1ba5	       JSR PRBYT   ;PRINT IT
.1ed7	20 05 21	jsr $2105	       JSR SPACE   ;SPACE OVER
.1eda	68		pla		       PLA         ;POP BYTE OFF STACK
.1edb	20 34 26	jsr $2634	       JSR CASCII  ;IS IT PRINTABLE ASCII
.1ede	b0 18		bcs $1ef8	       BCS ISKIP   ;IF NOT EXIT
.1ee0	48		pha		       PHA         ;STACK IT
.1ee1	20 05 21	jsr $2105	       JSR SPACE   ;SPACE OVER
.1ee4	20 cb 20	jsr $20cb	       JSR SEMIC   ;COMMENT
.1ee7	a9 27		lda #$27	       LDA #"'"    ;QUOTE
.1ee9	20 11 1c	jsr $1c11	       JSR PCHAR   ;PRINT IT
.1eec	68		pla		       PLA         ;POP IT
.1eed	20 11 1c	jsr $1c11	       JSR PCHAR   ;PRINT IT
.1ef0	a9 27		lda #$27	       LDA #"'"    ;QUOTE
.1ef2	20 11 1c	jsr $1c11	       JSR PCHAR   ;PRINT IT
.1ef5	20 05 21	jsr $2105	       JSR SPACE   ;SPACE OVER
=7928					ISKIP = *
.1ef8	a0 21		ldy #$21	       LDY #>ILLMSG
.1efa	a9 7e		lda #$7e	       LDA #<ILLMSG
.1efc	4c bb 1b	jmp $1bbb	       JMP STRPNT
.1eff	a9 41		lda #$41	ACC LDA #'A'     ;ASCII A
.1f01	4c 11 1c	jmp $1c11	 JMP PCHAR ;PRINT IT
.1f04	20 23 21	jsr $2123	IMMEDT JSR INCSL ;INC TO DATA BYTE
.1f07	ae 12 10	ldx $1012	 LDX PASS ;GET PASS
.1f0a	ec 15 10	cpx $1015	 CPX CPASS ;LAST PASS
.1f0d	d0 2a		bne $1f39	 BNE IMEXIT ;EXIT
.1f0f	a9 23		lda #$23	 LDA #'#'        ;ASCII #
.1f11	20 11 1c	jsr $1c11	 JSR PCHAR ;PRINT IT
.1f14	20 d0 20	jsr $20d0	 JSR DOLLAR ;PRINT $
.1f17	20 2c 21	jsr $212c	 JSR GETSL ;GET BYTE
.1f1a	48		pha		 PHA ;STACK IT
.1f1b	20 a5 1b	jsr $1ba5	 JSR PRBYT ;PRINT IT
.1f1e	68		pla		 PLA ;POP IT
.1f1f	20 34 26	jsr $2634	 JSR CASCII ;PRINTABLE ASCII
.1f22	b0 15		bcs $1f39	 BCS IMEXIT ;IF NOT EXIT
.1f24	48		pha		 PHA ;STACK IT
.1f25	20 f8 20	jsr $20f8	 JSR SPAC6 ;SPACE OVER
.1f28	20 cb 20	jsr $20cb	 JSR SEMIC ;COMMENT
.1f2b	a9 27		lda #$27	 LDA #"'"        ;QUOTE
.1f2d	20 11 1c	jsr $1c11	 JSR PCHAR ;PRINT IT
.1f30	68		pla		 PLA ;POP IT
.1f31	20 11 1c	jsr $1c11	 JSR PCHAR ;PRINT IT
.1f34	a9 27		lda #$27	 LDA #"'"        ;QUOTE
.1f36	20 11 1c	jsr $1c11	 JSR PCHAR ;PRINT IT
.1f39	60		rts		IMEXIT RTS ;EXIT
.1f3a	ea		nop		ZERBIT NOP
.1f3b	4c 4d 1e	jmp $1e4d	ZEROPG JMP ONEBYT ;PRINT ONE BYTE
.1f3e	20 4d 1e	jsr $1e4d	ZEROX JSR ONEBYT ;PRINT ONE BYTE
.1f41	4c df 20	jmp $20df	 JMP XINDEX ;PRINT ,X
.1f44	20 4d 1e	jsr $1e4d	ZEROY JSR ONEBYT ;PRINT ONE BYTE
.1f47	4c e9 20	jmp $20e9	 JMP YINDEX ;PRINT ,Y
.1f4a	ea		nop		ABSBIT NOP
.1f4b	20 82 1e	jsr $1e82	ABSLUT JSR TWOBYT ;PRINT TWO BYTE
.1f4e	20 42 21	jsr $2142	 JSR DECSL ;DEC TO SECOND
.1f51	20 42 21	jsr $2142	 JSR DECSL ;DEC TO OPCODE
.1f54	20 2c 21	jsr $212c	 JSR GETSL ;GET BYTE
.1f57	48		pha		 PHA
.1f58	20 23 21	jsr $2123	 JSR INCSL
.1f5b	20 23 21	jsr $2123	 JSR INCSL
.1f5e	68		pla		 PLA
.1f5f	c9 4c		cmp #$4c	 CMP #$4C ;IS IT JMP
.1f61	d0 0c		bne $1f6f	 BNE ABSEXT ;IF NOT EXIT
.1f63	20 fe 1a	jsr $1afe	 JSR NEWLIN ;NEXT LINE
.1f66	20 23 21	jsr $2123	 JSR INCSL
.1f69	20 67 20	jsr $2067	 JSR COMET ;COMMENT LINE
.1f6c	20 42 21	jsr $2142	 JSR DECSL
.1f6f	60		rts		ABSEXT RTS ;RETURN
.1f70	20 82 1e	jsr $1e82	ABSX JSR TWOBYT ;PRINT TWO BYTE
.1f73	4c df 20	jmp $20df	 JMP XINDEX ;PRINT ,X
.1f76	20 82 1e	jsr $1e82	ABSY JSR TWOBYT ;PRINT TWO BYTE
.1f79	4c e9 20	jmp $20e9	 JMP YINDEX ;PRINT ,Y
.1f7c	20 2c 21	jsr $212c	IMPLID JSR GETSL ;GET BYTE
.1f7f	f0 09		beq $1f8a	 BEQ IMPLI1 ;BRK
.1f81	c9 60		cmp #$60	 CMP #$60 ;CHECK CODE
.1f83	f0 05		beq $1f8a	 BEQ IMPLI1 ;RTS
.1f85	c9 40		cmp #$40	 CMP #$40 ;CHECK CODE
.1f87	f0 01		beq $1f8a	 BEQ IMPLI1 ;RTI
.1f89	60		rts		IMPONE RTS ;RETURN
.1f8a	20 fe 1a	jsr $1afe	IMPLI1 JSR NEWLIN ;PRINT NEW LINE
.1f8d	20 23 21	jsr $2123	 JSR INCSL
.1f90	20 67 20	jsr $2067	 JSR COMET ;COMMENT LINE
.1f93	4c 42 21	jmp $2142	 JMP DECSL
.1f96	20 d5 20	jsr $20d5	INDRCT JSR LPAREN ;PRINT (
.1f99	20 82 1e	jsr $1e82	 JSR TWOBYT ;PRINT TWO BYTE
.1f9c	20 da 20	jsr $20da	 JSR RPAREN ;PRINT )
.1f9f	20 fe 1a	jsr $1afe	 JSR NEWLIN ;NEXT LINE
.1fa2	20 23 21	jsr $2123	 JSR INCSL
.1fa5	20 67 20	jsr $2067	 JSR COMET ;COMMENT LINE
.1fa8	4c 42 21	jmp $2142	 JMP DECSL
.1fab	20 d5 20	jsr $20d5	INDX JSR LPAREN ;PRINT (
.1fae	20 3e 1f	jsr $1f3e	 JSR ZEROX ;PRINT $HH,X
.1fb1	4c da 20	jmp $20da	 JMP RPAREN ;PRINT )
.1fb4	20 d5 20	jsr $20d5	INDY JSR LPAREN ;PRINT (
.1fb7	20 4d 1e	jsr $1e4d	 JSR ONEBYT ;PRINT ONE BYTE
.1fba	20 da 20	jsr $20da	 JSR RPAREN ;PRINT )
.1fbd	4c e9 20	jmp $20e9	 JMP YINDEX ;PRINT ,Y
.1fc0	20 23 21	jsr $2123	RELATV JSR INCSL    ;INC BYTE POINTER
.1fc3	ad 12 10	lda $1012	       LDA PASS     ;GET PASS COUNT
.1fc6	cd 14 10	cmp $1014	       CMP EPASS    ;EXTERNAL
.1fc9	f0 44		beq $200f	       BEQ RELSYM   ;EXIT ON EXTERNAL
.1fcb	ad 22 10	lda $1022	       LDA SELECT   ;GET LOW POINTER
.1fce	8d 45 10	sta $1045	       STA WORKED   ;STORE TEMP
.1fd1	ad 23 10	lda $1023	       LDA SELECT+1 ;GET HIGH POINTER
.1fd4	8d 46 10	sta $1046	       STA WORKED+1 ;STORE TEMP
.1fd7	ee 45 10	inc $1045	       INC WORKED   ;ADD 1 TO ADDRESS
.1fda	d0 03		bne $1fdf	       BNE *+5      ;ZERO MEANS CARRY
.1fdc	ee 46 10	inc $1046	       INC WORKED+1 ;INC HIGH ADDRESS
.1fdf	20 2c 21	jsr $212c	       JSR GETSL    ;GET BYTE BRANCH OFFSET
.1fe2	c9 00		cmp #$00	       CMP #$00     ;IS IT ZERO
.1fe4	10 03		bpl $1fe9	       BPL FORWRD   ;IF SO BRANCH
.1fe6	ce 46 10	dec $1046	       DEC WORKED+1 ;DEC HIGH POINTER
.1fe9	18		clc		FORWRD CLC          ;CLEAR CARRY FLAG
.1fea	6d 45 10	adc $1045	       ADC WORKED   ;ADD IN OPERAND
.1fed	90 03		bcc $1ff2	       BCC RELND    ;TO SELECT ADDRES
.1fef	ee 46 10	inc $1046	       INC WORKED+1 ;AND NOW POINTS
.1ff2	8d 45 10	sta $1045	RELND  STA WORKED   ;TARGET ADDRESS
.1ff5	ad 12 10	lda $1012	       LDA PASS     ;GET PASS COUNT
.1ff8	cd 13 10	cmp $1013	       CMP IPASS    ;INTERNAL
.1ffb	f0 0f		beq $200c	       BEQ RELPUT   ;ADDRESS TABLE
.1ffd	20 5c 2b	jsr $2b5c	       JSR SYMOP    ;CHECK FOR SYMBOL
.2000	b0 0d		bcs $200f	       BCS RELSYM   ;C=1 SYMBOL
.2002	ad 18 10	lda $1018	       LDA ROPT     ;CHECK OPTION
.2005	c9 01		cmp #$01	       CMP #$01     ;REL TO * ?
.2007	f0 07		beq $2010	       BEQ RELPC    ;IF SO DO IT
.2009	4c bf 20	jmp $20bf	       JMP PWORK    ;PRINT ADDRESS
=8204					RELPUT = *
.200c	4c b3 22	jmp $22b3	       JMP PUTI     ;PUT IN TABLE
.200f	60		rts		RELSYM RTS          ;RETURN
.2010	20 2c 21	jsr $212c	RELPC JSR GETSL ;GET BRANCH DATA
.2013	48		pha		 PHA ;SAVE ON STACK
.2014	30 07		bmi $201d	 BMI RELNEG ;BACKWARD ?
.2016	a9 71		lda #$71	 LDA #<POSREL
.2018	a0 21		ldy #$21	 LDY #>POSREL
.201a	4c 21 20	jmp $2021	 JMP RELPM
.201d	a9 75		lda #$75	RELNEG LDA #<NEGREL
.201f	a0 21		ldy #$21	 LDY #>NEGREL
.2021	20 bb 1b	jsr $1bbb	RELPM JSR STRPNT
.2024	68		pla		 PLA ;GET BRANCH DATA
.2025	18		clc		 CLC ;CLEAR CARRY
.2026	69 02		adc #$02	 ADC #$02 ;ADD 2 FOR BRANCH
.2028	10 05		bpl $202f	 BPL RELP ;FORWARD ?
.202a	18		clc		 CLC ;CLEAR CARRY
.202b	49 ff		eor #$ff	 EOR #$FF ;COMPLMENT
.202d	69 01		adc #$01	 ADC #$01 ;ADD 1 FOR 2'S
.202f	20 a5 1b	jsr $1ba5	RELP JSR PRBYT ;PRINT BRANCH
.2032	20 f8 20	jsr $20f8	 JSR SPAC6 ;SPACE
.2035	20 cb 20	jsr $20cb	 JSR SEMIC ;COMMENT CHAR
.2038	4c bf 20	jmp $20bf	 JMP PWORK ;PRINT ADDRESS
.203b	20 29 22	jsr $2229	ORGIN JSR PRTOTH ;PRINT LINE DATA
.203e	a9 2a		lda #$2a	 LDA #'*'        ;PC
.2040	20 11 1c	jsr $1c11	 JSR PCHAR ;PRINT IT
.2043	a9 3d		lda #$3d	 LDA #'='        ;EQUALS
.2045	20 11 1c	jsr $1c11	 JSR PCHAR ;PRINT IT
.2048	20 d0 20	jsr $20d0	 JSR DOLLAR ;ASCII $
.204b	20 b6 20	jsr $20b6	 JSR PSELEC ;PRINT ADDRESS
.204e	4c fe 1a	jmp $1afe	 JMP NEWLIN ;START NEWLINE
.2051	20 61 20	jsr $2061	EFILE JSR COMENT ;COMMENT LINE
.2054	20 29 22	jsr $2229	 JSR PRTOTH ;PRINT LINE DATA
.2057	a9 79		lda #$79	 LDA #<MSGEND ;END MESSAGE
.2059	a0 21		ldy #$21	 LDY #>MSGEND
.205b	20 bb 1b	jsr $1bbb	 JSR STRPNT ;PRINT IT
.205e	4c fe 1a	jmp $1afe	 JMP NEWLIN ;NEW LINE
.2061	20 67 20	jsr $2067	COMENT JSR COMET ;PRINT COMMENT
.2064	4c fe 1a	jmp $1afe	 JMP NEWLIN ;NEXT LINE
.2067	20 29 22	jsr $2229	COMET JSR PRTOTH ;PRINT LINE DATA
.206a	20 cb 20	jsr $20cb	 JSR SEMIC ;PRINT COMMENT
.206d	ad 1c 10	lda $101c	 LDA FOROPT
.2070	d0 03		bne $2075	 BNE CSHORT
.2072	a0 20		ldy #$20	 LDY #$20 ;COUNTER
>2074	2c				 .BYTE $2C
.2075	a0 10		ldy #$10	CSHORT LDY #$10
.2077	a9 2a		lda #$2a	COMPT LDA #'*'    ;STAR
.2079	20 11 1c	jsr $1c11	 JSR PCHAR ;PRINT CHAR
.207c	88		dey		 DEY ;DEC COUNTER
.207d	d0 f8		bne $2077	 BNE COMPT ;20 OR 10 STARS
.207f	60		rts		 RTS ;RETURN
.2080	a9 58		lda #$58	PRLA LDA #'X' ;XX LABEL
.2082	20 11 1c	jsr $1c11	 JSR PCHAR ;
.2085	a9 58		lda #$58	 LDA #'X'     ;
.2087	4c 11 1c	jmp $1c11	 JMP PCHAR ;
.208a	20 48 2b	jsr $2b48	PRAD JSR SYM ;CHECK FOR SYMBOLIC
.208d	b0 1f		bcs $20ae	 BCS NPRAD1 ;C=1 SYMBOLIC LABEL
.208f	ad 17 10	lda $1017	 LDA XOPT ;CHECK GENERATION
.2092	f0 10		beq $20a4	 BEQ P1 ;NO LABELS
.2094	20 12 23	jsr $2312	 JSR INTCHA ;IS ADDRESS IN TAB
.2097	b0 0b		bcs $20a4	 BCS P1 ;C=1 YES
.2099	ad 1c 10	lda $101c	 LDA FOROPT ;CHECK FORMAT
.209c	f0 03		beq $20a1	 BEQ POVER  ;STD FORMAT
.209e	4c 05 21	jmp $2105	 JMP SPACE  ;ONE SPACE
.20a1	4c f8 20	jmp $20f8	POVER JMP SPAC6 ;SPACE OVER
.20a4	20 80 20	jsr $2080	P1 JSR PRLA ;PRINT XX
.20a7	20 b6 20	jsr $20b6	 JSR PSELEC ;PRINT ADDRESS
.20aa	ea		nop		 NOP
.20ab	ea		nop		 NOP
.20ac	ea		nop		 NOP
.20ad	60		rts		NPRAD RTS ;RETURN
.20ae	ad 1c 10	lda $101c	NPRAD1 LDA FOROPT
.20b1	d0 fa		bne $20ad	 BNE NPRAD
.20b3	4c f9 2b	jmp $2bf9	 JMP FIXSYM
.20b6	ad 22 10	lda $1022	PSELEC LDA SELECT ;LOW BYTE
.20b9	ac 23 10	ldy $1023	 LDY SELECT+1 ;HIGH BYTE
.20bc	4c 9f 1b	jmp $1b9f	 JMP PRBYTS ;PRINT THEM
.20bf	20 80 20	jsr $2080	PWORK JSR PRLA ;PRINT XX
.20c2	ad 45 10	lda $1045	PWORKD LDA WORKED ;LOW BYTE
.20c5	ac 46 10	ldy $1046	 LDY WORKED+1 ;HIGH BYTE
.20c8	4c 9f 1b	jmp $1b9f	 JMP PRBYTS ;PRINT THEM
.20cb	a9 3b		lda #$3b	SEMIC LDA #';'
.20cd	4c 11 1c	jmp $1c11	 JMP PCHAR
.20d0	a9 24		lda #$24	DOLLAR LDA #'$'
.20d2	4c 11 1c	jmp $1c11	 JMP PCHAR
.20d5	a9 28		lda #$28	LPAREN LDA #'('
.20d7	4c 11 1c	jmp $1c11	 JMP PCHAR
.20da	a9 29		lda #$29	RPAREN LDA #')'
.20dc	4c 11 1c	jmp $1c11	 JMP PCHAR
.20df	a9 2c		lda #$2c	XINDEX LDA #','
.20e1	20 11 1c	jsr $1c11	 JSR PCHAR
.20e4	a9 58		lda #$58	 LDA #'X'
.20e6	4c 11 1c	jmp $1c11	 JMP PCHAR
.20e9	a9 2c		lda #$2c	YINDEX LDA #','
.20eb	20 11 1c	jsr $1c11	 JSR PCHAR
.20ee	a9 59		lda #$59	 LDA #'Y'
.20f0	4c 11 1c	jmp $1c11	 JMP PCHAR
.20f3	a9 0d		lda #$0d	CRLF LDA #$0D ;ASCII CR
.20f5	4c 11 1c	jmp $1c11	 JMP PCHAR ;PRINT
.20f8	a9 05		lda #$05	SPAC6 LDA #$05
.20fa	8d 51 10	sta $1051	SPACM STA TEMP
.20fd	20 05 21	jsr $2105	SPAC JSR SPACE
.2100	ce 51 10	dec $1051	 DEC TEMP
.2103	d0 f8		bne $20fd	 BNE SPAC
.2105	a9 20		lda #$20	SPACE LDA #$20 ;ASCII SPACE
.2107	4c 11 1c	jmp $1c11	 JMP PCHAR ;PRINT
.210a	ad 23 10	lda $1023	NEXTSL LDA SELECT+1
.210d	cd 21 10	cmp $1021	 CMP EA+1
.2110	90 0a		bcc $211c	 BCC SLOK
.2112	d0 0d		bne $2121	 BNE NOINC
.2114	ad 22 10	lda $1022	 LDA SELECT
.2117	cd 20 10	cmp $1020	 CMP EA
.211a	b0 05		bcs $2121	 BCS NOINC
.211c	20 23 21	jsr $2123	SLOK JSR INCSL
.211f	18		clc		 CLC
.2120	60		rts		 RTS
.2121	38		sec		NOINC SEC
.2122	60		rts		 RTS
.2123	ee 22 10	inc $1022	INCSL INC SELECT
.2126	d0 03		bne $212b	 BNE *+5
.2128	ee 23 10	inc $1023	 INC SELECT+1
.212b	60		rts		 RTS
.212c	18		clc		GETSL CLC
.212d	ad 22 10	lda $1022	 LDA SELECT
.2130	6d 24 10	adc $1024	 ADC OFFSET
.2133	85 dd		sta $dd		 STA ZEROUR
.2135	ad 23 10	lda $1023	 LDA SELECT+1
.2138	6d 25 10	adc $1025	 ADC OFFSET+1
.213b	85 de		sta $de		 STA ZEROUR+1
.213d	a0 00		ldy #$00	 LDY #$00
.213f	b1 dd		lda ($dd),y	 LDA (ZEROUR),Y
.2141	60		rts		 RTS
.2142	ad 22 10	lda $1022	DECSL LDA SELECT
.2145	d0 03		bne $214a	 BNE *+5
.2147	ce 23 10	dec $1023	 DEC SELECT+1
.214a	ce 22 10	dec $1022	 DEC SELECT
.214d	60		rts		 RTS
.214e	ad 1e 10	lda $101e	INTSA LDA SA
.2151	8d 22 10	sta $1022	 STA SELECT
.2154	ad 1f 10	lda $101f	 LDA SA+1
.2157	8d 23 10	sta $1023	 STA SELECT+1
.215a	60		rts		 RTS
>215b	2e 42 59 54 45 20 24 00		MSGBIT .TEXT '.BYTE $',0
>2163	20 3b 42 49 54 20 5a 50		MSGBZP .TEXT ' ;BIT ZP SKIP',0
>216b	20 53 4b 49 50 00
>2171	2a 2b 24 00			POSREL .TEXT '*+$',0
>2175	2a 2d 24 00			NEGREL .TEXT '*-$',0
>2179	2e 45 4e 44 00			MSGEND .TEXT '.END',0
>217e	3b 3f 3f 3f 20 49 4c 4c		ILLMSG .TEXT ';??? ILLEGAL OPCODE',0
>2186	45 47 41 4c 20 4f 50 43 4f 44 45 00
.2192	20 2c 21	jsr $212c	PRTONE JSR GETSL ;GET BYTE
.2195	20 a5 1b	jsr $1ba5	 JSR PRBYT ;PRINT BYTE
.2198	ad 1c 10	lda $101c	 LDA FOROPT
.219b	f0 03		beq $21a0	 BEQ PRTON1
.219d	a9 07		lda #$07	 LDA #$07
>219f	2c				 .BYTE $2C
.21a0	a9 09		lda #$09	PRTON1 LDA #$09 ;10 SPACES
.21a2	20 fa 20	jsr $20fa	 JSR SPACM ;
.21a5	4c fe 21	jmp $21fe	 JMP PRTEST ;RESET I/O DEVICE
.21a8	20 2c 21	jsr $212c	PRTTWO JSR GETSL ;GET BYTE
.21ab	20 a5 1b	jsr $1ba5	 JSR PRBYT ;PRINT BYTE
.21ae	20 05 21	jsr $2105	 JSR SPACE ;
.21b1	20 23 21	jsr $2123	 JSR INCSL ;INC TO OPERAND
.21b4	20 2c 21	jsr $212c	 JSR GETSL ;GET BYTE
.21b7	20 a5 1b	jsr $1ba5	 JSR PRBYT ;PRINT IT
.21ba	ad 1c 10	lda $101c	 LDA FOROPT
.21bd	f0 03		beq $21c2	 BEQ PRTTW1
.21bf	a9 04		lda #$04	 LDA #$04
>21c1	2c				 .BYTE $2C
.21c2	a9 06		lda #$06	PRTTW1 LDA #$06 ;7 SPACES
.21c4	20 fa 20	jsr $20fa	 JSR SPACM ;
.21c7	20 42 21	jsr $2142	 JSR DECSL ;RESET POINTER
.21ca	4c fe 21	jmp $21fe	 JMP PRTEST ;RESET I/O DEVICE
.21cd	20 2c 21	jsr $212c	PRTTHE JSR GETSL ;GET BYTE
.21d0	20 a5 1b	jsr $1ba5	 JSR PRBYT ;PRINT BYTE
.21d3	20 05 21	jsr $2105	 JSR SPACE ;
.21d6	20 23 21	jsr $2123	 JSR INCSL ;INC TO OPERAND
.21d9	20 2c 21	jsr $212c	 JSR GETSL ;GET BYTE
.21dc	20 a5 1b	jsr $1ba5	 JSR PRBYT ;PRINT IT
.21df	20 05 21	jsr $2105	 JSR SPACE ;
.21e2	20 23 21	jsr $2123	 JSR INCSL ;INC TO LAST BYTE
.21e5	20 2c 21	jsr $212c	 JSR GETSL ;GET BYTE
.21e8	20 a5 1b	jsr $1ba5	 JSR PRBYT ;PRINT IT
.21eb	ad 1c 10	lda $101c	 LDA FOROPT
.21ee	f0 03		beq $21f3	 BEQ PRTTH1
.21f0	a9 01		lda #$01	 LDA #$01
>21f2	2c				 .BYTE $2C
.21f3	a9 03		lda #$03	PRTTH1 LDA #$03 ;4 SPACES
.21f5	20 fa 20	jsr $20fa	 JSR SPACM ;
.21f8	20 42 21	jsr $2142	 JSR DECSL ;DEC POINTER
.21fb	20 42 21	jsr $2142	 JSR DECSL ;DEC POINTER
.21fe	ad 1a 10	lda $101a	PRTEST LDA OUTPUT ;GET I/O DEVICE
.2201	8d 19 10	sta $1019	 STA DEVICE ;RESET I/O
.2204	60		rts		 RTS ;RETURN
.2205	ad 19 10	lda $1019	PRTDAT LDA DEVICE ;OUTPUT DEVICE
.2208	29 07		and #$07	 AND #$07 ;MASK DISK
.220a	8d 19 10	sta $1019	 STA DEVICE ;RESET
.220d	ad 1c 10	lda $101c	 LDA FOROPT ;CHECK FORMAT
.2210	d0 0f		bne $2221	 BNE PRTDAF ;SKIP LINE #
.2212	ad 59 10	lda $1059	 LDA LINECT+1 ;HIH BYTE LINE
.2215	ae 58 10	ldx $1058	 LDX LINECT ;LOW BYTE LINE
.2218	20 d7 1b	jsr $1bd7	 JSR PRTNUM ;PRINT NUMBER
.221b	20 05 21	jsr $2105	 JSR SPACE ;
.221e	20 05 21	jsr $2105	 JSR SPACE ;
.2221	20 b6 20	jsr $20b6	PRTDAF JSR PSELEC ;PRINT ADDRESS
.2224	a9 01		lda #$01	 LDA #$01 ;2 SPACES
.2226	4c fa 20	jmp $20fa	 JMP SPACM ;
.2229	20 05 22	jsr $2205	PRTOTH JSR PRTDAT ;PRINT LINE
.222c	ad 1c 10	lda $101c	 LDA FOROPT
.222f	f0 03		beq $2234	 BEQ PRTOT1
.2231	a9 09		lda #$09	 LDA #$09
>2233	2c				 .BYTE $2C
.2234	a9 0b		lda #$0b	PRTOT1 LDA #$0B ;12 SPACES
.2236	20 fa 20	jsr $20fa	 JSR SPACM ;
.2239	4c fe 21	jmp $21fe	 JMP PRTEST ;RESET I/O

;******  Return to file: pdisass64.asm


;******  Processing file: internal.asm

.223c	ad 46 10	lda $1046	RANGE LDA WORKED+1 ;GET HIGH
.223f	cd 29 10	cmp $1029	 CMP EAGOL+1 ;COMPARE
.2242	90 0a		bcc $224e	 BCC RANG ;< CHECK START
.2244	d0 1a		bne $2260	 BNE ROUT ;> OUT OF RANGE
.2246	ad 45 10	lda $1045	 LDA WORKED ;GET LOW
.2249	cd 28 10	cmp $1028	 CMP EAGOL ;COMPARE
.224c	b0 12		bcs $2260	 BCS ROUT ;> OUT OF RANGE
.224e	ad 46 10	lda $1046	RANG LDA WORKED+1 ;GET HIGH
.2251	cd 27 10	cmp $1027	 CMP SAGOL+1 ;COMPARE
.2254	90 0a		bcc $2260	 BCC ROUT ;< OUT OF RANGE
.2256	ad 45 10	lda $1045	 LDA WORKED ;GET LOW
.2259	cd 26 10	cmp $1026	 CMP SAGOL ;COMPARE
.225c	90 02		bcc $2260	 BCC ROUT ;< OUT OF RANGE
.225e	18		clc		 CLC ;C=0 IN RANGE
.225f	60		rts		 RTS
.2260	38		sec		ROUT SEC ;C=1 OUT RANGE
.2261	60		rts		 RTS
.2262	ad ef 10	lda $10ef	INITIN LDA DATABE
.2265	8d 30 10	sta $1030	 STA TABINS
.2268	8d 32 10	sta $1032	 STA TABINE
.226b	ad f0 10	lda $10f0	 LDA DATABE+1
.226e	8d 31 10	sta $1031	 STA TABINS+1
.2271	8d 33 10	sta $1033	 STA TABINE+1
.2274	ad 30 10	lda $1030	INTSET LDA TABINS
.2277	8d 2e 10	sta $102e	 STA TABINP
.227a	ad 31 10	lda $1031	 LDA TABINS+1
.227d	8d 2f 10	sta $102f	 STA TABINP+1
.2280	60		rts		 RTS
.2281	ad 30 10	lda $1030	SAVINT LDA TABINS
.2284	8d 4b 10	sta $104b	 STA SAVES
.2287	ad 31 10	lda $1031	 LDA TABINS+1
.228a	8d 4c 10	sta $104c	 STA SAVES+1
.228d	ad 32 10	lda $1032	 LDA TABINE
.2290	8d 4d 10	sta $104d	 STA SAVEE
.2293	ad 33 10	lda $1033	 LDA TABINE+1
.2296	8d 4e 10	sta $104e	 STA SAVEE+1
.2299	60		rts		 RTS
.229a	ad 4b 10	lda $104b	RESINT LDA SAVES
.229d	8d 30 10	sta $1030	 STA TABINS
.22a0	ad 4c 10	lda $104c	 LDA SAVES+1
.22a3	8d 31 10	sta $1031	 STA TABINS+1
.22a6	ad 4d 10	lda $104d	 LDA SAVEE
.22a9	8d 32 10	sta $1032	 STA TABINE
.22ac	ad 4e 10	lda $104e	 LDA SAVEE+1
.22af	8d 33 10	sta $1033	 STA TABINE+1
.22b2	60		rts		 RTS
.22b3	38		sec		PUTI SEC
.22b4	ad 30 10	lda $1030	     LDA TABINS
.22b7	ed 32 10	sbc $1032	     SBC TABINE
.22ba	8d 51 10	sta $1051	     STA TEMP
.22bd	ad 31 10	lda $1031	     LDA TABINS+1
.22c0	ed 33 10	sbc $1033	     SBC TABINE+1
.22c3	0d 51 10	ora $1051	     ORA TEMP
.22c6	f0 05		beq $22cd	     BEQ PUIT
.22c8	20 1e 23	jsr $231e	     JSR INTCHK     ;IS ADDRESS IN TAB
.22cb	b0 23		bcs $22f0	     BCS INTEXT     ;IF SO EXIT
.22cd	ad 32 10	lda $1032	PUIT LDA TABINE     ;GET LOW END
.22d0	85 dd		sta $dd		     STA ZEROUR     ;STORE
.22d2	ad 33 10	lda $1033	     LDA TABINE+1   ;GET HIGH END
.22d5	85 de		sta $de		     STA ZEROUR+1   ;STORE
.22d7	a0 00		ldy #$00	     LDY #$00       ;OFFSET
.22d9	ad 45 10	lda $1045	     LDA WORKED     ;GET LOW ADDRESS
.22dc	91 dd		sta ($dd),y	     STA (ZEROUR),Y ;PUT IN TABLE
.22de	c8		iny		     INY            ;OFFSET TO HIGH
.22df	ad 46 10	lda $1046	     LDA WORKED+1   ;GET HIGH ADDRESS
.22e2	91 dd		sta ($dd),y	     STA (ZEROUR),Y ;PUT IN TABLE
.22e4	20 cb 20	jsr $20cb	     JSR SEMIC      ;PRINT ;
.22e7	20 c2 20	jsr $20c2	     JSR PWORKD     ;PRINT ADDRESS
.22ea	20 f2 22	jsr $22f2	     JSR INCIE      ;INC TO HIGH & LOW
.22ed	4c f2 22	jmp $22f2	     JMP INCIE      ;INC TO HIGH & LOW
=8944					INTEXT = *
.22f0	18		clc		     CLC            ;C=0 FOR NO MATCH
.22f1	60		rts		     RTS            ;RETURN
.22f2	ee 32 10	inc $1032	INCIE INC TABINE
.22f5	d0 03		bne $22fa	 BNE *+5
.22f7	ee 33 10	inc $1033	 INC TABINE+1
.22fa	ee 2e 10	inc $102e	INCI INC TABINP
.22fd	d0 03		bne $2302	 BNE *+5
.22ff	ee 2f 10	inc $102f	 INC TABINP+1
.2302	60		rts		 RTS
.2303	ad 2e 10	lda $102e	GETI LDA TABINP
.2306	85 dd		sta $dd		 STA ZEROUR
.2308	ad 2f 10	lda $102f	 LDA TABINP+1
.230b	85 de		sta $de		 STA ZEROUR+1
.230d	a0 00		ldy #$00	 LDY #$00
.230f	b1 dd		lda ($dd),y	 LDA (ZEROUR),Y
.2311	60		rts		 RTS
.2312	ad 22 10	lda $1022	INTCHA LDA SELECT
.2315	8d 45 10	sta $1045	 STA WORKED
.2318	ad 23 10	lda $1023	 LDA SELECT+1
.231b	8d 46 10	sta $1046	 STA WORKED+1
.231e	20 74 22	jsr $2274	INTCHK JSR INTSET
.2321	20 03 23	jsr $2303	INTCH  JSR GETI
.2324	8d 47 10	sta $1047	 STA WORKER
.2327	20 fa 22	jsr $22fa	 JSR INCI
.232a	20 03 23	jsr $2303	 JSR GETI
.232d	8d 48 10	sta $1048	 STA WORKER+1
.2330	38		sec		 SEC
.2331	ad 46 10	lda $1046	 LDA WORKED+1
.2334	ed 48 10	sbc $1048	 SBC WORKER+1
.2337	8d 51 10	sta $1051	 STA TEMP
.233a	ad 45 10	lda $1045	 LDA WORKED
.233d	ed 47 10	sbc $1047	 SBC WORKER
.2340	0d 51 10	ora $1051	 ORA TEMP
.2343	f0 17		beq $235c	 BEQ INTMAT
.2345	20 fa 22	jsr $22fa	 JSR INCI
.2348	ad 2f 10	lda $102f	 LDA TABINP+1
.234b	cd 33 10	cmp $1033	 CMP TABINE+1
.234e	90 d1		bcc $2321	 BCC INTCH
.2350	d0 08		bne $235a	 BNE INTEND
.2352	ad 2e 10	lda $102e	 LDA TABINP
.2355	cd 32 10	cmp $1032	 CMP TABINE
.2358	90 c7		bcc $2321	 BCC INTCH
.235a	18		clc		INTEND CLC
.235b	60		rts		 RTS
.235c	38		sec		INTMAT SEC
.235d	60		rts		 RTS
.235e	20 74 22	jsr $2274	SORT JSR INTSET ;SET POINTERS
.2361	ad 30 10	lda $1030	 LDA TABINS
.2364	8d 34 10	sta $1034	 STA SMALLS
.2367	8d 36 10	sta $1036	 STA SMALLP
.236a	ad 31 10	lda $1031	 LDA TABINS+1
.236d	8d 35 10	sta $1035	 STA SMALLS+1
.2370	8d 37 10	sta $1037	 STA SMALLP+1
.2373	20 03 23	jsr $2303	SORT1 JSR GETI
.2376	8d 51 10	sta $1051	 STA TEMP
.2379	20 fa 22	jsr $22fa	 JSR INCI
.237c	20 03 23	jsr $2303	 JSR GETI
.237f	8d 52 10	sta $1052	 STA TEMP+1
.2382	20 fa 22	jsr $22fa	SORT2 JSR INCI
.2385	ad 2e 10	lda $102e	 LDA TABINP
.2388	8d 36 10	sta $1036	 STA SMALLP
.238b	ad 2f 10	lda $102f	 LDA TABINP+1
.238e	8d 37 10	sta $1037	 STA SMALLP+1
.2391	20 03 23	jsr $2303	 JSR GETI
.2394	8d 45 10	sta $1045	 STA WORKED
.2397	20 fa 22	jsr $22fa	 JSR INCI
.239a	ad 2f 10	lda $102f	 LDA TABINP+1
.239d	cd 33 10	cmp $1033	 CMP TABINE+1
.23a0	90 0d		bcc $23af	 BCC T2
.23a2	d0 08		bne $23ac	 BNE S3
.23a4	ad 2e 10	lda $102e	 LDA TABINP
.23a7	cd 32 10	cmp $1032	 CMP TABINE
.23aa	90 03		bcc $23af	 BCC T2
.23ac	4c 04 24	jmp $2404	S3 JMP SORT3
.23af	20 03 23	jsr $2303	T2 JSR GETI
.23b2	8d 46 10	sta $1046	 STA WORKED+1
.23b5	cd 52 10	cmp $1052	 CMP TEMP+1
.23b8	90 0d		bcc $23c7	 BCC SMALL
.23ba	d0 08		bne $23c4	 BNE LARGE
.23bc	ad 45 10	lda $1045	 LDA WORKED
.23bf	cd 51 10	cmp $1051	 CMP TEMP
.23c2	90 03		bcc $23c7	 BCC SMALL
.23c4	4c 82 23	jmp $2382	LARGE JMP SORT2
.23c7	ad 34 10	lda $1034	SMALL LDA SMALLS
.23ca	85 dd		sta $dd		 STA ZEROUR
.23cc	ad 35 10	lda $1035	 LDA SMALLS+1
.23cf	85 de		sta $de		 STA ZEROUR+1
.23d1	a0 00		ldy #$00	 LDY #$00
.23d3	ad 45 10	lda $1045	 LDA WORKED
.23d6	91 dd		sta ($dd),y	 STA (ZEROUR),Y
.23d8	c8		iny		 INY
.23d9	ad 46 10	lda $1046	 LDA WORKED+1
.23dc	91 dd		sta ($dd),y	 STA (ZEROUR),Y
.23de	ad 36 10	lda $1036	 LDA SMALLP
.23e1	85 dd		sta $dd		 STA ZEROUR
.23e3	ad 37 10	lda $1037	 LDA SMALLP+1
.23e6	85 de		sta $de		 STA ZEROUR+1
.23e8	a0 00		ldy #$00	 LDY #$00
.23ea	ad 51 10	lda $1051	 LDA TEMP
.23ed	91 dd		sta ($dd),y	 STA (ZEROUR),Y
.23ef	c8		iny		 INY
.23f0	ad 52 10	lda $1052	 LDA TEMP+1
.23f3	91 dd		sta ($dd),y	 STA (ZEROUR),Y
.23f5	ad 34 10	lda $1034	 LDA SMALLS
.23f8	8d 2e 10	sta $102e	 STA TABINP
.23fb	ad 35 10	lda $1035	 LDA SMALLS+1
.23fe	8d 2f 10	sta $102f	 STA TABINP+1
.2401	4c 73 23	jmp $2373	 JMP SORT1
.2404	18		clc		SORT3 CLC
.2405	ad 34 10	lda $1034	 LDA SMALLS
.2408	69 02		adc #$02	 ADC #$02
.240a	8d 34 10	sta $1034	 STA SMALLS
.240d	8d 2e 10	sta $102e	 STA TABINP
.2410	ad 35 10	lda $1035	 LDA SMALLS+1
.2413	69 00		adc #$00	 ADC #$00
.2415	8d 35 10	sta $1035	 STA SMALLS+1
.2418	8d 2f 10	sta $102f	 STA TABINP+1
.241b	ad 35 10	lda $1035	 LDA SMALLS+1
.241e	cd 33 10	cmp $1033	 CMP TABINE+1
.2421	90 0a		bcc $242d	 BCC SORTOK
.2423	d0 0b		bne $2430	 BNE SORT4
.2425	ad 34 10	lda $1034	 LDA SMALLS
.2428	cd 32 10	cmp $1032	 CMP TABINE
.242b	b0 03		bcs $2430	 BCS SORT4
.242d	4c 73 23	jmp $2373	SORTOK JMP SORT1
.2430	4c 74 22	jmp $2274	SORT4 JMP INTSET
.2433	38		sec		INTPRT SEC
.2434	ad 30 10	lda $1030	 LDA TABINS
.2437	ed 32 10	sbc $1032	 SBC TABINE
.243a	8d 51 10	sta $1051	 STA TEMP
.243d	ad 31 10	lda $1031	 LDA TABINS+1
.2440	ed 33 10	sbc $1033	 SBC TABINE+1
.2443	0d 51 10	ora $1051	 ORA TEMP
.2446	d0 01		bne $2449	 BNE INTOUT
.2448	60		rts		 RTS
.2449	20 e8 1c	jsr $1ce8	INTOUT JSR HEADSY
.244c	20 5e 23	jsr $235e	 JSR SORT
.244f	a9 03		lda #$03	LOOP1 LDA #$03
.2451	8d 52 10	sta $1052	 STA SAVA
.2454	20 03 23	jsr $2303	INTPR JSR GETI
.2457	8d 45 10	sta $1045	 STA WORKED
.245a	20 fa 22	jsr $22fa	 JSR INCI
.245d	20 03 23	jsr $2303	 JSR GETI
.2460	8d 46 10	sta $1046	 STA WORKED+1
.2463	20 05 21	jsr $2105	 JSR SPACE
.2466	20 5c 2b	jsr $2b5c	 JSR SYMOP
.2469	90 0b		bcc $2476	 BCC INTPRS
.246b	20 f9 2b	jsr $2bf9	 JSR FIXSYM
.246e	a9 02		lda #$02	 LDA #$02
.2470	20 fa 20	jsr $20fa	 JSR SPACM
.2473	4c 7b 24	jmp $247b	 JMP INTPRM
.2476	a9 08		lda #$08	INTPRS LDA #$08
.2478	20 fa 20	jsr $20fa	 JSR SPACM
.247b	20 c2 20	jsr $20c2	INTPRM JSR PWORKD
.247e	20 fa 22	jsr $22fa	 JSR INCI
.2481	ad 2f 10	lda $102f	 LDA TABINP+1
.2484	cd 33 10	cmp $1033	 CMP TABINE+1
.2487	90 0a		bcc $2493	 BCC PRTOK
.2489	d0 15		bne $24a0	 BNE PREND
.248b	ad 2e 10	lda $102e	 LDA TABINP
.248e	cd 32 10	cmp $1032	 CMP TABINE
.2491	b0 0d		bcs $24a0	 BCS PREND
.2493	ce 52 10	dec $1052	PRTOK DEC SAVA
.2496	30 0b		bmi $24a3	 BMI LOOP2
.2498	a9 02		lda #$02	 LDA #$02
.249a	20 fa 20	jsr $20fa	 JSR SPACM
.249d	4c 54 24	jmp $2454	 JMP INTPR
.24a0	4c bd 1c	jmp $1cbd	PREND JMP NEXPTS
.24a3	20 bd 1c	jsr $1cbd	LOOP2 JSR NEXPTS
.24a6	4c 4f 24	jmp $244f	 JMP LOOP1

;******  Return to file: pdisass64.asm


;******  Processing file: asc.asm

.24a9	ad e9 10	lda $10e9	DATAOP LDA NDATA ;GET NUM TABLES
.24ac	f0 07		beq $24b5	 BEQ ENDAX ;IF ZERO EXIT
.24ae	a9 00		lda #$00	 LDA #$00 ;ZERO BYTE
.24b0	8d e7 10	sta $10e7	 STA CDATA ;SET FIRST TABLE
.24b3	f0 03		beq $24b8	 BEQ DATAO1 ;
.24b5	4c 99 25	jmp $2599	ENDAX JMP ENDDAT ;
.24b8	ad e7 10	lda $10e7	DATAO1 LDA CDATA ;CURRENT TABLE
.24bb	cd e9 10	cmp $10e9	 CMP NDATA ;LAST TABLE DONE
.24be	f0 f5		beq $24b5	 BEQ ENDAX ;IF SO EXIT
.24c0	0a		asl a		 ASL A ;CDATA*2
.24c1	0a		asl a		 ASL A ;CDATA*4
.24c2	18		clc		 CLC
.24c3	6d e7 10	adc $10e7	 ADC CDATA ;CDATA*5
.24c6	a8		tay		 TAY ;PUT INTO INDEX
.24c7	b9 f1 10	lda $10f1,y	 LDA TDATA,Y ;START LOW
.24ca	8d 47 10	sta $1047	 STA WORKER ;STORE
.24cd	c8		iny		 INY ;INC OFFSET
.24ce	b9 f1 10	lda $10f1,y	 LDA TDATA,Y ;START HIGH
.24d1	8d 48 10	sta $1048	 STA WORKER+1 ;STORE
.24d4	38		sec		 SEC ;C=1
.24d5	ad 47 10	lda $1047	 LDA WORKER ;
.24d8	ed 22 10	sbc $1022	 SBC SELECT ;
.24db	8d 51 10	sta $1051	 STA TEMP ;
.24de	ad 48 10	lda $1048	 LDA WORKER+1 ;
.24e1	ed 23 10	sbc $1023	 SBC SELECT+1 ;
.24e4	0d 51 10	ora $1051	 ORA TEMP ;
.24e7	f0 05		beq $24ee	 BEQ DATAO2 ;MATCH
.24e9	ee e7 10	inc $10e7	 INC CDATA ;NEXT TABLE
.24ec	d0 ca		bne $24b8	 BNE DATAO1 ;CHECK FOR MATCH
.24ee	c8		iny		DATAO2 INY ;INC OFFSET
.24ef	b9 f1 10	lda $10f1,y	 LDA TDATA,Y ;END LOW
.24f2	8d e4 10	sta $10e4	 STA EAS ;STORE
.24f5	c8		iny		 INY ;INC OFFSET
.24f6	b9 f1 10	lda $10f1,y	 LDA TDATA,Y ;END HIGH
.24f9	8d e5 10	sta $10e5	 STA EAS+1 ;STORE
.24fc	c8		iny		 INY ;INC OFFSET
.24fd	b9 f1 10	lda $10f1,y	 LDA TDATA,Y ;DATA TYPE
.2500	8d e6 10	sta $10e6	 STA TEXTER ;STORE
.2503	c9 53		cmp #$53	 CMP #'S'       ;IS IT SKIPPER
.2505	d0 23		bne $252a	 BNE ASCCCC ;
.2507	ad 12 10	lda $1012	 LDA PASS
.250a	cd 15 10	cmp $1015	 CMP CPASS
.250d	d0 1b		bne $252a	 BNE ASCCCC
.250f	ad e4 10	lda $10e4	 LDA EAS
.2512	8d 22 10	sta $1022	 STA SELECT
.2515	ad e5 10	lda $10e5	 LDA EAS+1
.2518	8d 23 10	sta $1023	 STA SELECT+1
.251b	20 23 21	jsr $2123	 JSR INCSL
.251e	20 3b 20	jsr $203b	 JSR ORGIN
.2521	20 42 21	jsr $2142	 JSR DECSL
.2524	20 61 20	jsr $2061	 JSR COMENT
.2527	4c 96 25	jmp $2596	 JMP DATUT
.252a	ad 12 10	lda $1012	ASCCCC LDA PASS
.252d	cd 14 10	cmp $1014	 CMP EPASS ;EXTERNAL
.2530	d0 0f		bne $2541	 BNE ASCKK
.2532	ad e4 10	lda $10e4	SKIPER LDA EAS
.2535	8d 22 10	sta $1022	 STA SELECT
.2538	ad e5 10	lda $10e5	 LDA EAS+1
.253b	8d 23 10	sta $1023	 STA SELECT+1
.253e	4c 96 25	jmp $2596	 JMP DATUT
.2541	ad 12 10	lda $1012	ASCKK LDA PASS ;GET PASS
.2544	cd 15 10	cmp $1015	 CMP CPASS ;IS IT LAST
.2547	d0 0e		bne $2557	 BNE ASCI1 ;NO PRINT
.2549	20 61 20	jsr $2061	 JSR COMENT ;COMMENT LINE
.254c	ad 12 10	lda $1012	ASCII LDA PASS ;GET PASS
.254f	cd 15 10	cmp $1015	 CMP CPASS ;IS IT LAST
.2552	d0 03		bne $2557	 BNE ASCI1 ;NO PRINT
.2554	20 05 22	jsr $2205	 JSR PRTDAT ;PRINT LINE
.2557	20 9c 25	jsr $259c	ASCI1 JSR ACHECK ;DIS ONE LINE
.255a	b0 29		bcs $2585	 BCS ASCIIQ ;IF EA STOP
.255c	20 e1 ff	jsr $ffe1	 JSR STOP
.255f	f0 24		beq $2585	 BEQ ASCIIQ
.2561	20 e4 ff	jsr $ffe4	 JSR GETIN
.2564	f0 e6		beq $254c	 BEQ ASCII
.2566	c9 20		cmp #$20	 CMP #' '
.2568	d0 e2		bne $254c	 BNE ASCII
.256a	ad 19 10	lda $1019	 LDA DEVICE
.256d	48		pha		 PHA
.256e	a9 03		lda #$03	 LDA #$03
.2570	8d 19 10	sta $1019	 STA DEVICE
.2573	a9 f8		lda #$f8	 LDA #<PMSG
.2575	a0 11		ldy #$11	 LDY #>PMSG
.2577	20 bb 1b	jsr $1bbb	 JSR STRPNT
.257a	68		pla		 PLA
.257b	8d 19 10	sta $1019	 STA DEVICE
.257e	20 e4 ff	jsr $ffe4	PAUS1 JSR GETIN
.2581	f0 fb		beq $257e	 BEQ PAUS1
.2583	d0 c7		bne $254c	 BNE ASCII
.2585	ad 12 10	lda $1012	ASCIIQ LDA PASS ;GET PASS
.2588	cd 15 10	cmp $1015	 CMP CPASS ;IS IT LAST
.258b	d0 09		bne $2596	 BNE DATUT ;EXIT
.258d	20 23 21	jsr $2123	 JSR INCSL
.2590	20 61 20	jsr $2061	 JSR COMENT ;COMMENT LINE
.2593	20 42 21	jsr $2142	 JSR DECSL
.2596	a9 ff		lda #$ff	DATUT LDA #$FF ;SET N=1
.2598	60		rts		 RTS ;RETURN
.2599	a9 00		lda #$00	ENDDAT LDA #$00 ;SET N=0
.259b	60		rts		 RTS ;RETURN
.259c	ad e6 10	lda $10e6	ACHECK LDA TEXTER ;GET DATA TYPE
.259f	c9 34		cmp #$34	 CMP #'4'         ;WORD-1
.25a1	f0 0b		beq $25ae	 BEQ AC0
.25a3	c9 33		cmp #$33	 CMP #'3'         ;DBYTE
.25a5	f0 0a		beq $25b1	 BEQ AC1
.25a7	c9 32		cmp #$32	 CMP #'2'         ;WORD
.25a9	f0 03		beq $25ae	 BEQ AC0
.25ab	4c b4 25	jmp $25b4	 JMP BYTES ;BYTE OR ASCII
.25ae	4c 70 26	jmp $2670	AC0 JMP WORDS ;WORD OR WORD-1
.25b1	4c 40 26	jmp $2640	AC1 JMP DBYTES ;DBYTES
.25b4	ad 12 10	lda $1012	BYTES LDA PASS ;GET PASS
.25b7	cd 15 10	cmp $1015	 CMP CPASS ;IS IT LAST
.25ba	d0 20		bne $25dc	 BNE BYTESX ;IF NOT EXIT
.25bc	20 92 21	jsr $2192	 JSR PRTONE ;PRINT BYTE
.25bf	20 8a 20	jsr $208a	 JSR PRAD ;PRINT ADDRESS
.25c2	a0 27		ldy #$27	 LDY #>MBYTE ;.BYTE
.25c4	a9 2c		lda #$2c	 LDA #<MBYTE ;
.25c6	20 bb 1b	jsr $1bbb	 JSR STRPNT ;PRINT IT
.25c9	ad e6 10	lda $10e6	 LDA TEXTER ;GET TYPE
.25cc	c9 30		cmp #$30	 CMP #'0'          ;ASCII
.25ce	f0 0f		beq $25df	 BEQ ALINE ;ASCII BYTES
.25d0	20 d0 20	jsr $20d0	 JSR DOLLAR ;PRINT $
.25d3	20 2c 21	jsr $212c	 JSR GETSL ;GET BYTE
.25d6	20 a5 1b	jsr $1ba5	 JSR PRBYT ;PRINT BYTE
.25d9	20 fe 1a	jsr $1afe	 JSR NEWLIN ;NEXT LINE
.25dc	4c 13 27	jmp $2713	BYTESX JMP NEXTBY ;NEXT BYTE
.25df	a9 00		lda #$00	ALINE LDA #$00 ;ZERO BYTE
.25e1	8d 51 10	sta $1051	 STA TEMP ;STORE IN COUNT
.25e4	20 2c 21	jsr $212c	 JSR GETSL ;GET BYTE
.25e7	20 34 26	jsr $2634	 JSR CASCII ;CHECK FOR ASCII
.25ea	b0 39		bcs $2625	 BCS NASCII ;IF NOT BRANCH
.25ec	a9 27		lda #$27	 LDA #"'"      ;PRINT ONE QUOTE
.25ee	20 11 1c	jsr $1c11	 JSR PCHAR ;PRINT IT
.25f1	20 2c 21	jsr $212c	ALOP JSR GETSL ;GET BYTE
.25f4	20 34 26	jsr $2634	 JSR CASCII ;IS IT ASCII
.25f7	b0 24		bcs $261d	 BCS EASCII ;IF NOT END LINE
.25f9	20 11 1c	jsr $1c11	 JSR PCHAR ;PRINT ASCII
.25fc	20 2c 21	jsr $212c	 JSR GETSL ; GET BYTE AGAIN
.25ff	c9 27		cmp #$27	 CMP #$27 ;'''
.2601	d0 03		bne $2606	 BNE Q00000
.2603	20 11 1c	jsr $1c11	 JSR PCHAR ;PRINT ASCII
=9734					Q00000 = *
.2606	20 13 27	jsr $2713	 JSR NEXTBY ;INC SELECT
.2609	b0 0d		bcs $2618	 BCS EASCI1 ;C=1 IF END
.260b	ee 51 10	inc $1051	 INC TEMP ;INC COUNT
.260e	ad 51 10	lda $1051	 LDA TEMP ;LOAD COUNT
.2611	c9 28		cmp #$28	 CMP #$28 ;40 CHAR
.2613	f0 08		beq $261d	 BEQ EASCII ;IF SO END
.2615	4c f1 25	jmp $25f1	 JMP ALOP ;NEXT
.2618	20 1d 26	jsr $261d	EASCI1 JSR EASCII
.261b	38		sec		 SEC
.261c	60		rts		 RTS
.261d	a9 27		lda #$27	EASCII LDA #"'" ;PRINT ONE QUOTE
.261f	20 11 1c	jsr $1c11	 JSR PCHAR ;
.2622	4c fe 1a	jmp $1afe	 JMP NEWLIN ;PRINT CR
.2625	20 d0 20	jsr $20d0	NASCII JSR DOLLAR ;PRINT $
.2628	20 2c 21	jsr $212c	 JSR GETSL ;GET BYTE
.262b	20 a5 1b	jsr $1ba5	 JSR PRBYT ;PRINT IT
.262e	20 fe 1a	jsr $1afe	 JSR NEWLIN ;PRINT CR
.2631	4c 13 27	jmp $2713	 JMP NEXTBY ;NEXT SL
.2634	c9 20		cmp #$20	CASCII CMP #$20 ;< SPACE
.2636	30 06		bmi $263e	 BMI NOASC ;IF LESS NOASCII
.2638	c9 60		cmp #$60	 CMP #$60 ;> _
.263a	b0 02		bcs $263e	 BCS NOASC ;IF GREATER NO
.263c	18		clc		 CLC ;CLEAR CARRY OK
.263d	60		rts		 RTS ;RETURN
.263e	38		sec		NOASC SEC ;SET CARRY BAD
.263f	60		rts		 RTS ;RETURN
.2640	ad 12 10	lda $1012	DBYTES LDA PASS ;CHECK PASS
.2643	cd 15 10	cmp $1015	 CMP CPASS ;LAST PASS
.2646	d0 25		bne $266d	 BNE DBYTEX ;EXIT
.2648	20 a8 21	jsr $21a8	 JSR PRTTWO ;PRINT 2 BYTES
.264b	20 8a 20	jsr $208a	 JSR PRAD ;PRINT ADDRESS
.264e	a0 27		ldy #$27	 LDY #>MDBYTE ;.DBYTE
.2650	a9 3c		lda #$3c	 LDA #<MDBYTE ;
.2652	20 bb 1b	jsr $1bbb	 JSR STRPNT ;PRINT IT
.2655	20 2c 21	jsr $212c	 JSR GETSL ;GET BYTE
.2658	8d 46 10	sta $1046	 STA WORKED+1 ;STORE
.265b	20 23 21	jsr $2123	 JSR INCSL ;GET BYTE
.265e	20 2c 21	jsr $212c	 JSR GETSL ;GET BYTE
.2661	8d 45 10	sta $1045	 STA WORKED ;STORE
.2664	20 d0 20	jsr $20d0	 JSR DOLLAR ;PRINT $
.2667	20 c2 20	jsr $20c2	 JSR PWORKD ;PRINT WORD
.266a	20 fe 1a	jsr $1afe	 JSR NEWLIN ;PRINT CR
.266d	4c 13 27	jmp $2713	DBYTEX JMP NEXTBY ;NEXT SL
.2670	ad 12 10	lda $1012	WORDS LDA PASS ;GET PASS
.2673	cd 15 10	cmp $1015	 CMP CPASS         ;LAST
.2676	d0 0d		bne $2685	 BNE WORD1 ;IF NOT BRANCH
.2678	20 a8 21	jsr $21a8	 JSR PRTTWO ;PRINT 2 BYTES
.267b	20 8a 20	jsr $208a	 JSR PRAD ;PRINT ADDRESS
.267e	a0 27		ldy #$27	 LDY #>MWORD ;.WORD
.2680	a9 34		lda #$34	 LDA #<MWORD ;
.2682	20 bb 1b	jsr $1bbb	 JSR STRPNT ;PRINT IT
.2685	20 2c 21	jsr $212c	WORD1 JSR GETSL ;GET BYTE
.2688	8d 45 10	sta $1045	 STA WORKED ;STORE BYTE
.268b	8d 36 10	sta $1036	 STA SMALLP ;STORE BYTE
.268e	20 23 21	jsr $2123	 JSR INCSL ;GET BYTE
.2691	20 2c 21	jsr $212c	 JSR GETSL ;GET BYTE
.2694	8d 46 10	sta $1046	 STA WORKED+1 ;STORE BYTE
.2697	8d 37 10	sta $1037	 STA SMALLP+1 ;STORE BYTE
.269a	ad e6 10	lda $10e6	 LDA TEXTER ;GET OPTION
.269d	c9 34		cmp #$34	 CMP #'4'          ;.WORD ADRS-1
.269f	f0 2a		beq $26cb	 BEQ WORDM ;BRANCH
.26a1	ad 12 10	lda $1012	 LDA PASS ;CHECK PASS
.26a4	cd 13 10	cmp $1013	 CMP IPASS  ;INTERNAL
.26a7	f0 16		beq $26bf	 BEQ WORDPT ;TABLE WORD
.26a9	cd 14 10	cmp $1014	 CMP EPASS
.26ac	f0 17		beq $26c5	 BEQ WORDSY
.26ae	20 5c 2b	jsr $2b5c	 JSR SYMOP ;CHECK SYMBOL
.26b1	b0 5a		bcs $270d	 BCS WORDS3 ;C=1 SYMBOL
.26b3	20 d0 20	jsr $20d0	 JSR DOLLAR ;PRINT $
.26b6	20 c2 20	jsr $20c2	 JSR PWORKD ;PRINT WORD
.26b9	20 fe 1a	jsr $1afe	 JSR NEWLIN ;PRINT CR
.26bc	4c 13 27	jmp $2713	WORDSX JMP NEXTBY ;NEXT SL
.26bf	20 b3 22	jsr $22b3	WORDPT JSR PUTI ;PUT IN TABLE
.26c2	4c 13 27	jmp $2713	 JMP NEXTBY ;NEXT SL
.26c5	20 5c 2b	jsr $2b5c	WORDSY JSR SYMOP
.26c8	4c 13 27	jmp $2713	 JMP NEXTBY
.26cb	18		clc		WORDM CLC
.26cc	ad 45 10	lda $1045	 LDA WORKED
.26cf	69 01		adc #$01	 ADC #$01
.26d1	8d 45 10	sta $1045	 STA WORKED
.26d4	ad 46 10	lda $1046	 LDA WORKED+1
.26d7	69 00		adc #$00	 ADC #$00
.26d9	8d 46 10	sta $1046	 STA WORKED+1
.26dc	ad 12 10	lda $1012	 LDA PASS ;CHECK PASS
.26df	cd 13 10	cmp $1013	 CMP IPASS ;INTERNAL
.26e2	f0 db		beq $26bf	 BEQ WORDPT ;TABLE WORD
.26e4	cd 14 10	cmp $1014	 CMP EPASS ;EXTERNAL
.26e7	f0 dc		beq $26c5	 BEQ WORDSY ;TABLE WORD
.26e9	20 5c 2b	jsr $2b5c	 JSR SYMOP ;CHECK SYMBOL
.26ec	90 0d		bcc $26fb	 BCC WORDS2 ;C=0 NO SYMBOL
.26ee	a9 2d		lda #$2d	 LDA #'-'
.26f0	20 11 1c	jsr $1c11	 JSR PCHAR
.26f3	a9 31		lda #$31	 LDA #'1'
.26f5	20 11 1c	jsr $1c11	 JSR PCHAR
.26f8	4c 0d 27	jmp $270d	 JMP WORDS3
.26fb	20 d0 20	jsr $20d0	WORDS2 JSR DOLLAR ;PRINT $
.26fe	ad 36 10	lda $1036	 LDA SMALLP
.2701	8d 45 10	sta $1045	 STA WORKED
.2704	ad 37 10	lda $1037	 LDA SMALLP+1
.2707	8d 46 10	sta $1046	 STA WORKED+1
.270a	20 c2 20	jsr $20c2	 JSR PWORKD ;PRINT WORD
.270d	20 fe 1a	jsr $1afe	WORDS3 JSR NEWLIN ;PRINT CR
.2710	4c 13 27	jmp $2713	WORDXX JMP NEXTBY ;NEXT SL
.2713	ad 23 10	lda $1023	NEXTBY LDA SELECT+1
.2716	cd e5 10	cmp $10e5	 CMP EAS+1
.2719	90 0a		bcc $2725	 BCC SBLOK
.271b	d0 0d		bne $272a	 BNE NOBINC
.271d	ad 22 10	lda $1022	 LDA SELECT
.2720	cd e4 10	cmp $10e4	 CMP EAS
.2723	b0 05		bcs $272a	 BCS NOBINC
.2725	20 23 21	jsr $2123	SBLOK JSR INCSL
.2728	18		clc		 CLC
.2729	60		rts		 RTS
.272a	38		sec		NOBINC SEC
.272b	60		rts		 RTS
>272c	20 2e 42 59 54 45 20 00		MBYTE .TEXT ' .BYTE ',0
>2734	20 2e 57 4f 52 44 20 00		MWORD .TEXT ' .WORD ',0
>273c	20 2e 44 42 59 54 45 20		MDBYTE .TEXT ' .DBYTE ',0
>2744	00

;******  Return to file: pdisass64.asm


;******  Processing file: table.asm

.2745	a2 03		ldx #$03	MNEMON LDX #3       ;3 CHARACTERS
.2747	8e 51 10	stx $1051	       STX TEMP     ;COUNTER
.274a	aa		tax		       TAX          ;CODE IS INDEX
.274b	bd c0 28	lda $28c0,x	       LDA MCODES,X ;GET OFFSET
.274e	aa		tax		       TAX          ;INDEX OFFSET
.274f	bd e8 27	lda $27e8,x	MNLOOP LDA MNAMES,X ;GET CHARACTER
.2752	f0 09		beq $275d	       BEQ ILLOP    ;ILLEGAL OPCODE MNEMONIC CHAR IS A NULL
.2754	8e 53 10	stx $1053	       STX SAVX     ;SAVE INDEX
.2757	20 11 1c	jsr $1c11	       JSR PCHAR    ;PRINT CHAR
.275a	ae 53 10	ldx $1053	       LDX SAVX     ;GET INDEX
=10077					ILLOP = *
.275d	e8		inx		       INX          ;NEXT CHAR
.275e	ce 51 10	dec $1051	       DEC TEMP     ;DEC COUNT
.2761	d0 ec		bne $274f	       BNE MNLOOP   ;LOOP TILL 0
.2763	60		rts		       RTS          ;RETURN
.2764	48		pha		PRTASS PHA ;STACK INDEX
.2765	20 05 22	jsr $2205	 JSR PRTDAT ;PRINT LINE DATA
.2768	68		pla		 PLA ;PULL INDEX
.2769	a8		tay		 TAY ;SAVE INDEX
.276a	a9 94		lda #$94	 LDA #<SUBP
.276c	a2 27		ldx #$27	 LDX #>SUBP
.276e	4c 7e 27	jmp $277e	 JMP GETOPE ;LOOK UP ROUTINE
.2771	a8		tay		OPERN1 TAY ;SAVE INDEX
.2772	a9 b0		lda #$b0	 LDA #<SUBS1
.2774	a2 27		ldx #$27	 LDX #>SUBS1
.2776	4c 7e 27	jmp $277e	 JMP GETOPE ;LOOK UP ROUTINE
.2779	a8		tay		OPERND TAY ;SAVE INDEX
.277a	a9 cc		lda #$cc	 LDA #<SUBS
.277c	a2 27		ldx #$27	 LDX #>SUBS
.277e	85 dd		sta $dd		GETOPE STA ZEROUR ;LOW TABLE
.2780	86 de		stx $de		 STX ZEROUR+1 ;HIGH TABLE
.2782	b9 c0 29	lda $29c0,y	 LDA MODES,Y ;GET OFFSET
.2785	a8		tay		 TAY ;INDEX OFFSET
.2786	b1 dd		lda ($dd),y	 LDA (ZEROUR),Y ;GET LOW BYTE
.2788	8d 4f 10	sta $104f	 STA ADRS ;STORE
.278b	c8		iny		 INY ;INC INDEX
.278c	b1 dd		lda ($dd),y	 LDA (ZEROUR),Y ;GET HIGH BYTE
.278e	8d 50 10	sta $1050	 STA ADRS+1 ;STORE
.2791	6c 4f 10	jmp ($104f)	 JMP (ADRS) ;INDIRECT JMP
=10132					SUBP = *     ; MODES
>2794	92 21				.WORD PRTONE ; 0  $00
>2796	92 21				.WORD PRTONE ; 2  $02
>2798	a8 21				.WORD PRTTWO ; 4  $04
>279a	a8 21				.WORD PRTTWO ; 6  $06
>279c	a8 21				.WORD PRTTWO ; 8  $08
>279e	a8 21				.WORD PRTTWO ; 10 $0A
>27a0	cd 21				.WORD PRTTHE ; 12 $0C
>27a2	cd 21				.WORD PRTTHE ; 14 $0E
>27a4	cd 21				.WORD PRTTHE ; 16 $10
>27a6	92 21				.WORD PRTONE ; 18 $12
>27a8	a8 21				.WORD PRTTWO ; 20 $14
>27aa	a8 21				.WORD PRTTWO ; 22 $16
>27ac	a8 21				.WORD PRTTWO ; 24 $18
>27ae	cd 21				.WORD PRTTHE ; 26 $1A
=10160					SUBS1 = *    ; MODES
>27b0	89 1f				.WORD IMPONE ; 0  $00
>27b2	89 1f				.WORD IMPONE ; 2  $02
>27b4	04 1f				.WORD IMMEDT ; 4  $04
>27b6	4d 1e				.WORD ONEBYT ; 6  $06
>27b8	4d 1e				.WORD ONEBYT ; 8  $08
>27ba	4d 1e				.WORD ONEBYT ; 10 $0A
>27bc	82 1e				.WORD TWOBYT ; 12 $0C
>27be	82 1e				.WORD TWOBYT ; 14 $0E
>27c0	82 1e				.WORD TWOBYT ; 16 $10
>27c2	89 1f				.WORD IMPONE ; 18 $12
>27c4	c0 1f				.WORD RELATV ; 20 $14
>27c6	4d 1e				.WORD ONEBYT ; 22 $16
>27c8	4d 1e				.WORD ONEBYT ; 24 $18
>27ca	82 1e				.WORD TWOBYT ; 26 $1A
=10188					SUBS  = *    ; MODES
>27cc	be 1e				.WORD ILLEGL ; 0  $00
>27ce	ff 1e				.WORD ACC    ; 2  $02
>27d0	04 1f				.WORD IMMEDT ; 4  $04
>27d2	3b 1f				.WORD ZEROPG ; 6  $06
>27d4	3e 1f				.WORD ZEROX  ; 8  $08
>27d6	44 1f				.WORD ZEROY  ; 10 $0A
>27d8	4b 1f				.WORD ABSLUT ; 12 $0C
>27da	70 1f				.WORD ABSX   ; 14 $0E
>27dc	76 1f				.WORD ABSY   ; 16 $10
>27de	7c 1f				.WORD IMPLID ; 18 $12
>27e0	c0 1f				.WORD RELATV ; 20 $14
>27e2	ab 1f				.WORD INDX   ; 22 $16
>27e4	b4 1f				.WORD INDY   ; 24 $18
>27e6	96 1f				.WORD INDRCT ; 26 $1A
=10216					MNAMES = *  ; MCODES
>27e8	00 00 00			.BYTE 0,0,0 ; 0   $00
>27eb	41 44 43			.TEXT 'ADC' ; 3   $03
>27ee	41 4e 44			.TEXT 'AND' ; 6   $06
>27f1	41 53 4c			.TEXT 'ASL' ; 9   $09
>27f4	42 43 43			.TEXT 'BCC' ; 12  $0C
>27f7	42 43 53			.TEXT 'BCS' ; 15  $0F
>27fa	42 45 51			.TEXT 'BEQ' ; 18  $12
>27fd	42 49 54			.TEXT 'BIT' ; 21  $15
>2800	42 4d 49			.TEXT 'BMI' ; 24  $18
>2803	42 4e 45			.TEXT 'BNE' ; 27  $1B
>2806	42 50 4c			.TEXT 'BPL' ; 30  $1E
>2809	42 52 4b			.TEXT 'BRK' ; 33  $21
>280c	42 56 43			.TEXT 'BVC' ; 36  $24
>280f	42 56 53			.TEXT 'BVS' ; 39  $27
>2812	43 4c 43			.TEXT 'CLC' ; 42  $2A
>2815	43 4c 44			.TEXT 'CLD' ; 45  $2D
>2818	43 4c 49			.TEXT 'CLI' ; 48  $30
>281b	43 4c 56			.TEXT 'CLV' ; 51  $33
>281e	43 4d 50			.TEXT 'CMP' ; 54  $36
>2821	43 50 58			.TEXT 'CPX' ; 57  $39
>2824	43 50 59			.TEXT 'CPY' ; 60  $3C
>2827	44 45 43			.TEXT 'DEC' ; 63  $3F
>282a	44 45 58			.TEXT 'DEX' ; 66  $42
>282d	44 45 59			.TEXT 'DEY' ; 69  $45
>2830	45 4f 52			.TEXT 'EOR' ; 72  $48
>2833	49 4e 43			.TEXT 'INC' ; 75  $4B
>2836	49 4e 58			.TEXT 'INX' ; 78  $4E
>2839	49 4e 59			.TEXT 'INY' ; 81  $51
>283c	4a 4d 50			.TEXT 'JMP' ; 84  $54
>283f	4a 53 52			.TEXT 'JSR' ; 87  $57
>2842	4c 44 41			.TEXT 'LDA' ; 90  $5A
>2845	4c 44 58			.TEXT 'LDX' ; 93  $5D
>2848	4c 44 59			.TEXT 'LDY' ; 96  $60
>284b	4c 53 52			.TEXT 'LSR' ; 99  $63
>284e	4e 4f 50			.TEXT 'NOP' ; 102 $66
>2851	4f 52 41			.TEXT 'ORA' ; 105 $69
>2854	50 48 41			.TEXT 'PHA' ; 108 $6C
>2857	50 48 50			.TEXT 'PHP' ; 111 $6F
>285a	50 4c 41			.TEXT 'PLA' ; 114 $72
>285d	50 4c 50			.TEXT 'PLP' ; 117 $75
>2860	52 4f 4c			.TEXT 'ROL' ; 120 $78
>2863	52 4f 52			.TEXT 'ROR' ; 123 $7B
>2866	52 54 49			.TEXT 'RTI' ; 126 $7E
>2869	52 54 53			.TEXT 'RTS' ; 129 $81
>286c	53 42 43			.TEXT 'SBC' ; 132 $84
>286f	53 45 43			.TEXT 'SEC' ; 135 $87
>2872	53 45 44			.TEXT 'SED' ; 138 $8A
>2875	53 45 49			.TEXT 'SEI' ; 141 $8D
>2878	53 54 41			.TEXT 'STA' ; 144 $90
>287b	53 54 58			.TEXT 'STX' ; 147 $93
>287e	53 54 59			.TEXT 'STY' ; 150 $96
>2881	54 41 58			.TEXT 'TAX' ; 153 $99
>2884	54 41 59			.TEXT 'TAY' ; 156 $9C
>2887	54 53 58			.TEXT 'TSX' ; 159 $9F
>288a	54 58 41			.TEXT 'TXA' ; 162 $A2
>288d	54 58 53			.TEXT 'TXS' ; 165 $A5
>2890	54 59 41			.TEXT 'TYA' ; 168 $A8
>2893	41 53 4f			.TEXT 'ASO' ; 171 $AB
>2896	52 4c 41			.TEXT 'RLA' ; 174 $AE
>2899	4c 53 45			.TEXT 'LSE' ; 177 $B1
>289c	52 52 41			.TEXT 'RRA' ; 180 $B4
>289f	41 58 53			.TEXT 'AXS' ; 183 $B7
>28a2	4c 41 58			.TEXT 'LAX' ; 186 $BA
>28a5	44 43 4d			.TEXT 'DCM' ; 189 $BD
>28a8	49 4e 53			.TEXT 'INS' ; 192 $C0
>28ab	41 4c 52			.TEXT 'ALR' ; 195 $C3
>28ae	41 52 52			.TEXT 'ARR' ; 198 $C6
>28b1	4f 41 4c			.TEXT 'OAL' ; 201 $C9
>28b4	53 41 58			.TEXT 'SAX' ; 204 $CC
>28b7	4e 4f 50			.TEXT 'NOP' ; 207 $CF
>28ba	53 4b 42			.TEXT 'SKB' ; 210 $D2
>28bd	53 4b 57			.TEXT 'SKW' ; 213 $D5
=10432					MCODES = *
>28c0	21 69 00 00 00 69 09 00		.BYTE $21,$69,$00,$00,$00,$69,$09,$00
>28c8	6f 69 09 00 00 69 09 00		.BYTE $6F,$69,$09,$00,$00,$69,$09,$00
>28d0	1e 69 00 00 00 69 09 00		.BYTE $1E,$69,$00,$00,$00,$69,$09,$00
>28d8	2a 69 00 00 00 69 09 00		.BYTE $2A,$69,$00,$00,$00,$69,$09,$00
>28e0	57 06 00 00 15 06 78 00		.BYTE $57,$06,$00,$00,$15,$06,$78,$00
>28e8	75 06 78 00 15 06 78 00		.BYTE $75,$06,$78,$00,$15,$06,$78,$00
>28f0	18 06 00 00 00 06 78 00		.BYTE $18,$06,$00,$00,$00,$06,$78,$00
>28f8	87 06 00 00 00 06 78 00		.BYTE $87,$06,$00,$00,$00,$06,$78,$00
>2900	7e 48 00 00 00 48 63 00		.BYTE $7E,$48,$00,$00,$00,$48,$63,$00
>2908	6c 48 63 00 54 48 63 00		.BYTE $6C,$48,$63,$00,$54,$48,$63,$00
>2910	24 48 00 00 00 48 63 00		.BYTE $24,$48,$00,$00,$00,$48,$63,$00
>2918	30 48 00 00 00 48 63 00		.BYTE $30,$48,$00,$00,$00,$48,$63,$00
>2920	81 03 00 00 00 03 7b 00		.BYTE $81,$03,$00,$00,$00,$03,$7B,$00
>2928	72 03 7b 00 54 03 7b 00		.BYTE $72,$03,$7B,$00,$54,$03,$7B,$00
>2930	27 03 00 00 00 03 7b 00		.BYTE $27,$03,$00,$00,$00,$03,$7B,$00
>2938	8d 03 00 00 00 03 7b 00		.BYTE $8D,$03,$00,$00,$00,$03,$7B,$00
>2940	00 90 00 00 96 90 93 00		.BYTE $00,$90,$00,$00,$96,$90,$93,$00
>2948	45 00 a2 00 96 90 93 00		.BYTE $45,$00,$A2,$00,$96,$90,$93,$00
>2950	0c 90 00 00 96 90 93 00		.BYTE $0C,$90,$00,$00,$96,$90,$93,$00
>2958	a8 90 a5 00 00 90 00 00		.BYTE $A8,$90,$A5,$00,$00,$90,$00,$00
>2960	60 5a 5d 00 60 5a 5d 00		.BYTE $60,$5A,$5D,$00,$60,$5A,$5D,$00
>2968	9c 5a 99 00 60 5a 5d 00		.BYTE $9C,$5A,$99,$00,$60,$5A,$5D,$00
>2970	0f 5a 00 00 60 5a 5d 00		.BYTE $0F,$5A,$00,$00,$60,$5A,$5D,$00
>2978	33 5a 9f 00 60 5a 5d 00		.BYTE $33,$5A,$9F,$00,$60,$5A,$5D,$00
>2980	3c 36 00 00 3c 36 3f 00		.BYTE $3C,$36,$00,$00,$3C,$36,$3F,$00
>2988	51 36 42 00 3c 36 3f 00		.BYTE $51,$36,$42,$00,$3C,$36,$3F,$00
>2990	1b 36 00 00 00 36 3f 00		.BYTE $1B,$36,$00,$00,$00,$36,$3F,$00
>2998	2d 36 00 00 00 36 3f 00		.BYTE $2D,$36,$00,$00,$00,$36,$3F,$00
>29a0	39 84 00 00 39 84 4b 00		.BYTE $39,$84,$00,$00,$39,$84,$4B,$00
>29a8	4e 84 66 00 39 84 4b 00		.BYTE $4E,$84,$66,$00,$39,$84,$4B,$00
>29b0	12 84 00 00 00 84 4b 00		.BYTE $12,$84,$00,$00,$00,$84,$4B,$00
>29b8	8a 84 00 00 00 84 4b 00		.BYTE $8A,$84,$00,$00,$00,$84,$4B,$00
=10688					MODES = *
>29c0	12 16 00 00 00 06 06 00		.BYTE 18,22,0,0,0,6,6,0
>29c8	12 04 02 00 00 0c 0c 00		.BYTE 18,4,2,0,0,12,12,0
>29d0	14 18 00 00 00 08 08 00		.BYTE 20,24,0,0,0,8,8,0
>29d8	12 10 00 00 00 0e 0e 00		.BYTE 18,16,0,0,0,14,14,0
>29e0	0c 16 00 00 06 06 06 00		.BYTE 12,22,0,0,6,6,6,0
>29e8	12 04 02 00 0c 0c 0c 00		.BYTE 18,4,2,0,12,12,12,0
>29f0	14 18 00 00 00 08 08 00		.BYTE 20,24,0,0,0,8,8,0
>29f8	12 10 00 00 00 0e 0e 00		.BYTE 18,16,0,0,0,14,14,0
>2a00	12 16 00 00 00 06 06 00		.BYTE 18,22,0,0,0,6,6,0
>2a08	12 04 02 00 0c 0c 0c 00		.BYTE 18,4,2,0,12,12,12,0
>2a10	14 18 00 00 00 08 08 00		.BYTE 20,24,0,0,0,8,8,0
>2a18	12 10 00 00 00 0e 0e 00		.BYTE 18,16,0,0,0,14,14,0
>2a20	12 16 00 00 00 06 06 00		.BYTE 18,22,0,0,0,6,6,0
>2a28	12 04 02 00 1a 0c 0c 00		.BYTE 18,4,2,0,26,12,12,0
>2a30	14 18 00 00 00 08 08 00		.BYTE 20,24,0,0,0,8,8,0
>2a38	12 10 00 00 00 0e 0e 00		.BYTE 18,16,0,0,0,14,14,0
>2a40	00 16 00 00 06 06 06 00		.BYTE 0,22,0,0,6,6,6,0
>2a48	12 00 12 00 0c 0c 0c 00		.BYTE 18,0,18,0,12,12,12,0
>2a50	14 18 00 00 08 08 0a 00		.BYTE 20,24,0,0,8,8,10,0
>2a58	12 10 12 00 00 0e 00 00		.BYTE 18,16,18,0,0,14,0,0
>2a60	04 16 04 00 06 06 06 00		.BYTE 4,22,4,0,6,6,6,0
>2a68	12 04 12 00 0c 0c 0c 00		.BYTE 18,4,18,0,12,12,12,0
>2a70	14 18 00 00 08 08 0a 00		.BYTE 20,24,0,0,8,8,10,0
>2a78	12 10 12 00 0e 0e 10 00		.BYTE 18,16,18,0,14,14,16,0
>2a80	04 16 00 00 06 06 06 00		.BYTE 4,22,0,0,6,6,6,0
>2a88	12 04 12 00 0c 0c 0c 00		.BYTE 18,4,18,0,12,12,12,0
>2a90	14 18 00 00 00 08 08 00		.BYTE 20,24,0,0,0,8,8,0
>2a98	12 10 00 00 00 0e 0e 00		.BYTE 18,16,0,0,0,14,14,0
>2aa0	04 16 00 00 06 06 06 00		.BYTE 4,22,0,0,6,6,6,0
>2aa8	12 04 12 00 0c 0c 0c 00		.BYTE 18,4,18,0,12,12,12,0
>2ab0	14 18 00 00 00 08 08 00		.BYTE 20,24,0,0,0,8,8,0
>2ab8	12 10 00 00 00 0e 0e 00		.BYTE 18,16,0,0,0,14,14,0

;******  Return to file: pdisass64.asm


;******  Processing file: symbol.asm

.2ac0	a9 2d		lda #$2d	SOP    LDA #<MSS1  ;LOW BYTE MESSAGE
.2ac2	a0 2e		ldy #$2e	       LDY #>MSS1  ;HIGH BYTE MESSAGE
.2ac4	20 bb 1b	jsr $1bbb	       JSR STRPNT  ;OUTPUT MESSAGE
.2ac7	20 83 1b	jsr $1b83	       JSR CRYS
.2aca	90 08		bcc $2ad4	       BCC SOP1    ;C=0 YES
.2acc	a9 00		lda #$00	       LDA #$00    ;SET SYMBLOIC FLAG
.2ace	8d 38 10	sta $1038	       STA SYMBOL  ;STORE FLAG
.2ad1	4c 1d 2b	jmp $2b1d	       JMP SY      ;FOR INTERNAL
.2ad4	a9 01		lda #$01	SOP1   LDA #$01    ;SET SYMBOLIC FLAG
.2ad6	8d 38 10	sta $1038	       STA SYMBOL  ;STORE FLAG
.2ad9	a9 70		lda #$70	 LDA #<STABLE
.2adb	8d 3b 10	sta $103b	 STA SYMBOS
.2ade	8d 39 10	sta $1039	 STA SYMBOP
.2ae1	a9 37		lda #$37	 LDA #>STABLE
.2ae3	8d 3c 10	sta $103c	 STA SYMBOS+1
.2ae6	8d 3a 10	sta $103a	 STA SYMBOP+1
.2ae9	a9 51		lda #$51	SYTAB LDA #<MSS2 ;LOW BYTE MESSAGE
.2aeb	a0 2e		ldy #$2e	 LDY #>MSS2 ;HIGH BYTE MESSAGE
.2aed	20 bb 1b	jsr $1bbb	 JSR STRPNT ;OUTPUT MESSAGE
.2af0	20 90 1b	jsr $1b90	 JSR CRNO ;GET KEY PRESS
.2af3	b0 28		bcs $2b1d	 BCS SY ;C=1 NO
.2af5	a9 95		lda #$95	 LDA #<MSS4
.2af7	a0 2e		ldy #$2e	 LDY #>MSS4
.2af9	20 bb 1b	jsr $1bbb	 JSR STRPNT
.2afc	20 90 1b	jsr $1b90	 JSR CRNO
.2aff	b0 0a		bcs $2b0b	 BCS SOP4
.2b01	a9 f3		lda #$f3	 LDA #<UTABLE
.2b03	8d 39 10	sta $1039	 STA SYMBOP
.2b06	a9 38		lda #$38	 LDA #>UTABLE
.2b08	8d 3a 10	sta $103a	 STA SYMBOP+1
.2b0b	20 b0 2c	jsr $2cb0	SOP4 JSR READXX ;READ FILE
.2b0e	b0 0d		bcs $2b1d	 BCS SY ;C=1 ERROR
.2b10	ad 39 10	lda $1039	 LDA SYMBOP ;XREF POINTER
.2b13	8d 3d 10	sta $103d	 STA SYMBOE
.2b16	ad 3a 10	lda $103a	 LDA SYMBOP+1
.2b19	8d 3e 10	sta $103e	 STA SYMBOE+1
.2b1c	60		rts		 RTS
.2b1d	a9 f3		lda #$f3	SY LDA #<UTABLE
.2b1f	8d 3d 10	sta $103d	 STA SYMBOE
.2b22	a9 38		lda #$38	 LDA #>UTABLE
.2b24	8d 3e 10	sta $103e	 STA SYMBOE+1
.2b27	60		rts		 RTS
.2b28	ad 3b 10	lda $103b	SSET LDA SYMBOS
.2b2b	8d 39 10	sta $1039	 STA SYMBOP
.2b2e	ad 3c 10	lda $103c	 LDA SYMBOS+1
.2b31	8d 3a 10	sta $103a	 STA SYMBOP+1
.2b34	60		rts		 RTS
.2b35	ad 32 10	lda $1032	EQUINT LDA TABINE
.2b38	8d 2e 10	sta $102e	 STA TABINP
.2b3b	8d 30 10	sta $1030	 STA TABINS
.2b3e	ad 33 10	lda $1033	 LDA TABINE+1
.2b41	8d 2f 10	sta $102f	 STA TABINP+1
.2b44	8d 31 10	sta $1031	 STA TABINS+1
.2b47	60		rts		 RTS
.2b48	ad 38 10	lda $1038	SYM LDA SYMBOL
.2b4b	f0 43		beq $2b90	 BEQ SYMEND
.2b4d	ad 22 10	lda $1022	 LDA SELECT ;COPY SELECT
.2b50	8d 45 10	sta $1045	 STA WORKED ;ADDRESS INTO
.2b53	ad 23 10	lda $1023	 LDA SELECT+1 ;WORKED
.2b56	8d 46 10	sta $1046	 STA WORKED+1
.2b59	4c 61 2b	jmp $2b61	 JMP SYM1 ;CHECK FOR MATCH
.2b5c	ad 38 10	lda $1038	SYMOP LDA SYMBOL
.2b5f	f0 2f		beq $2b90	 BEQ SYMEND
.2b61	20 28 2b	jsr $2b28	SYM1 JSR SSET
.2b64	20 31 2c	jsr $2c31	SYM2 JSR GETC
.2b67	8d 48 10	sta $1048	 STA WORKER+1
.2b6a	20 28 2c	jsr $2c28	 JSR INCC
.2b6d	20 31 2c	jsr $2c31	 JSR GETC
.2b70	8d 47 10	sta $1047	 STA WORKER
.2b73	38		sec		 SEC ;SET CARRY
.2b74	ad 47 10	lda $1047	 LDA WORKER
.2b77	ed 45 10	sbc $1045	 SBC WORKED ;SUB FROM LOW
.2b7a	8d 51 10	sta $1051	 STA TEMP ;STORE RESULT
.2b7d	ad 48 10	lda $1048	 LDA WORKER+1
.2b80	ed 46 10	sbc $1046	 SBC WORKED+1 ;SUB FROM HIGH
.2b83	0d 51 10	ora $1051	 ORA TEMP ;OR RESULTS
.2b86	f0 0a		beq $2b92	 BEQ MATCH ;CHECK FOR MATCH
.2b88	20 04 2c	jsr $2c04	 JSR NEXTC ;IF NOT NEXT
.2b8b	b0 03		bcs $2b90	 BCS SYMEND ;END OF TABLE?
.2b8d	4c 64 2b	jmp $2b64	 JMP SYM2 ;NO CHECK NEXT
.2b90	18		clc		SYMEND CLC ;NO MATCHES CLEAR
.2b91	60		rts		 RTS ;RETURN
.2b92	ad 12 10	lda $1012	MATCH LDA PASS ;CHECK PASS
.2b95	cd 15 10	cmp $1015	 CMP CPASS ;IS IT LAST
.2b98	f0 18		beq $2bb2	 BEQ MATCHS ;IF SO PRINT
.2b9a	cd 16 10	cmp $1016	 CMP SPASS
.2b9d	f0 3a		beq $2bd9	 BEQ MATCHT
.2b9f	20 3c 22	jsr $223c	 JSR RANGE ;SYMBOL IN RANGE
.2ba2	90 3f		bcc $2be3	 BCC MATEXT ;NO INTERNAL EQ
.2ba4	20 28 2c	jsr $2c28	 JSR INCC ;INC TO SYMBOL
.2ba7	20 31 2c	jsr $2c31	 JSR GETC ;GET FIRST CHAR
.2baa	c9 20		cmp #$20	 CMP #$20 ;SPACE
.2bac	f0 03		beq $2bb1	 BEQ MATONE ;NOT EQUATE
.2bae	4c b3 22	jmp $22b3	 JMP PUTI ;PUT IN EQUATE
.2bb1	60		rts		MATONE RTS ;RETURN
.2bb2	20 28 2c	jsr $2c28	MATCHS JSR INCC ;INC TO LABEL
.2bb5	20 31 2c	jsr $2c31	 JSR GETC ;GET CHARARCTER
.2bb8	c9 20		cmp #$20	 CMP #$20 ;IS IT SPACE
.2bba	d0 1d		bne $2bd9	 BNE MATCHT ;IF NOT GO ON
.2bbc	38		sec		 SEC ;SET CARRY
.2bbd	ad 39 10	lda $1039	 LDA SYMBOP ;GET LOW POINT
.2bc0	e9 09		sbc #$09	 SBC #$09 ;LAST SYMBOL
.2bc2	48		pha		 PHA ;PUSH ON STACK
.2bc3	ad 3a 10	lda $103a	 LDA SYMBOP+1 ;GET HIGH POINT
.2bc6	e9 00		sbc #$00	 SBC #$00 ;LAST SYMBOL
.2bc8	a8		tay		 TAY ;PUT IN Y
.2bc9	68		pla		 PLA ;GET LO POINT
.2bca	20 e4 2b	jsr $2be4	 JSR STRSYM ;PRINT SYMBOL
.2bcd	a9 2b		lda #$2b	 LDA #'+'         ;ASCII +
.2bcf	20 11 1c	jsr $1c11	 JSR PCHAR ;PRINT IT
.2bd2	a9 31		lda #$31	 LDA #'1'         ;ASCII 1
.2bd4	20 11 1c	jsr $1c11	 JSR PCHAR ;PRINT IT
.2bd7	38		sec		 SEC ;C=1 SYMBOL
.2bd8	60		rts		 RTS ;RETURN
.2bd9	ad 39 10	lda $1039	MATCHT LDA SYMBOP ;LOW BYTE LABEL
.2bdc	ac 3a 10	ldy $103a	 LDY SYMBOP+1 ;HIGH BYTE LABEL
.2bdf	20 e4 2b	jsr $2be4	 JSR STRSYM ;PRINT LABEL
.2be2	38		sec		 SEC ;MATCH SET CARRY
.2be3	60		rts		MATEXT RTS ;RETURN
.2be4	85 dd		sta $dd		STRSYM STA ZEROUR
.2be6	84 de		sty $de		 STY ZEROUR+1
.2be8	a0 00		ldy #$00	 LDY #$00
.2bea	b1 dd		lda ($dd),y	STRSY1 LDA (ZEROUR),Y
.2bec	f0 0a		beq $2bf8	 BEQ SYEXIT
.2bee	c9 20		cmp #$20	 CMP #$20
.2bf0	f0 06		beq $2bf8	 BEQ SYEXIT
.2bf2	20 11 1c	jsr $1c11	 JSR PCHAR
.2bf5	c8		iny		 INY
.2bf6	d0 f2		bne $2bea	 BNE STRSY1
.2bf8	60		rts		SYEXIT RTS
.2bf9	b1 dd		lda ($dd),y	FIXSYM LDA (ZEROUR),Y
.2bfb	f0 fb		beq $2bf8	 BEQ SYEXIT
.2bfd	20 11 1c	jsr $1c11	 JSR PCHAR
.2c00	c8		iny		 INY
.2c01	4c f9 2b	jmp $2bf9	 JMP FIXSYM
.2c04	18		clc		NEXTC CLC
.2c05	ad 39 10	lda $1039	 LDA SYMBOP
.2c08	69 08		adc #$08	 ADC #$08
.2c0a	8d 39 10	sta $1039	 STA SYMBOP
.2c0d	ad 3a 10	lda $103a	 LDA SYMBOP+1
.2c10	69 00		adc #$00	 ADC #$00
.2c12	8d 3a 10	sta $103a	 STA SYMBOP+1
.2c15	cd 3e 10	cmp $103e	 CMP SYMBOE+1
.2c18	90 0a		bcc $2c24	 BCC COK
.2c1a	d0 0a		bne $2c26	 BNE NCOK
.2c1c	ad 39 10	lda $1039	 LDA SYMBOP
.2c1f	cd 3d 10	cmp $103d	 CMP SYMBOE
.2c22	b0 02		bcs $2c26	 BCS NCOK
.2c24	18		clc		COK CLC
.2c25	60		rts		 RTS
.2c26	38		sec		NCOK SEC
.2c27	60		rts		 RTS
.2c28	ee 39 10	inc $1039	INCC INC SYMBOP
.2c2b	d0 03		bne $2c30	 BNE *+5
.2c2d	ee 3a 10	inc $103a	 INC SYMBOP+1
.2c30	60		rts		 RTS
.2c31	ad 39 10	lda $1039	GETC LDA SYMBOP
.2c34	85 dd		sta $dd		 STA ZEROUR
.2c36	ad 3a 10	lda $103a	 LDA SYMBOP+1
.2c39	85 de		sta $de		 STA ZEROUR+1
.2c3b	a0 00		ldy #$00	 LDY #$00
.2c3d	b1 dd		lda ($dd),y	 LDA (ZEROUR),Y
.2c3f	60		rts		 RTS
.2c40	38		sec		EQUPRT SEC
.2c41	ad 30 10	lda $1030	 LDA TABINS
.2c44	ed 32 10	sbc $1032	 SBC TABINE
.2c47	8d 51 10	sta $1051	 STA TEMP
.2c4a	ad 31 10	lda $1031	 LDA TABINS+1
.2c4d	ed 33 10	sbc $1033	 SBC TABINE+1
.2c50	0d 51 10	ora $1051	 ORA TEMP
.2c53	f0 55		beq $2caa	 BEQ EQUEND
.2c55	20 5e 23	jsr $235e	 JSR SORT
.2c58	20 61 20	jsr $2061	 JSR COMENT
.2c5b	20 29 22	jsr $2229	 JSR PRTOTH
.2c5e	a9 27		lda #$27	 LDA #<EQUATE
.2c60	a0 2f		ldy #$2f	 LDY #>EQUATE
.2c62	20 bb 1b	jsr $1bbb	 JSR STRPNT
.2c65	20 fe 1a	jsr $1afe	 JSR NEWLIN
.2c68	20 61 20	jsr $2061	 JSR COMENT
.2c6b	20 03 23	jsr $2303	EQUOP JSR GETI
.2c6e	8d 45 10	sta $1045	 STA WORKED
.2c71	20 fa 22	jsr $22fa	 JSR INCI
.2c74	20 03 23	jsr $2303	 JSR GETI
.2c77	8d 46 10	sta $1046	 STA WORKED+1
.2c7a	20 29 22	jsr $2229	 JSR PRTOTH
.2c7d	20 5c 2b	jsr $2b5c	 JSR SYMOP
.2c80	b0 03		bcs $2c85	 BCS EQUOP1
.2c82	20 bf 20	jsr $20bf	 JSR PWORK
.2c85	a9 3d		lda #$3d	EQUOP1 LDA #'='
.2c87	20 11 1c	jsr $1c11	 JSR PCHAR
.2c8a	a9 24		lda #$24	 LDA #'$'
.2c8c	20 11 1c	jsr $1c11	 JSR PCHAR
.2c8f	20 c2 20	jsr $20c2	 JSR PWORKD
.2c92	20 fe 1a	jsr $1afe	 JSR NEWLIN
.2c95	20 fa 22	jsr $22fa	 JSR INCI
.2c98	ad 2f 10	lda $102f	 LDA TABINP+1
.2c9b	cd 33 10	cmp $1033	 CMP TABINE+1
.2c9e	90 cb		bcc $2c6b	 BCC EQUOP
.2ca0	d0 08		bne $2caa	 BNE EQUEND
.2ca2	ad 2e 10	lda $102e	 LDA TABINP
.2ca5	cd 32 10	cmp $1032	 CMP TABINE
.2ca8	90 c1		bcc $2c6b	 BCC EQUOP
.2caa	20 61 20	jsr $2061	EQUEND JSR COMENT
.2cad	4c 9a 22	jmp $229a	 JMP RESINT
.2cb0	a9 77		lda #$77	READXX LDA #<MSS3
.2cb2	a0 2e		ldy #$2e	 LDY #>MSS3
.2cb4	20 bb 1b	jsr $1bbb	 JSR STRPNT
.2cb7	20 e4 ff	jsr $ffe4	SOP2 JSR GETIN
.2cba	f0 fb		beq $2cb7	 BEQ SOP2
.2cbc	c9 30		cmp #$30	 CMP #'0'
.2cbe	f0 04		beq $2cc4	 BEQ SOP3
.2cc0	c9 31		cmp #$31	 CMP #'1'
.2cc2	d0 f3		bne $2cb7	 BNE SOP2
.2cc4	20 d2 ff	jsr $ffd2	SOP3 JSR CHROUT
.2cc7	8d e6 10	sta $10e6	 STA TEXTER
.2cca	a9 b9		lda #$b9	 LDA #<LOADF
.2ccc	a0 2e		ldy #$2e	 LDY #>LOADF
.2cce	20 bb 1b	jsr $1bbb	 JSR STRPNT
.2cd1	20 1c 1b	jsr $1b1c	 JSR INSTNG
.2cd4	f0 20		beq $2cf6	 BEQ READXF
.2cd6	98		tya		 TYA
.2cd7	48		pha		 PHA
.2cd8	20 ab 14	jsr $14ab	 JSR INITD
.2cdb	68		pla		 PLA
.2cdc	a8		tay		 TAY
.2cdd	a2 00		ldx #$00	 LDX #$00
.2cdf	bd 29 2e	lda $2e29,x	XFILE1 LDA NAMS,X
.2ce2	99 5c 10	sta $105c,y	 STA BUF,Y
.2ce5	c8		iny		 INY
.2ce6	e8		inx		 INX
.2ce7	e0 04		cpx #$04	 CPX #$04
.2ce9	d0 f4		bne $2cdf	 BNE XFILE1
.2ceb	98		tya		 TYA
.2cec	a0 10		ldy #$10	 LDY #>BUF
.2cee	a2 5c		ldx #$5c	 LDX #<BUF
.2cf0	20 bd ff	jsr $ffbd	 JSR SETNAM
.2cf3	4c ff 2c	jmp $2cff	 JMP REOPEN
.2cf6	a9 0e		lda #$0e	READXF LDA #$0E
.2cf8	a0 2e		ldy #$2e	 LDY #>NAME
.2cfa	a2 1f		ldx #$1f	 LDX #<NAME
.2cfc	20 bd ff	jsr $ffbd	 JSR SETNAM
.2cff	a9 03		lda #$03	REOPEN LDA #$03
.2d01	a2 08		ldx #$08	 LDX #$08
.2d03	a0 03		ldy #$03	 LDY #$03
.2d05	20 ba ff	jsr $ffba	 JSR SETLFS
.2d08	20 c0 ff	jsr $ffc0	 JSR OPEN
.2d0b	20 c4 1a	jsr $1ac4	 JSR DISERR
.2d0e	b0 3f		bcs $2d4f	 BCS QUITXX
.2d10	a9 d7		lda #$d7	 LDA #<LOADM ;MSG LOW
.2d12	a0 2e		ldy #$2e	 LDY #>LOADM ;MSG HIGH
.2d14	20 bb 1b	jsr $1bbb	 JSR STRPNT ;OUTPUT MSG
.2d17	a9 00		lda #$00	 LDA #$00 ;COL COUNTER
.2d19	8d 51 10	sta $1051	 STA TEMP
.2d1c	20 60 2d	jsr $2d60	READX JSR READS ;INPUT SYMBOL
.2d1f	20 de 2d	jsr $2dde	 JSR PUTC
.2d22	20 06 2e	jsr $2e06	 JSR LINES ;SCREEN OUT
.2d25	20 e1 ff	jsr $ffe1	 JSR STOP
.2d28	f0 05		beq $2d2f	 BEQ QUITX
.2d2a	20 b7 ff	jsr $ffb7	 JSR READST
.2d2d	f0 ed		beq $2d1c	 BEQ READX
.2d2f	a9 03		lda #$03	QUITX LDA #$03
.2d31	20 c3 ff	jsr $ffc3	 JSR CLOSE
.2d34	20 cc ff	jsr $ffcc	 JSR CLRCHN
.2d37	20 f3 20	jsr $20f3	 JSR CRLF
.2d3a	ad 39 10	lda $1039	 LDA SYMBOP
.2d3d	8d 3d 10	sta $103d	 STA SYMBOE
.2d40	ad 3a 10	lda $103a	 LDA SYMBOP+1
.2d43	8d 3e 10	sta $103e	 STA SYMBOE+1
.2d46	a9 f5		lda #$f5	 LDA #<LOADC
.2d48	a0 2e		ldy #$2e	 LDY #>LOADC
.2d4a	20 bb 1b	jsr $1bbb	 JSR STRPNT
.2d4d	18		clc		 CLC
.2d4e	60		rts		 RTS
.2d4f	a9 03		lda #$03	QUITXX LDA #$03
.2d51	20 c3 ff	jsr $ffc3	 JSR CLOSE
.2d54	20 cc ff	jsr $ffcc	 JSR CLRCHN
.2d57	a9 0c		lda #$0c	 LDA #<LOADE
.2d59	a0 2f		ldy #$2f	 LDY #>LOADE
.2d5b	20 bb 1b	jsr $1bbb	 JSR STRPNT
.2d5e	38		sec		 SEC
.2d5f	60		rts		 RTS
.2d60	a2 03		ldx #$03	READS LDX #$03 ;FILE NUMBER
.2d62	20 c6 ff	jsr $ffc6	 JSR CHKIN ;FILE IS INPUT
.2d65	a0 02		ldy #$02	 LDY #$02 ;COUNTER
.2d67	20 cf ff	jsr $ffcf	 JSR CHRIN ;INPUT CHAR
.2d6a	99 da 10	sta $10da,y	 STA SYMBUF,Y ;1ST CHAR
.2d6d	20 d2 ff	jsr $ffd2	 JSR CHROUT ;PRITN IT
.2d70	c8		iny		 INY ;INC POINTER
.2d71	20 cf ff	jsr $ffcf	READY JSR CHRIN ;NEXT CHAR
.2d74	99 da 10	sta $10da,y	 STA SYMBUF,Y ;STORE
.2d77	20 d2 ff	jsr $ffd2	 JSR CHROUT ;PRINT IT
.2d7a	c8		iny		 INY ;INC OFFSET
.2d7b	c0 08		cpy #$08	 CPY #$08 ;8 IS FOR NULL
.2d7d	d0 f2		bne $2d71	 BNE READY ;BRANCH IF NOT
.2d7f	a9 00		lda #$00	 LDA #$00 ;NULL MARKER
.2d81	99 da 10	sta $10da,y	 STA SYMBUF,Y ;STORE AT END
.2d84	20 05 21	jsr $2105	 JSR SPACE ;PRINT SPACE
.2d87	20 d0 20	jsr $20d0	 JSR DOLLAR ;PRINT $ SIGN
.2d8a	ad e6 10	lda $10e6	 LDA TEXTER
.2d8d	c9 30		cmp #$30	 CMP #'0'
.2d8f	f0 2f		beq $2dc0	 BEQ STDREF
.2d91	a0 00		ldy #$00	 LDY #$00
.2d93	20 a0 2d	jsr $2da0	 JSR XGET
.2d96	c8		iny		 INY
.2d97	20 a0 2d	jsr $2da0	 JSR XGET
.2d9a	20 cf ff	jsr $ffcf	 JSR CHRIN ;GET $0D
.2d9d	4c cc ff	jmp $ffcc	 JMP CLRCHN
.2da0	20 cf ff	jsr $ffcf	XGET JSR CHRIN
.2da3	20 d2 ff	jsr $ffd2	 JSR CHROUT
.2da6	20 6c 1b	jsr $1b6c	 JSR BINARY
.2da9	0a		asl a		 ASL A
.2daa	0a		asl a		 ASL A
.2dab	0a		asl a		 ASL A
.2dac	0a		asl a		 ASL A
.2dad	99 da 10	sta $10da,y	 STA SYMBUF,Y
.2db0	20 cf ff	jsr $ffcf	 JSR CHRIN
.2db3	20 d2 ff	jsr $ffd2	 JSR CHROUT
.2db6	20 6c 1b	jsr $1b6c	 JSR BINARY
.2db9	19 da 10	ora $10da,y	 ORA SYMBUF,Y
.2dbc	99 da 10	sta $10da,y	 STA SYMBUF,Y
.2dbf	60		rts		 RTS
.2dc0	a0 00		ldy #$00	STDREF LDY #$00 ;ZERO OFFSET
.2dc2	20 cf ff	jsr $ffcf	 JSR CHRIN ;HIGH BYTES
.2dc5	99 da 10	sta $10da,y	 STA SYMBUF,Y ;
.2dc8	8c 54 10	sty $1054	 STY SAVY ;
.2dcb	20 a5 1b	jsr $1ba5	 JSR PRBYT ;
.2dce	ac 54 10	ldy $1054	 LDY SAVY ;
.2dd1	c8		iny		 INY ;
.2dd2	20 cf ff	jsr $ffcf	 JSR CHRIN ;LOW BYTE
.2dd5	99 da 10	sta $10da,y	 STA SYMBUF,Y ;
.2dd8	20 a5 1b	jsr $1ba5	 JSR PRBYT ;
.2ddb	4c cc ff	jmp $ffcc	 JMP CLRCHN ;KEYBOARD INPUT
.2dde	a0 00		ldy #$00	PUTC LDY #$00
.2de0	ad 39 10	lda $1039	 LDA SYMBOP
.2de3	85 dd		sta $dd		 STA ZEROUR
.2de5	ad 3a 10	lda $103a	 LDA SYMBOP+1
.2de8	85 de		sta $de		 STA ZEROUR+1
.2dea	b9 da 10	lda $10da,y	PUT LDA SYMBUF,Y
.2ded	91 dd		sta ($dd),y	 STA (ZEROUR),Y
.2def	c8		iny		 INY
.2df0	c0 09		cpy #$09	 CPY #$09
.2df2	d0 f6		bne $2dea	 BNE PUT
.2df4	18		clc		 CLC
.2df5	ad 39 10	lda $1039	 LDA SYMBOP
.2df8	69 09		adc #$09	 ADC #$09
.2dfa	8d 39 10	sta $1039	 STA SYMBOP
.2dfd	ad 3a 10	lda $103a	 LDA SYMBOP+1
.2e00	69 00		adc #$00	 ADC #$00
.2e02	8d 3a 10	sta $103a	 STA SYMBOP+1
.2e05	60		rts		 RTS
.2e06	ee 51 10	inc $1051	LINES INC TEMP
.2e09	a9 03		lda #$03	 LDA #$03
.2e0b	cd 51 10	cmp $1051	 CMP TEMP
.2e0e	f0 05		beq $2e15	 BEQ RESET
.2e10	a9 2e		lda #$2e	 LDA #'.'
.2e12	4c d2 ff	jmp $ffd2	 JMP CHROUT
.2e15	a9 00		lda #$00	RESET LDA #$00
.2e17	8d 51 10	sta $1051	 STA TEMP
.2e1a	a9 0d		lda #$0d	 LDA #$0D
.2e1c	4c d2 ff	jmp $ffd2	 JMP CHROUT
>2e1f	30 3a 58 52 4c 4c 30 30		NAME .TEXT '0:XRLL0000'
>2e27	30 30
>2e29	2c 53 2c 52			NAMS .TEXT ',S,R'
>2e2d	0d				MSS1 .BYTE $0D
>2e2e	53 59 4d 42 4f 4c 49 43		 .TEXT 'SYMBOLIC DISASSEMBLY (Y/CR OR N)? '
>2e36	20 44 49 53 41 53 53 45 4d 42 4c 59 20 28 59 2f
>2e46	43 52 20 4f 52 20 4e 29 3f 20
>2e50	00				 .BYTE 0
>2e51	0d				MSS2 .BYTE $0D
>2e52	4c 4f 41 44 20 55 53 45		 .TEXT 'LOAD USER SYMBOL TABLE (Y OR N/CR)? '
>2e5a	52 20 53 59 4d 42 4f 4c 20 54 41 42 4c 45 20 28
>2e6a	59 20 4f 52 20 4e 2f 43 52 29 3f 20
>2e76	00				 .BYTE 0
>2e77	0d				MSS3 .BYTE $0D
>2e78	46 4f 52 4d 41 54 20 30		 .TEXT 'FORMAT 0=STANDARD 1=ASCII : '
>2e80	3d 53 54 41 4e 44 41 52 44 20 31 3d 41 53 43 49
>2e90	49 20 3a 20
>2e94	00				 .BYTE 0
>2e95	0d				MSS4 .BYTE $0D
>2e96	41 50 50 45 4e 44 20 44		 .TEXT 'APPEND DEFAULT TABLE (Y OR N/CR)? '
>2e9e	45 46 41 55 4c 54 20 54 41 42 4c 45 20 28 59 20
>2eae	4f 52 20 4e 2f 43 52 29 3f 20
>2eb8	00				 .BYTE 0
>2eb9	0d				LOADF .BYTE $0D
>2eba	53 59 4d 42 4f 4c 20 54		.TEXT 'SYMBOL TABLE(CR OR D:NAME): '
>2ec2	41 42 4c 45 28 43 52 20 4f 52 20 44 3a 4e 41 4d
>2ed2	45 29 3a 20
>2ed6	00				.BYTE 0
>2ed7	0d 0d				LOADM .BYTE $0D,$0D
>2ed9	52 45 41 44 49 4e 47 20		.TEXT 'READING SYMBOL TABLE FILE'
>2ee1	53 59 4d 42 4f 4c 20 54 41 42 4c 45 20 46 49 4c
>2ef1	45
>2ef2	0d 0d				.BYTE $0D,$0D
>2ef4	00				.BYTE 0
>2ef5	0d				LOADC .BYTE $0D
>2ef6	53 59 4d 42 4f 4c 20 54		.TEXT 'SYMBOL TABLE LOADED'
>2efe	41 42 4c 45 20 4c 4f 41 44 45 44
>2f09	0d 0d				.BYTE $0D,$0D
>2f0b	00				.BYTE 0
>2f0c	0d				LOADE .BYTE $0D
>2f0d	53 59 4d 42 4f 4c 20 54		.TEXT 'SYMBOL TABLE NOT LOADED'
>2f15	41 42 4c 45 20 4e 4f 54 20 4c 4f 41 44 45 44
>2f24	0d 0d				.BYTE $0D,$0D
>2f26	00				.BYTE 0
>2f27	3b 20 45 58 54 45 52 4e		EQUATE .TEXT '; EXTERNAL ADDRESS EQUATES'
>2f2f	41 4c 20 41 44 44 52 45 53 53 20 45 51 55 41 54
>2f3f	45 53
>2f41	00				 .BYTE 0
=14146					BITOPT = *
.3742	a9 04		lda #$04	       LDA #<MSB1 ;TABLE TYPE
.3744	a0 19		ldy #$19	       LDY #>MSB1
.3746	20 bb 1b	jsr $1bbb	       JSR STRPNT
.3749	20 e4 ff	jsr $ffe4	BOP0   JSR GETIN
.374c	f0 fb		beq $3749	       BEQ BOP0
.374e	c9 30		cmp #$30	       CMP #'0'   ;STANDARD
.3750	f0 12		beq $3764	       BEQ BSC
.3752	c9 31		cmp #$31	       CMP #'1'   ;$2C ABS
.3754	f0 0e		beq $3764	       BEQ BSC
.3756	c9 32		cmp #$32	       CMP #'2'   ;$24 ZP
.3758	f0 0a		beq $3764	       BEQ BSC
.375a	c9 33		cmp #$33	       CMP #'3'   ;$2C AND $24
.375c	f0 06		beq $3764	       BEQ BSC
.375e	c9 0d		cmp #$0d	       CMP #$0D   ;STANDARD
.3760	d0 e7		bne $3749	       BNE BOP0
.3762	a9 30		lda #$30	       LDA #'0'
=14180					BSC = *
.3764	48		pha		       PHA        ;STASH INPUT
.3765	20 d2 ff	jsr $ffd2	       JSR CHROUT ;OUTPUT FEEDBACK
.3768	68		pla		       PLA        ;POP INPUT
.3769	49 30		eor #$30	       EOR #$30   ;MAKE A NUMBER
.376b	8d 6f 37	sta $376f	       STA BITFLG ;SET FLAG
.376e	60		rts		       RTS
=14191					BITFLG = *
>376f	aa				       .BYTE $AA
=14192					STABLE = *
>3770	ff 80 49 44 42 59 54 45		 .TEXT $FF,$80,'IDBYTE',0
>3778	00
>3779	ff 81 43 49 4e 54 20 20		 .TEXT $FF,$81,'CINT  ',0
>3781	00
>3782	ff 84 49 4f 49 4e 49 54		 .TEXT $FF,$84,'IOINIT',0
>378a	00
>378b	ff 87 52 41 4d 54 41 53		 .TEXT $FF,$87,'RAMTAS',0
>3793	00
>3794	ff 8a 52 45 53 54 4f 52		 .TEXT $FF,$8A,'RESTOR',0
>379c	00
>379d	ff 8d 56 45 43 54 4f 52		 .TEXT $FF,$8D,'VECTOR',0
>37a5	00
>37a6	ff 90 53 45 54 4d 53 47		 .TEXT $FF,$90,'SETMSG',0
>37ae	00
>37af	ff 93 53 45 43 4f 4e 44		 .TEXT $FF,$93,'SECOND',0
>37b7	00
>37b8	ff 96 54 4b 53 41 20 20		 .TEXT $FF,$96,'TKSA  ',0
>37c0	00
>37c1	ff 99 4d 45 4d 54 4f 50		 .TEXT $FF,$99,'MEMTOP',0
>37c9	00
>37ca	ff 9c 4d 45 4d 42 4f 54		 .TEXT $FF,$9C,'MEMBOT',0
>37d2	00
>37d3	ff 9f 53 43 4e 4b 45 59		 .TEXT $FF,$9F,'SCNKEY',0
>37db	00
>37dc	ff a2 53 45 54 54 4d 4f		 .TEXT $FF,$A2,'SETTMO',0
>37e4	00
>37e5	ff a5 41 43 50 54 52 20		 .TEXT $FF,$A5,'ACPTR ',0
>37ed	00
>37ee	ff a8 43 49 4f 55 54 20		 .TEXT $FF,$A8,'CIOUT ',0
>37f6	00
>37f7	ff ab 55 4e 54 4c 4b 20		 .TEXT $FF,$AB,'UNTLK ',0
>37ff	00
>3800	ff ae 55 4e 4c 53 4e 20		 .TEXT $FF,$AE,'UNLSN ',0
>3808	00
>3809	ff b1 4c 49 53 54 45 4e		 .TEXT $FF,$B1,'LISTEN',0
>3811	00
>3812	ff b4 54 41 4c 4b 20 20		 .TEXT $FF,$B4,'TALK  ',0
>381a	00
>381b	ff b7 52 45 41 44 53 54		 .TEXT $FF,$B7,'READST',0
>3823	00
>3824	ff ba 53 45 54 4c 46 53		 .TEXT $FF,$BA,'SETLFS',0
>382c	00
>382d	ff bd 53 45 54 4e 41 4d		 .TEXT $FF,$BD,'SETNAM',0
>3835	00
>3836	ff c0 4f 50 45 4e 20 20		 .TEXT $FF,$C0,'OPEN  ',0
>383e	00
>383f	ff c3 43 4c 4f 53 45 20		 .TEXT $FF,$C3,'CLOSE ',0
>3847	00
>3848	ff c6 43 48 4b 49 4e 20		 .TEXT $FF,$C6,'CHKIN ',0
>3850	00
>3851	ff c9 43 48 4b 4f 55 54		 .TEXT $FF,$C9,'CHKOUT',0
>3859	00
>385a	ff cc 43 4c 52 43 48 4e		 .TEXT $FF,$CC,'CLRCHN',0
>3862	00
>3863	ff cf 43 48 52 49 4e 20		 .TEXT $FF,$CF,'CHRIN ',0
>386b	00
>386c	ff d2 43 48 52 4f 55 54		 .TEXT $FF,$D2,'CHROUT',0
>3874	00
>3875	ff d5 4c 4f 41 44 20 20		 .TEXT $FF,$D5,'LOAD  ',0
>387d	00
>387e	ff d8 53 41 56 45 20 20		 .TEXT $FF,$D8,'SAVE  ',0
>3886	00
>3887	ff db 53 45 54 54 49 4d		 .TEXT $FF,$DB,'SETTIM',0
>388f	00
>3890	ff de 52 44 54 49 4d 20		 .TEXT $FF,$DE,'RDTIM ',0
>3898	00
>3899	ff e1 53 54 4f 50 20 20		 .TEXT $FF,$E1,'STOP  ',0
>38a1	00
>38a2	ff e4 47 45 54 49 4e 20		 .TEXT $FF,$E4,'GETIN ',0
>38aa	00
>38ab	ff e7 43 4c 41 4c 4c 20		 .TEXT $FF,$E7,'CLALL ',0
>38b3	00
>38b4	ff ea 55 44 54 49 4d 20		 .TEXT $FF,$EA,'UDTIM ',0
>38bc	00
>38bd	ff ed 53 43 52 45 45 4e		 .TEXT $FF,$ED,'SCREEN',0
>38c5	00
>38c6	ff f0 50 4c 4f 54 20 20		 .TEXT $FF,$F0,'PLOT  ',0
>38ce	00
>38cf	ff f3 49 4f 42 41 53 45		 .TEXT $FF,$F3,'IOBASE',0
>38d7	00
>38d8	ff fa 4e 4d 49 56 45 43		 .TEXT $FF,$FA,'NMIVEC',0
>38e0	00
>38e1	ff fc 52 45 53 56 45 43		 .TEXT $FF,$FC,'RESVEC',0
>38e9	00
>38ea	ff fe 49 52 51 56 45 43		 .TEXT $FF,$FE,'IRQVEC',0
>38f2	00
>38f3	00				UTABLE .BYTE 0

;******  Return to file: pdisass64.asm


;******  End of listing
